msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:24\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/spines_api.po\n"
"X-Crowdin-File-ID: 1954\n"
"Language: es_ES\n"

#: ../../api/spines_api.rst:3
msgid "``matplotlib.spines``"
msgstr ""

#: matplotlib.spines.Spine:1 of
msgid "Bases: :py:class:`matplotlib.patches.Patch`"
msgstr ""

#: matplotlib.spines.Spine:2 of
msgid "An axis spine -- the line noting the data area boundaries."
msgstr ""

#: matplotlib.spines.Spine:4 of
msgid "Spines are the lines connecting the axis tick marks and noting the boundaries of the data area. They can be placed at arbitrary positions. See `~.Spine.set_position` for more information."
msgstr ""

#: matplotlib.spines.Spine:8 of
msgid "The default position is ``('outward', 0)``."
msgstr ""

#: matplotlib.spines.Spine:10 of
msgid "Spines are subclasses of `.Patch`, and inherit much of their behavior."
msgstr ""

#: matplotlib.spines.Spine:12 of
msgid "Spines draw a line, a circle, or an arc depending if `~.Spine.set_patch_line`, `~.Spine.set_patch_circle`, or `~.Spine.set_patch_arc` has been called. Line-like is the default."
msgstr ""

#: matplotlib.spines.Spine matplotlib.spines.Spine.draw
#: matplotlib.spines.Spine.set_bounds matplotlib.spines.Spine.set_color of
msgid "Parameters"
msgstr ""

#: matplotlib.spines.Spine:40 of
msgid "**axes** : `~matplotlib.axes.Axes`"
msgstr ""

#: matplotlib.spines.Spine:39 of
msgid "Axes"
msgstr ""

#: matplotlib.spines.Spine:40 of
msgid "The `~.axes.Axes` instance containing the spine."
msgstr ""

#: matplotlib.spines.Spine:43 of
msgid "**spine_type**"
msgstr ""

#: matplotlib.artist.Spine.set:26 matplotlib.artist.Spine.set:42
#: matplotlib.spines.Spine:75 matplotlib.spines.Spine:88 of
msgid "str"
msgstr ""

#: matplotlib.spines.Spine:43 of
msgid "The spine type."
msgstr ""

#: matplotlib.spines.Spine:49 of
msgid "**path** : `~matplotlib.path.Path`"
msgstr ""

#: matplotlib.spines.Spine:48 of
msgid "Path"
msgstr ""

#: matplotlib.spines.Spine:46 of
msgid "The `.Path` instance used to draw the spine."
msgstr ""

#: matplotlib.spines.Spine of
msgid "Other Parameters"
msgstr ""

#: matplotlib.spines.Spine:100 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.spines.Spine:54 of
msgid "Valid keyword arguments are:"
msgstr ""

#: matplotlib.artist.Spine.set:10 matplotlib.spines.Spine:60 of
msgid "Property"
msgstr ""

#: matplotlib.artist.Spine.set:10 matplotlib.spines.Spine:60 of
msgid "Description"
msgstr ""

#: matplotlib.artist.Spine.set:12 matplotlib.spines.Spine:62 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.artist.Spine.set:12 matplotlib.spines.Spine:62 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.artist.Spine.set:13 matplotlib.spines.Spine:63 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ""

#: matplotlib.artist.Spine.set:33 matplotlib.artist.Spine.set:34
#: matplotlib.artist.Spine.set:37 matplotlib.spines.Spine:63 of
msgid "unknown"
msgstr ""

#: matplotlib.artist.Spine.set:14 matplotlib.spines.Spine:64 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.artist.Spine.set:14 matplotlib.artist.Spine.set:19
#: matplotlib.artist.Spine.set:25 matplotlib.artist.Spine.set:28
#: matplotlib.artist.Spine.set:38 matplotlib.artist.Spine.set:43
#: matplotlib.spines.Spine:64 matplotlib.spines.Spine:68
#: matplotlib.spines.Spine:74 matplotlib.spines.Spine:77
#: matplotlib.spines.Spine:84 matplotlib.spines.Spine:89 of
msgid "bool"
msgstr ""

#: matplotlib.artist.Spine.set:15 matplotlib.spines.Spine:65 of
msgid ":meth:`antialiased <matplotlib.patches.Patch.set_antialiased>` or aa"
msgstr ""

#: matplotlib.artist.Spine.set:15 matplotlib.artist.Spine.set:40
#: matplotlib.spines.Spine:65 matplotlib.spines.Spine:86 of
msgid "bool or None"
msgstr ""

#: matplotlib.artist.Spine.set:17 matplotlib.spines.Spine:66 of
msgid ":meth:`capstyle <matplotlib.patches.Patch.set_capstyle>`"
msgstr ""

#: matplotlib.artist.Spine.set:17 matplotlib.spines.Spine:66 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr ""

#: matplotlib.artist.Spine.set:18 matplotlib.spines.Spine:67 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.artist.Spine.set:18 matplotlib.spines.Spine:67 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.artist.Spine.set:19 matplotlib.spines.Spine:68 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.artist.Spine.set:20 matplotlib.spines.Spine:69 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.artist.Spine.set:20 matplotlib.spines.Spine:69 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.spines.Spine:70 of
msgid ":meth:`color <matplotlib.patches.Patch.set_color>`"
msgstr ""

#: matplotlib.artist.Spine.set:21 matplotlib.spines.Spine:70 of
msgid "color"
msgstr ""

#: matplotlib.artist.Spine.set:22 matplotlib.spines.Spine:71 of
msgid ":meth:`edgecolor <matplotlib.patches.Patch.set_edgecolor>` or ec"
msgstr ""

#: matplotlib.artist.Spine.set:22 matplotlib.artist.Spine.set:23
#: matplotlib.spines.Spine:71 matplotlib.spines.Spine:72 of
msgid "color or None"
msgstr ""

#: matplotlib.artist.Spine.set:23 matplotlib.spines.Spine:72 of
msgid ":meth:`facecolor <matplotlib.patches.Patch.set_facecolor>` or fc"
msgstr ""

#: matplotlib.artist.Spine.set:24 matplotlib.spines.Spine:73 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.artist.Spine.set:24 matplotlib.spines.Spine:73 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.artist.Spine.set:25 matplotlib.spines.Spine:74 of
msgid ":meth:`fill <matplotlib.patches.Patch.set_fill>`"
msgstr ""

#: matplotlib.artist.Spine.set:26 matplotlib.spines.Spine:75 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.artist.Spine.set:27 matplotlib.spines.Spine:76 of
msgid ":meth:`hatch <matplotlib.patches.Patch.set_hatch>`"
msgstr ""

#: matplotlib.artist.Spine.set:27 matplotlib.spines.Spine:76 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr ""

#: matplotlib.artist.Spine.set:28 matplotlib.spines.Spine:77 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.artist.Spine.set:29 matplotlib.spines.Spine:78 of
msgid ":meth:`joinstyle <matplotlib.patches.Patch.set_joinstyle>`"
msgstr ""

#: matplotlib.artist.Spine.set:29 matplotlib.spines.Spine:78 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr ""

#: matplotlib.artist.Spine.set:30 matplotlib.spines.Spine:79 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.artist.Spine.set:30 matplotlib.spines.Spine:79 of
msgid "object"
msgstr ""

#: matplotlib.artist.Spine.set:31 matplotlib.spines.Spine:80 of
msgid ":meth:`linestyle <matplotlib.patches.Patch.set_linestyle>` or ls"
msgstr ""

#: matplotlib.artist.Spine.set:31 matplotlib.spines.Spine:80 of
msgid "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"
msgstr ""

#: matplotlib.artist.Spine.set:32 matplotlib.spines.Spine:81 of
msgid ":meth:`linewidth <matplotlib.patches.Patch.set_linewidth>` or lw"
msgstr ""

#: matplotlib.artist.Spine.set:32 matplotlib.spines.Spine:81 of
msgid "float or None"
msgstr ""

#: matplotlib.artist.Spine.set:35 matplotlib.spines.Spine:82 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.artist.Spine.set:35 matplotlib.spines.Spine:82 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.artist.Spine.set:36 matplotlib.spines.Spine:83 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.artist.Spine.set:36 matplotlib.spines.Spine:83 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.artist.Spine.set:38 matplotlib.spines.Spine:84 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.artist.Spine.set:39 matplotlib.spines.Spine:85 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.artist.Spine.set:39 matplotlib.spines.Spine:85 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.artist.Spine.set:40 matplotlib.spines.Spine:86 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.artist.Spine.set:41 matplotlib.spines.Spine:87 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.artist.Spine.set:41 matplotlib.spines.Spine:87 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.artist.Spine.set:42 matplotlib.spines.Spine:88 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.artist.Spine.set:43 matplotlib.spines.Spine:89 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.artist.Spine.set:44 matplotlib.spines.Spine:90 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: matplotlib.artist.Spine.set:44 matplotlib.spines.Spine:90 of
msgid "float"
msgstr ""

#: matplotlib.spines.Spine.arc_spine:2 of
msgid "Create and return an arc `Spine`."
msgstr ""

#: matplotlib.spines.Spine.circular_spine:2 of
msgid "Create and return a circular `Spine`."
msgstr ""

#: matplotlib.spines.Spine.cla:2 of
msgid "[*Deprecated*]"
msgstr ""

#: matplotlib.spines.Spine.cla:15 matplotlib.spines.Spine.draw:21
#: matplotlib.spines.Spine.set_color:19 of
msgid "Notes"
msgstr ""

#: matplotlib.spines.Spine.cla:16 of
msgid "\\"
msgstr ""

#: matplotlib.spines.Spine.clear:2 of
msgid "Clear the current spine."
msgstr ""

#: matplotlib.spines.Spine.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr ""

#: matplotlib.spines.Spine.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr ""

#: matplotlib.spines.Spine.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr ""

#: matplotlib.spines.Spine.draw:17 of
msgid "RendererBase subclass."
msgstr ""

#: matplotlib.spines.Spine.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr ""

#: matplotlib.spines.Spine.get_bounds:2 of
msgid "Get the bounds of the spine."
msgstr ""

#: matplotlib.spines.Spine.get_patch_transform:2 of
msgid "Return the `~.transforms.Transform` instance mapping patch coordinates to data coordinates."
msgstr ""

#: matplotlib.spines.Spine.get_patch_transform:5 of
msgid "For example, one may define a patch of a circle which represents a radius of 5 by providing coordinates for a unit circle, and a transform which scales the coordinates (the patch coordinate) by 5."
msgstr ""

#: matplotlib.spines.Spine.get_path:2 of
msgid "Return the path of this patch."
msgstr ""

#: matplotlib.spines.Spine.get_position:2 of
msgid "Return the spine position."
msgstr ""

#: matplotlib.spines.Spine.get_spine_transform:2 of
msgid "Return the spine transform."
msgstr ""

#: matplotlib.spines.Spine.get_window_extent:2 of
msgid "Return the window extent of the spines in display space, including padding for ticks (but not their labels)"
msgstr ""

#: matplotlib.spines.Spine.get_window_extent:17 of
msgid ":obj:`matplotlib.axes.Axes.get_tightbbox`"
msgstr ""

#: matplotlib.spines.Spine.get_window_extent:19 of
msgid ":obj:`matplotlib.axes.Axes.get_window_extent`"
msgstr ""

#: matplotlib.spines.Spine.linear_spine:2 of
msgid "Create and return a linear `Spine`."
msgstr ""

#: matplotlib.spines.Spine.register_axis:2 of
msgid "Register an axis."
msgstr ""

#: matplotlib.spines.Spine.register_axis:4 of
msgid "An axis should be registered with its corresponding spine from the Axes instance. This allows the spine to clear any axis properties when needed."
msgstr ""

#: matplotlib.artist.Spine.set:2 of
msgid "Set multiple properties at once."
msgstr ""

#: matplotlib.artist.Spine.set:4 of
msgid "Supported properties are"
msgstr ""

#: matplotlib.artist.Spine.set:13 of
msgid "scalar or None"
msgstr ""

#: matplotlib.artist.Spine.set:16 of
msgid ":meth:`bounds <matplotlib.spines.Spine.set_bounds>`"
msgstr ""

#: matplotlib.artist.Spine.set:16 of
msgid "(low: float, high: float)"
msgstr ""

#: matplotlib.artist.Spine.set:21 of
msgid ":meth:`color <matplotlib.spines.Spine.set_color>`"
msgstr ""

#: matplotlib.artist.Spine.set:33 of
msgid ":meth:`patch_arc <matplotlib.spines.Spine.set_patch_arc>`"
msgstr ""

#: matplotlib.artist.Spine.set:34 of
msgid ":meth:`patch_circle <matplotlib.spines.Spine.set_patch_circle>`"
msgstr ""

#: matplotlib.artist.Spine.set:37 of
msgid ":meth:`position <matplotlib.spines.Spine.set_position>`"
msgstr ""

#: matplotlib.spines.Spine.set_bounds:2 of
msgid "Set the spine bounds."
msgstr ""

#: matplotlib.spines.Spine.set_bounds:13 of
msgid "**low**"
msgstr ""

#: of
msgid "float or None, optional"
msgstr ""

#: matplotlib.spines.Spine.set_bounds:8 of
msgid "The lower spine bound. Passing *None* leaves the limit unchanged."
msgstr ""

#: matplotlib.spines.Spine.set_bounds:10 of
msgid "The bounds may also be passed as the tuple (*low*, *high*) as the first positional argument."
msgstr ""

#: matplotlib.spines.Spine.set_bounds:29 of
msgid "**high**"
msgstr ""

#: matplotlib.spines.Spine.set_bounds:16 of
msgid "The higher spine bound. Passing *None* leaves the limit unchanged."
msgstr ""

#: matplotlib.spines.Spine.set_color:2 of
msgid "Set the edgecolor."
msgstr ""

#: matplotlib.spines.Spine.set_color:16 of
msgid "**c**"
msgstr ""

#: matplotlib.spines.Spine.set_color:20 of
msgid "This method does not modify the facecolor (which defaults to \"none\"), unlike the `.Patch.set_color` method defined in the parent class.  Use `.Patch.set_facecolor` to set the facecolor."
msgstr ""

#: matplotlib.spines.Spine.set_patch_arc:2 of
msgid "Set the spine to be arc-like."
msgstr ""

#: matplotlib.spines.Spine.set_patch_circle:2 of
msgid "Set the spine to be circular."
msgstr ""

#: matplotlib.spines.Spine.set_patch_line:2 of
msgid "Set the spine to be linear."
msgstr ""

#: matplotlib.spines.Spine.set_position:2 of
msgid "Set the position of the spine."
msgstr ""

#: matplotlib.spines.Spine.set_position:4 of
msgid "Spine position is specified by a 2 tuple of (position type, amount). The position types are:"
msgstr ""

#: matplotlib.spines.Spine.set_position:7 of
msgid "'outward': place the spine out from the data area by the specified number of points. (Negative values place the spine inwards.)"
msgstr ""

#: matplotlib.spines.Spine.set_position:9 of
msgid "'axes': place the spine at the specified Axes coordinate (0 to 1)."
msgstr ""

#: matplotlib.spines.Spine.set_position:10 of
msgid "'data': place the spine at the specified data coordinate."
msgstr ""

#: matplotlib.spines.Spine.set_position:12 of
msgid "Additionally, shorthand notations define a special positions:"
msgstr ""

#: matplotlib.spines.Spine.set_position:14 of
msgid "'center' -> ('axes', 0.5)"
msgstr ""

#: matplotlib.spines.Spine.set_position:15 of
msgid "'zero' -> ('data', 0.0)"
msgstr ""

#: matplotlib.spines.Spines:1 of
msgid "Bases: :py:class:`collections.abc.MutableMapping`"
msgstr ""

#: matplotlib.spines.Spines:2 of
msgid "The container of all `.Spine`\\s in an Axes."
msgstr ""

#: matplotlib.spines.Spines:4 of
msgid "The interface is dict-like mapping names (e.g. 'left') to `.Spine` objects. Additionally it implements some pandas.Series-like features like accessing elements by attribute::"
msgstr ""

#: matplotlib.spines.Spines:11 of
msgid "Multiple spines can be addressed simultaneously by passing a list::"
msgstr ""

#: matplotlib.spines.Spines:15 of
msgid "Use an open slice to address all spines::"
msgstr ""

#: matplotlib.spines.Spines:19 of
msgid "The latter two indexing methods will return a `SpinesProxy` that broadcasts all ``set_*`` calls to its members, but cannot be used for any other operation."
msgstr ""

#: matplotlib.spines.SpinesProxy:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: matplotlib.spines.SpinesProxy:2 of
msgid "A proxy to broadcast ``set_*`` method calls to all contained `.Spines`."
msgstr ""

#: matplotlib.spines.SpinesProxy:4 of
msgid "The proxy cannot be used for any other operations on its members."
msgstr ""

#: matplotlib.spines.SpinesProxy:6 of
msgid "The supported methods are determined dynamically based on the contained spines. If not all spines support a given method, it's executed only on the subset of spines that support it."
msgstr ""

