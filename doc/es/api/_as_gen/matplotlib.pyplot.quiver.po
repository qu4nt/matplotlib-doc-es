msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:18\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.quiver.po\n"
"X-Crowdin-File-ID: 1250\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.quiver.rst:2
msgid "matplotlib.pyplot.quiver"
msgstr ""

#: matplotlib.pyplot.quiver:2 of
msgid "Plot a 2D field of arrows."
msgstr ""

#: matplotlib.pyplot.quiver:4 of
msgid "Call signature::"
msgstr ""

#: matplotlib.pyplot.quiver:8 of
msgid "*X*, *Y* define the arrow locations, *U*, *V* define the arrow directions, and *C* optionally sets the color."
msgstr ""

#: matplotlib.pyplot.quiver:11 of
msgid "Each arrow is internally represented by a filled polygon with a default edge linewidth of 0. As a result, an arrow is rather a filled area, not a line with a head, and `.PolyCollection` properties like *linewidth*, *linestyle*, *facecolor*, etc. act accordingly."
msgstr ""

#: matplotlib.pyplot.quiver:16 of
msgid "**Arrow size**"
msgstr ""

#: matplotlib.pyplot.quiver:18 of
msgid "The default settings auto-scales the length of the arrows to a reasonable size. To change this behavior see the *scale* and *scale_units* parameters."
msgstr ""

#: matplotlib.pyplot.quiver:21 of
msgid "**Arrow shape**"
msgstr ""

#: matplotlib.pyplot.quiver:23 of
msgid "The defaults give a slightly swept-back arrow; to make the head a triangle, make *headaxislength* the same as *headlength*. To make the arrow more pointed, reduce *headwidth* or increase *headlength* and *headaxislength*. To make the head smaller relative to the shaft, scale down all the head parameters. You will probably do best to leave minshaft alone."
msgstr ""

#: matplotlib.pyplot.quiver:30 of
msgid "**Arrow outline**"
msgstr ""

#: matplotlib.pyplot.quiver:32 of
msgid "*linewidths* and *edgecolors* can be used to customize the arrow outlines."
msgstr ""

#: matplotlib.pyplot.quiver of
msgid "Parameters"
msgstr ""

#: matplotlib.pyplot.quiver:45 of
msgid "**X, Y**"
msgstr ""

#: of
msgid "1D or 2D array-like, optional"
msgstr ""

#: matplotlib.pyplot.quiver:38 of
msgid "The x and y coordinates of the arrow locations."
msgstr ""

#: matplotlib.pyplot.quiver:40 of
msgid "If not given, they will be generated as a uniform integer meshgrid based on the dimensions of *U* and *V*."
msgstr ""

#: matplotlib.pyplot.quiver:43 of
msgid "If *X* and *Y* are 1D but *U*, *V* are 2D, *X*, *Y* are expanded to 2D using ``X, Y = np.meshgrid(X, Y)``. In this case ``len(X)`` and ``len(Y)`` must match the column and row dimensions of *U* and *V*."
msgstr ""

#: matplotlib.pyplot.quiver:52 of
msgid "**U, V**"
msgstr ""

#: of
msgid "1D or 2D array-like"
msgstr ""

#: matplotlib.pyplot.quiver:48 of
msgid "The x and y direction components of the arrow vectors."
msgstr ""

#: matplotlib.pyplot.quiver:50 of
msgid "They must have the same number of elements, matching the number of arrow locations. *U* and *V* may be masked. Only locations unmasked in *U*, *V*, and *C* will be drawn."
msgstr ""

#: matplotlib.pyplot.quiver:60 of
msgid "**C**"
msgstr ""

#: matplotlib.pyplot.quiver:55 of
msgid "Numeric data that defines the arrow colors by colormapping via *norm* and *cmap*."
msgstr ""

#: matplotlib.pyplot.quiver:58 of
msgid "This does not support explicit colors. If you want to set colors directly, use *color* instead.  The size of *C* must match the number of arrow locations."
msgstr ""

#: matplotlib.pyplot.quiver:77 of
msgid "**units**"
msgstr ""

#: of
msgid "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, default: 'width'"
msgstr ""

#: matplotlib.pyplot.quiver:63 of
msgid "The arrow dimensions (except for *length*) are measured in multiples of this unit."
msgstr ""

#: matplotlib.pyplot.quiver:66 of
msgid "The following values are supported:"
msgstr ""

#: matplotlib.pyplot.quiver:68 of
msgid "'width', 'height': The width or height of the axis."
msgstr ""

#: matplotlib.pyplot.quiver:69 of
msgid "'dots', 'inches': Pixels or inches based on the figure dpi."
msgstr ""

#: matplotlib.pyplot.quiver:70 of
msgid "'x', 'y', 'xy': *X*, *Y* or :math:`\\sqrt{X^2 + Y^2}` in data units."
msgstr ""

#: matplotlib.pyplot.quiver:72 of
msgid "The arrows scale differently depending on the units.  For 'x' or 'y', the arrows get larger as one zooms in; for other units, the arrow size is independent of the zoom state.  For 'width or 'height', the arrow size increases with the width and height of the axes, respectively, when the window is resized; for 'dots' or 'inches', resizing does not change the arrows."
msgstr ""

#: matplotlib.pyplot.quiver:99 of
msgid "**angles**"
msgstr ""

#: of
msgid "{'uv', 'xy'} or array-like, default: 'uv'"
msgstr ""

#: matplotlib.pyplot.quiver:80 of
msgid "Method for determining the angle of the arrows."
msgstr ""

#: matplotlib.pyplot.quiver:82 of
msgid "'uv': The arrow axis aspect ratio is 1 so that if *U* == *V* the orientation of the arrow on the plot is 45 degrees counter-clockwise from the horizontal axis (positive to the right)."
msgstr ""

#: matplotlib.pyplot.quiver:86 of
msgid "Use this if the arrows symbolize a quantity that is not based on *X*, *Y* data coordinates."
msgstr ""

#: matplotlib.pyplot.quiver:89 of
msgid "'xy': Arrows point from (x, y) to (x+u, y+v). Use this for plotting a gradient field, for example."
msgstr ""

#: matplotlib.pyplot.quiver:92 of
msgid "Alternatively, arbitrary angles may be specified explicitly as an array of values in degrees, counter-clockwise from the horizontal axis."
msgstr ""

#: matplotlib.pyplot.quiver:95 of
msgid "In this case *U*, *V* is only used to determine the length of the arrows."
msgstr ""

#: matplotlib.pyplot.quiver:98 of
msgid "Note: inverting a data axis will correspondingly invert the arrows only with ``angles='xy'``."
msgstr ""

#: matplotlib.pyplot.quiver:107 of
msgid "**scale**"
msgstr ""

#: of
msgid "float, optional"
msgstr ""

#: matplotlib.pyplot.quiver:102 of
msgid "Number of data units per arrow length unit, e.g., m/s per plot width; a smaller scale parameter makes the arrow longer. Default is *None*."
msgstr ""

#: matplotlib.pyplot.quiver:105 of
msgid "If *None*, a simple autoscaling algorithm is used, based on the average vector length and the number of vectors. The arrow length unit is given by the *scale_units* parameter."
msgstr ""

#: matplotlib.pyplot.quiver:121 of
msgid "**scale_units**"
msgstr ""

#: of
msgid "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, optional"
msgstr ""

#: matplotlib.pyplot.quiver:110 of
msgid "If the *scale* kwarg is *None*, the arrow length unit. Default is *None*."
msgstr ""

#: matplotlib.pyplot.quiver:112 of
msgid "e.g. *scale_units* is 'inches', *scale* is 2.0, and ``(u, v) = (1, 0)``, then the vector will be 0.5 inches long."
msgstr ""

#: matplotlib.pyplot.quiver:115 of
msgid "If *scale_units* is 'width' or 'height', then the vector will be half the width/height of the axes."
msgstr ""

#: matplotlib.pyplot.quiver:118 of
msgid "If *scale_units* is 'x' then the vector will be 0.5 x-axis units. To plot vectors in the x-y plane, with u and v having the same units as x and y, use ``angles='xy', scale_units='xy', scale=1``."
msgstr ""

#: matplotlib.pyplot.quiver:126 of
msgid "**width**"
msgstr ""

#: matplotlib.pyplot.quiver:124 of
msgid "Shaft width in arrow units; default depends on choice of units, above, and number of vectors; a typical starting value is about 0.005 times the width of the plot."
msgstr ""

#: matplotlib.pyplot.quiver:129 of
msgid "**headwidth**"
msgstr ""

#: of
msgid "float, default: 3"
msgstr ""

#: matplotlib.pyplot.quiver:129 of
msgid "Head width as multiple of shaft width."
msgstr ""

#: matplotlib.pyplot.quiver:132 of
msgid "**headlength**"
msgstr ""

#: of
msgid "float, default: 5"
msgstr ""

#: matplotlib.pyplot.quiver:132 of
msgid "Head length as multiple of shaft width."
msgstr ""

#: matplotlib.pyplot.quiver:135 of
msgid "**headaxislength**"
msgstr ""

#: of
msgid "float, default: 4.5"
msgstr ""

#: matplotlib.pyplot.quiver:135 of
msgid "Head length at shaft intersection."
msgstr ""

#: matplotlib.pyplot.quiver:139 of
msgid "**minshaft**"
msgstr ""

#: of
msgid "float, default: 1"
msgstr ""

#: matplotlib.pyplot.quiver:138 of
msgid "Length below which arrow scales, in units of head length. Do not set this to less than 1, or small arrows will look terrible!"
msgstr ""

#: matplotlib.pyplot.quiver:143 of
msgid "**minlength**"
msgstr ""

#: matplotlib.pyplot.quiver:142 of
msgid "Minimum length as a multiple of shaft width; if an arrow length is less than this, plot a dot (hexagon) of this diameter instead."
msgstr ""

#: matplotlib.pyplot.quiver:149 of
msgid "**pivot**"
msgstr ""

#: of
msgid "{'tail', 'mid', 'middle', 'tip'}, default: 'tail'"
msgstr ""

#: matplotlib.pyplot.quiver:146 of
msgid "The part of the arrow that is anchored to the *X*, *Y* grid. The arrow rotates about this point."
msgstr ""

#: matplotlib.pyplot.quiver:149 of
msgid "'mid' is a synonym for 'middle'."
msgstr ""

#: matplotlib.pyplot.quiver:155 of
msgid "**color**"
msgstr ""

#: of
msgid "color or color sequence, optional"
msgstr ""

#: matplotlib.pyplot.quiver:152 of
msgid "Explicit color(s) for the arrows. If *C* has been set, *color* has no effect."
msgstr ""

#: matplotlib.pyplot.quiver:155 of
msgid "This is a synonym for the `.PolyCollection` *facecolor* parameter."
msgstr ""

#: matplotlib.pyplot.quiver of
msgid "Returns"
msgstr ""

#: matplotlib.pyplot.quiver:162 of
msgid "`~matplotlib.quiver.Quiver`"
msgstr ""

#: matplotlib.pyplot.quiver of
msgid "Other Parameters"
msgstr ""

#: matplotlib.pyplot.quiver:168 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: matplotlib.pyplot.quiver:167 of
msgid "If given, all parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception)."
msgstr ""

#: matplotlib.pyplot.quiver:222 of
msgid "**\\*\\*kwargs** : `~matplotlib.collections.PolyCollection` properties, optional"
msgstr ""

#: matplotlib.pyplot.quiver:221 of
msgid "PolyCollection properties, optional"
msgstr ""

#: matplotlib.pyplot.quiver:171 of
msgid "All other keyword arguments are passed on to `.PolyCollection`:"
msgstr ""

#: matplotlib.pyplot.quiver:177 of
msgid "Property"
msgstr ""

#: matplotlib.pyplot.quiver:177 of
msgid "Description"
msgstr ""

#: matplotlib.pyplot.quiver:179 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.pyplot.quiver:179 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.pyplot.quiver:180 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ""

#: matplotlib.pyplot.quiver:180 of
msgid "array-like or scalar or None"
msgstr ""

#: matplotlib.pyplot.quiver:181 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.pyplot.quiver:181 matplotlib.pyplot.quiver:187
#: matplotlib.pyplot.quiver:196 matplotlib.pyplot.quiver:208
#: matplotlib.pyplot.quiver:217 of
msgid "bool"
msgstr ""

#: matplotlib.pyplot.quiver:182 of
msgid ":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` or aa or antialiaseds"
msgstr ""

#: matplotlib.pyplot.quiver:182 of
msgid "bool or list of bools"
msgstr ""

#: matplotlib.pyplot.quiver:183 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ""

#: matplotlib.pyplot.quiver:183 of
msgid "array-like or None"
msgstr ""

#: matplotlib.pyplot.quiver:184 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ""

#: matplotlib.pyplot.quiver:184 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr ""

#: matplotlib.pyplot.quiver:185 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ""

#: matplotlib.pyplot.quiver:185 of
msgid "(vmin: float, vmax: float)"
msgstr ""

#: matplotlib.pyplot.quiver:186 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.pyplot.quiver:186 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.pyplot.quiver:187 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.pyplot.quiver:188 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.pyplot.quiver:188 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.pyplot.quiver:189 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ""

#: matplotlib.pyplot.quiver:189 of
msgid "`.Colormap` or str or None"
msgstr ""

#: matplotlib.pyplot.quiver:190 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ""

#: matplotlib.pyplot.quiver:190 of
msgid "color or list of rgba tuples"
msgstr ""

#: matplotlib.pyplot.quiver:191 of
msgid ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec or edgecolors"
msgstr ""

#: matplotlib.pyplot.quiver:191 of
msgid "color or list of colors or 'face'"
msgstr ""

#: matplotlib.pyplot.quiver:192 of
msgid ":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or facecolors or fc"
msgstr ""

#: matplotlib.pyplot.quiver:192 of
msgid "color or list of colors"
msgstr ""

#: matplotlib.pyplot.quiver:193 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.pyplot.quiver:193 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.pyplot.quiver:194 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.pyplot.quiver:194 matplotlib.pyplot.quiver:213 of
msgid "str"
msgstr ""

#: matplotlib.pyplot.quiver:195 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ""

#: matplotlib.pyplot.quiver:195 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr ""

#: matplotlib.pyplot.quiver:196 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.pyplot.quiver:197 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ""

#: matplotlib.pyplot.quiver:197 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr ""

#: matplotlib.pyplot.quiver:198 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.pyplot.quiver:198 of
msgid "object"
msgstr ""

#: matplotlib.pyplot.quiver:199 of
msgid ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or dashes or linestyles or ls"
msgstr ""

#: matplotlib.pyplot.quiver:199 of
msgid "str or tuple or list thereof"
msgstr ""

#: matplotlib.pyplot.quiver:200 of
msgid ":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or linewidths or lw"
msgstr ""

#: matplotlib.pyplot.quiver:200 of
msgid "float or list of floats"
msgstr ""

#: matplotlib.pyplot.quiver:201 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ""

#: matplotlib.pyplot.quiver:201 of
msgid "`.Normalize` or None"
msgstr ""

#: matplotlib.pyplot.quiver:202 of
msgid ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"
msgstr ""

#: matplotlib.pyplot.quiver:202 matplotlib.pyplot.quiver:212 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.pyplot.quiver:203 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ""

#: matplotlib.pyplot.quiver:203 of
msgid "(N, 2) or (2,) array-like"
msgstr ""

#: matplotlib.pyplot.quiver:204 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.pyplot.quiver:204 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.pyplot.quiver:205 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.pyplot.quiver:205 matplotlib.pyplot.quiver:215 of
msgid "list of array-like"
msgstr ""

#: matplotlib.pyplot.quiver:206 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.pyplot.quiver:206 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.pyplot.quiver:207 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ""

#: matplotlib.pyplot.quiver:207 matplotlib.pyplot.quiver:218 of
msgid "float"
msgstr ""

#: matplotlib.pyplot.quiver:208 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.pyplot.quiver:209 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ""

#: matplotlib.pyplot.quiver:209 of
msgid "ndarray or None"
msgstr ""

#: matplotlib.pyplot.quiver:210 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.pyplot.quiver:210 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.pyplot.quiver:211 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.pyplot.quiver:211 of
msgid "bool or None"
msgstr ""

#: matplotlib.pyplot.quiver:212 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.pyplot.quiver:213 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.pyplot.quiver:214 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ""

#: matplotlib.pyplot.quiver:214 of
msgid "list of str or None"
msgstr ""

#: matplotlib.pyplot.quiver:215 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.pyplot.quiver:216 of
msgid ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ""

#: matplotlib.pyplot.quiver:216 of
msgid "unknown"
msgstr ""

#: matplotlib.pyplot.quiver:217 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.pyplot.quiver:218 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: matplotlib.pyplot.quiver:227 of
msgid ":obj:`.Axes.quiverkey`"
msgstr ""

#: matplotlib.pyplot.quiver:228 of
msgid "Add a key to a quiver plot."
msgstr ""

