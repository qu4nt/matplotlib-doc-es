msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-01 21:36\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.imshow.po\n"
"X-Crowdin-File-ID: 554\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.rst:2
msgid "matplotlib.axes.Axes.imshow"
msgstr "matplotlib.axes.Axes.imshow"

#: matplotlib.axes._axes.Axes.imshow:2 of
msgid "Display data as an image, i.e., on a 2D regular raster."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:4 of
msgid "The input may either be actual RGB(A) data, or 2D scalar data, which will be rendered as a pseudocolor image. For displaying a grayscale image set up the colormapping using the parameters ``cmap='gray', vmin=0, vmax=255``."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:9 of
msgid "The number of pixels used to render an image is set by the Axes size and the *dpi* of the figure. This can lead to aliasing artifacts when the image is resampled because the displayed image size will usually not match the size of *X* (see :doc:`/gallery/images_contours_and_fields/image_antialiasing`). The resampling can be controlled via the *interpolation* parameter and/or :rc:`image.interpolation`."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow of
msgid "Parameters"
msgstr "Par√°metros"

#: matplotlib.axes._axes.Axes.imshow:32 of
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like or PIL image"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:20 of
msgid "The image data. Supported array shapes are:"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:22 of
msgid "(M, N): an image with scalar data. The values are mapped to colors using normalization and a colormap. See parameters *norm*, *cmap*, *vmin*, *vmax*."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:25 of
msgid "(M, N, 3): an image with RGB values (0-1 float or 0-255 int)."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:26 of
msgid "(M, N, 4): an image with RGBA values (0-1 float or 0-255 int), i.e. including transparency."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:29 of
msgid "The first two dimensions (M, N) define the rows and columns of the image."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:32 of
msgid "Out-of-range RGB(A) values are clipped."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:36 of
msgid "**cmap** : str or `~matplotlib.colors.Colormap`, default: :rc:`image.cmap`"
msgstr ""

#: of
msgid "str or"
msgstr "str o"

#: matplotlib.axes._axes.Axes.imshow:35 of
msgid "The Colormap instance or registered colormap name used to map scalar data to colors. This parameter is ignored for RGB(A) data."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:42 of
msgid "**norm** : `~matplotlib.colors.Normalize`, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:41 of
msgid "Normalize, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:39 of
msgid "The `.Normalize` instance used to scale scalar data to the [0, 1] range before mapping to colors using *cmap*. By default, a linear scaling mapping the lowest value to 0 and the highest to 1 is used. This parameter is ignored for RGB(A) data."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:57 of
msgid "**aspect** : {'equal', 'auto'} or float, default: :rc:`image.aspect`"
msgstr ""

#: of
msgid "{'equal', 'auto'} or float, default:"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:45 of
msgid "The aspect ratio of the Axes.  This parameter is particularly relevant for images since it determines whether data pixels are square."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:49 of
msgid "This parameter is a shortcut for explicitly calling `.Axes.set_aspect`. See there for further details."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:52 of
msgid "'equal': Ensures an aspect ratio of 1. Pixels will be square (unless pixel sizes are explicitly made non-square in data coordinates using *extent*)."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:55 of
msgid "'auto': The Axes is kept fixed and the aspect is adjusted so that the data fit in the Axes. In general, this will result in non-square pixels."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:89 of
msgid "**interpolation** : str, default: :rc:`image.interpolation`"
msgstr ""

#: of
msgid "str, default:"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:60 of
msgid "The interpolation method used."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:62 of
msgid "Supported values are 'none', 'antialiased', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'blackman'."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:67 of
msgid "If *interpolation* is 'none', then no interpolation is performed on the Agg, ps, pdf and svg backends. Other backends will fall back to 'nearest'. Note that most SVG renderers perform interpolation at rendering and that the default interpolation method they implement may differ."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:73 of
msgid "If *interpolation* is the default 'antialiased', then 'nearest' interpolation is used if the image is upsampled by more than a factor of three (i.e. the number of display pixels is at least three times the size of the data array).  If the upsampling rate is smaller than 3, or the image is downsampled, then 'hanning' interpolation is used to act as an anti-aliasing filter, unless the image happens to be upsampled by exactly a factor of two or one."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:81 of
msgid "See :doc:`/gallery/images_contours_and_fields/interpolation_methods` for an overview of the supported interpolation methods, and :doc:`/gallery/images_contours_and_fields/image_antialiasing` for a discussion of image antialiasing."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:87 of
msgid "Some interpolation methods require an additional radius parameter, which can be set by *filterrad*. Additionally, the antigrain image resize filter is controlled by the parameter *filternorm*."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:95 of
msgid "**interpolation_stage**"
msgstr ""

#: of
msgid "{'data', 'rgba'}, default: 'data'"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:92 of
msgid "If 'data', interpolation is carried out on the data provided by the user.  If 'rgba', the interpolation is carried out after the colormapping has been applied (visual interpolation)."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:100 of
msgid "**alpha**"
msgstr ""

#: of
msgid "float or array-like, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:98 of
msgid "The alpha blending value, between 0 (transparent) and 1 (opaque). If *alpha* is an array, the alpha blending values are applied pixel by pixel, and *alpha* must have the same shape as *X*."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:107 of
msgid "**vmin, vmax**"
msgstr "**vmin, vmax**"

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.axes._axes.Axes.imshow:103 of
msgid "When using scalar data and no explicit *norm*, *vmin* and *vmax* define the data range that the colormap covers. By default, the colormap covers the complete value range of the supplied data. It is an error to use *vmin*/*vmax* when *norm* is given. When using RGB(A) data, parameters *vmin*/*vmax* are ignored."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:118 of
msgid "**origin** : {'upper', 'lower'}, default: :rc:`image.origin`"
msgstr ""

#: of
msgid "{'upper', 'lower'}, default:"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:110 of
msgid "Place the [0, 0] index of the array in the upper left or lower left corner of the Axes. The convention (the default) 'upper' is typically used for matrices and images."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:114 of
msgid "Note that the vertical axis points upward for 'lower' but downward for 'upper'."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:117 matplotlib.axes._axes.Axes.imshow:137
#: of
msgid "See the :doc:`/tutorials/intermediate/imshow_extent` tutorial for examples and a more detailed description."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:138 of
msgid "**extent**"
msgstr ""

#: of
msgid "floats (left, right, bottom, top), optional"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:121 of
msgid "The bounding box in data coordinates that the image will fill. The image is stretched individually along x and y to fill the box."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:124 of
msgid "The default extent is determined by the following conditions. Pixels have unit size in data coordinates. Their centers are on integer coordinates, and their center coordinates range from 0 to columns-1 horizontally and from 0 to rows-1 vertically."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:129 of
msgid "Note that the direction of the vertical axis and thus the default values for top and bottom depend on *origin*:"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:132 of
msgid "For ``origin == 'upper'`` the default is ``(-0.5, numcols-0.5, numrows-0.5, -0.5)``."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:134 of
msgid "For ``origin == 'lower'`` the default is ``(-0.5, numcols-0.5, -0.5, numrows-0.5)``."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:147 of
msgid "**filternorm**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.axes._axes.Axes.imshow:141 of
msgid "A parameter for the antigrain image resize filter (see the antigrain documentation).  If *filternorm* is set, the filter normalizes integer values and corrects the rounding errors. It doesn't do anything with the source floating point values, it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0.  So, the filter function must produce a graph of the proper shape."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:151 of
msgid "**filterrad**"
msgstr ""

#: of
msgid "float > 0, default: 4.0"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:150 of
msgid "The filter radius for filters that have a radius parameter, i.e. when interpolation is one of: 'sinc', 'lanczos' or 'blackman'."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:155 of
msgid "**resample** : bool, default: :rc:`image.resample`"
msgstr ""

#: of
msgid "bool, default:"
msgstr "bool, default:"

#: matplotlib.axes._axes.Axes.imshow:154 of
msgid "When *True*, use a full resampling method.  When *False*, only resample when the output image is larger than the input image."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:158 of
msgid "**url**"
msgstr ""

#: of
msgid "str, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:158 of
msgid "Set the url of the created `.AxesImage`. See `.Artist.set_url`."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.axes._axes.Axes.imshow:165 of
msgid "`~matplotlib.image.AxesImage`"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow of
msgid "Other Parameters"
msgstr "Otros Par√°metros"

#: matplotlib.axes._axes.Axes.imshow:171 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.axes._axes.Axes.imshow:170 of
msgid "If given, all parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception)."
msgstr "Si se dan, todos los par√°metros tambi√©n aceptan una cadena ``s``, que se interpreta como ``data[s]`` (a menos que se produzca una excepci√≥n)."

#: matplotlib.axes._axes.Axes.imshow:178 of
msgid "**\\*\\*kwargs** : `~matplotlib.artist.Artist` properties"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:177 of
msgid "Artist properties"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:174 of
msgid "These parameters are passed on to the constructor of the `.AxesImage` artist."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:183 of
msgid ":obj:`matshow`"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:184 of
msgid "Plot a matrix or an array as an image."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:188 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.axes._axes.Axes.imshow:189 of
msgid "Unless *extent* is used, pixel centers will be located at integer coordinates. In other words: the origin will coincide with the center of pixel (0, 0)."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:193 of
msgid "There are two common representations for RGB images with an alpha channel:"
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:196 of
msgid "Straight (unassociated) alpha: R, G, and B channels represent the color of the pixel, disregarding its opacity."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:198 of
msgid "Premultiplied (associated) alpha: R, G, and B channels represent the color of the pixel, adjusted for its opacity by multiplication."
msgstr ""

#: matplotlib.axes._axes.Axes.imshow:201 of
msgid "`~matplotlib.pyplot.imshow` expects RGB images adopting the straight (unassociated) alpha representation."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:2
msgid "Examples using ``matplotlib.axes.Axes.imshow``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:10
msgid "Bar chart with gradients"
msgstr "Gr√°fico de barras con gradientes"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:18
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_gradient_bar.py`"
msgstr ":ref:`sphx_glr_gallery_lines_bars_and_markers_gradient_bar.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:29
msgid "Creating annotated heatmaps"
msgstr "Creaci√≥n de mapas t√©rmicos anotados"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:29
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:37
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_image_annotated_heatmap.py`"
msgstr ":ref:`sphx_glr_gallery_images_contours_and_fields_image_annotated_heatmap.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:48
msgid "Axes box aspect"
msgstr "Aspecto de la caja de los ejes"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:48
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:56
msgid ":ref:`sphx_glr_gallery_subplots_axes_and_figures_axes_box_aspect.py`"
msgstr ":ref:`sphx_glr_gallery_subplots_axes_and_figures_axes_box_aspect.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:67
msgid "Colorbar"
msgstr "Barra de colores"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:67
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:75
msgid ":ref:`sphx_glr_gallery_color_colorbar_basics.py`"
msgstr ":ref:`sphx_glr_gallery_color_colorbar_basics.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:86
msgid "Colorbar with `.AxesDivider`"
msgstr "Barra de colores con `.AxesDivider`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:86
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:94
msgid ":ref:`sphx_glr_gallery_axes_grid1_demo_colorbar_with_axes_divider.py`"
msgstr ":ref:`sphx_glr_gallery_axes_grid1_demo_colorbar_with_axes_divider.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:105
msgid "Controlling the position and size of colorbars with Inset Axes"
msgstr "Controlar la posici√≥n y el tama√±o de las barras de color con los ejes de inserci√≥n"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:105
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:113
msgid ":ref:`sphx_glr_gallery_axes_grid1_demo_colorbar_with_inset_locator.py`"
msgstr ":ref:`sphx_glr_gallery_axes_grid1_demo_colorbar_with_inset_locator.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:124
msgid "Simple Colorbar"
msgstr "Barra de color simple"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:124
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:132
msgid ":ref:`sphx_glr_gallery_axes_grid1_simple_colorbar.py`"
msgstr ":ref:`sphx_glr_gallery_axes_grid1_simple_colorbar.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:143
msgid "Image Slices Viewer"
msgstr "Visor de cortes de imagen"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:143
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:151
msgid ":ref:`sphx_glr_gallery_event_handling_image_slices_viewer.py`"
msgstr ":ref:`sphx_glr_gallery_event_handling_image_slices_viewer.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:162
msgid "Viewlims"
msgstr "Viewlims"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:162
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:170
msgid ":ref:`sphx_glr_gallery_event_handling_viewlims.py`"
msgstr ":ref:`sphx_glr_gallery_event_handling_viewlims.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:181
msgid "MRI With EEG"
msgstr "MRI con EEG"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:181
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:189
msgid ":ref:`sphx_glr_gallery_specialty_plots_mri_with_eeg.py`"
msgstr ":ref:`sphx_glr_gallery_specialty_plots_mri_with_eeg.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:200
msgid "Interactive Adjustment of Colormap Range"
msgstr "Ajuste interactivo del rango del mapa de colores"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:200
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:208
msgid ":ref:`sphx_glr_gallery_userdemo_colormap_interactive_adjustment.py`"
msgstr ":ref:`sphx_glr_gallery_userdemo_colormap_interactive_adjustment.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:219
msgid "Artist tutorial"
msgstr "Tutorial de artistas"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:219
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:227
msgid ":ref:`sphx_glr_tutorials_intermediate_artists.py`"
msgstr ":ref:`sphx_glr_tutorials_intermediate_artists.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:238
msgid "Tight Layout guide"
msgstr "Gu√≠a de dise√±o ajustado"

#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:238
#: ../../api/_as_gen/matplotlib.axes.Axes.imshow.examples:246
msgid ":ref:`sphx_glr_tutorials_intermediate_tight_layout_guide.py`"
msgstr ":ref:`sphx_glr_tutorials_intermediate_tight_layout_guide.py`"

