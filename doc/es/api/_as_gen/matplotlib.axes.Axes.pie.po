msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:12\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.pie.po\n"
"X-Crowdin-File-ID: 598\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.pie.rst:2
msgid "matplotlib.axes.Axes.pie"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:2 of
msgid "Plot a pie chart."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:4 of
msgid "Make a pie chart of array *x*.  The fractional area of each wedge is given by ``x/sum(x)``.  If ``sum(x) < 1``, then the values of *x* give the fractional area directly and the array will not be normalized. The resulting pie will have an empty wedge of size ``1 - sum(x)``."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:9 of
msgid "The wedges are plotted counterclockwise, by default starting from the x-axis."
msgstr ""

#: matplotlib.axes._axes.Axes.pie of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:15 of
msgid "**x**"
msgstr ""

#: of
msgid "1D array-like"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:15 of
msgid "The wedge sizes."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:19 of
msgid "**explode**"
msgstr ""

#: of
msgid "array-like, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:18 of
msgid "If not *None*, is a ``len(x)`` array which specifies the fraction of the radius with which to offset each wedge."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:22 of
msgid "**labels**"
msgstr ""

#: of
msgid "list, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:22 of
msgid "A sequence of strings providing the labels for each wedge"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:26 of
msgid "**colors**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:25 of
msgid "A sequence of colors through which the pie chart will cycle.  If *None*, will use the colors in the currently active cycle."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:32 of
msgid "**autopct**"
msgstr ""

#: of
msgid "None or str or callable, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:29 of
msgid "If not *None*, is a string or function used to label the wedges with their numeric value.  The label will be placed inside the wedge.  If it is a format string, the label will be ``fmt % pct``. If it is a function, it will be called."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:36 of
msgid "**pctdistance**"
msgstr ""

#: of
msgid "float, default: 0.6"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:35 of
msgid "The ratio between the center of each pie slice and the start of the text generated by *autopct*.  Ignored if *autopct* is *None*."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:39 of
msgid "**shadow**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:39 of
msgid "Draw a shadow beneath the pie."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:44 of
msgid "**normalize**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:42 of
msgid "When *True*, always make a full pie by normalizing x so that ``sum(x) == 1``. *False* makes a partial pie if ``sum(x) <= 1`` and raises a `ValueError` for ``sum(x) > 1``."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:49 of
msgid "**labeldistance**"
msgstr ""

#: of
msgid "float or None, default: 1.1"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:47 of
msgid "The radial distance at which the pie labels are drawn. If set to ``None``, label are not drawn, but are stored for use in ``legend()``"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:53 of
msgid "**startangle**"
msgstr ""

#: of
msgid "float, default: 0 degrees"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:52 of
msgid "The angle by which the start of the pie is rotated, counterclockwise from the x-axis."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:56 of
msgid "**radius**"
msgstr ""

#: of
msgid "float, default: 1"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:56 of
msgid "The radius of the pie."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:59 of
msgid "**counterclock**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:59 of
msgid "Specify fractions direction, clockwise or counterclockwise."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:66 of
msgid "**wedgeprops**"
msgstr ""

#: of
msgid "dict, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:62 of
msgid "Dict of arguments passed to the wedge objects making the pie. For example, you can pass in ``wedgeprops = {'linewidth': 3}`` to set the width of the wedge border lines equal to 3. For more details, look at the doc/arguments of the wedge object. By default ``clip_on=False``."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:69 of
msgid "**textprops**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:69 of
msgid "Dict of arguments to pass to the text objects."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:72 of
msgid "**center**"
msgstr ""

#: of
msgid "(float, float), default: (0, 0)"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:72 of
msgid "The coordinates of the center of the chart."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:75 of
msgid "**frame**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:75 of
msgid "Plot Axes frame with the chart if true."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:78 of
msgid "**rotatelabels**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:78 of
msgid "Rotate each label to the angle of the corresponding slice if true."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:84 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:81 of
msgid "If given, the following parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception):"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:84 of
msgid "*x*, *explode*, *labels*, *colors*"
msgstr ""

#: matplotlib.axes._axes.Axes.pie of
msgid "Returns"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:89 of
msgid "**patches**"
msgstr ""

#: of
msgid "list"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:89 of
msgid "A sequence of `matplotlib.patches.Wedge` instances"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:92 of
msgid "**texts**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:92 of
msgid "A list of the label `.Text` instances."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:103 of
msgid "**autotexts**"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:95 of
msgid "A list of `.Text` instances for the numeric labels. This will only be returned if the parameter *autopct* is not *None*."
msgstr ""

#: matplotlib.axes._axes.Axes.pie:106 of
msgid "Notes"
msgstr ""

#: matplotlib.axes._axes.Axes.pie:107 of
msgid "The pie chart will probably look best if the figure and Axes are square, or the Axes aspect is equal. This method sets the aspect ratio of the axis to \"equal\". The Axes aspect ratio can be controlled with `.Axes.set_aspect`."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.pie.examples:2
msgid "Examples using ``matplotlib.axes.Axes.pie``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.pie.examples:10
msgid "Bar of pie"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.pie.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.pie.examples:18
msgid ":ref:`sphx_glr_gallery_pie_and_polar_charts_bar_of_pie.py`"
msgstr ""

