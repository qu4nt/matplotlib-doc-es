msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:16\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.colors.LightSource.po\n"
"X-Crowdin-File-ID: 946\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.colors.LightSource.rst:2
msgid "matplotlib.colors.LightSource"
msgstr ""

#: matplotlib.colors.LightSource:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: matplotlib.colors.LightSource:2 of
msgid "Create a light source coming from the specified azimuth and elevation. Angles are in degrees, with the azimuth measured clockwise from north and elevation up from the zero plane of the surface."
msgstr ""

#: matplotlib.colors.LightSource:6 of
msgid "`shade` is used to produce \"shaded\" rgb values for a data array. `shade_rgb` can be used to combine an rgb image with an elevation map. `hillshade` produces an illumination map of a surface."
msgstr ""

#: matplotlib.colors.LightSource:28 of
msgid "Specify the azimuth (measured clockwise from south) and altitude (measured up from the plane of the surface) of the light source in degrees."
msgstr ""

#: matplotlib.colors.LightSource matplotlib.colors.LightSource.blend_hsv
#: matplotlib.colors.LightSource.blend_overlay
#: matplotlib.colors.LightSource.blend_soft_light
#: matplotlib.colors.LightSource.hillshade matplotlib.colors.LightSource.shade
#: matplotlib.colors.LightSource.shade_normals
#: matplotlib.colors.LightSource.shade_rgb of
msgid "Parameters"
msgstr ""

#: matplotlib.colors.LightSource:37 of
msgid "**azdeg**"
msgstr ""

#: of
msgid "float, default: 315 degrees (from the northwest)"
msgstr ""

#: matplotlib.colors.LightSource:36 of
msgid "The azimuth (0-360, degrees clockwise from North) of the light source."
msgstr ""

#: matplotlib.colors.LightSource:49 of
msgid "**altdeg**"
msgstr ""

#: of
msgid "float, default: 45 degrees"
msgstr ""

#: matplotlib.colors.LightSource:40 of
msgid "The altitude (0-90, degrees up from horizontal) of the light source."
msgstr ""

#: matplotlib.colors.LightSource:52 of
msgid "Notes"
msgstr ""

#: matplotlib.colors.LightSource:53 of
msgid "For backwards compatibility, the parameters *hsv_min_val*, *hsv_max_val*, *hsv_min_sat*, and *hsv_max_sat* may be supplied at initialization as well.  However, these parameters will only be used if \"blend_mode='hsv'\" is passed into `shade` or `shade_rgb`. See the documentation for `blend_hsv` for more details."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:2 of
msgid "Take the input data array, convert to HSV values in the given colormap, then adjust those color values to give the impression of a shaded relief map with a specified light source.  RGBA values are returned, which can then be used to plot the shaded image with imshow."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:7 of
msgid "The color of the resulting image will be darkened by moving the (s, v) values (in hsv colorspace) toward (hsv_min_sat, hsv_min_val) in the shaded regions, or lightened by sliding (s, v) toward (hsv_max_sat, hsv_max_val) in regions that are illuminated.  The default extremes are chose so that completely shaded points are nearly black (s = 1, v = 0) and completely illuminated points are nearly white (s = 0, v = 1)."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:17
#: matplotlib.colors.LightSource.blend_overlay:8
#: matplotlib.colors.LightSource.blend_soft_light:9
#: matplotlib.colors.LightSource.shade_rgb:9 of
msgid "**rgb**"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:53
#: matplotlib.colors.LightSource.blend_overlay:28
#: matplotlib.colors.LightSource.blend_soft_light:29
#: matplotlib.colors.LightSource.hillshade:49
#: matplotlib.colors.LightSource.shade:81
#: matplotlib.colors.LightSource.shade_normals:35
#: matplotlib.colors.LightSource.shade_rgb:64 of
msgid "ndarray"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:17
#: matplotlib.colors.LightSource.blend_overlay:8
#: matplotlib.colors.LightSource.blend_soft_light:9 of
msgid "An MxNx3 RGB array of floats ranging from 0 to 1 (color image)."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:20
#: matplotlib.colors.LightSource.blend_overlay:11
#: matplotlib.colors.LightSource.blend_soft_light:12 of
msgid "**intensity**"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:20
#: matplotlib.colors.LightSource.blend_overlay:11
#: matplotlib.colors.LightSource.blend_soft_light:12 of
msgid "An MxNx1 array of floats ranging from 0 to 1 (grayscale image)."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:24 of
msgid "**hsv_max_sat**"
msgstr ""

#: of
msgid "number, default: 1"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:23 of
msgid "The maximum saturation value that the *intensity* map can shift the output image to."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:28 of
msgid "**hsv_min_sat**"
msgstr ""

#: of
msgid "number, optional"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:27 of
msgid "The minimum saturation value that the *intensity* map can shift the output image to. Defaults to 0."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:32 of
msgid "**hsv_max_val**"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:31 of
msgid "The maximum value (\"v\" in \"hsv\") that the *intensity* map can shift the output image to. Defaults to 1."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:36 of
msgid "**hsv_min_val**"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:35 of
msgid "The minimum value (\"v\" in \"hsv\") that the *intensity* map can shift the output image to. Defaults to 0."
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv
#: matplotlib.colors.LightSource.blend_overlay
#: matplotlib.colors.LightSource.blend_soft_light
#: matplotlib.colors.LightSource.hillshade matplotlib.colors.LightSource.shade
#: matplotlib.colors.LightSource.shade_normals
#: matplotlib.colors.LightSource.shade_rgb of
msgid "Returns"
msgstr ""

#: matplotlib.colors.LightSource.blend_hsv:41
#: matplotlib.colors.LightSource.blend_overlay:16
#: matplotlib.colors.LightSource.blend_soft_light:17 of
msgid "An MxNx3 RGB array representing the combined images."
msgstr ""

#: matplotlib.colors.LightSource.blend_overlay:2 of
msgid "Combine an rgb image with an intensity map using \"overlay\" blending."
msgstr ""

#: matplotlib.colors.LightSource.blend_soft_light:2 of
msgid "Combine an rgb image with an intensity map using \"soft light\" blending, using the \"pegtop\" formula."
msgstr ""

#: matplotlib.colors.LightSource.direction:2 of
msgid "The unit vector direction towards the light source."
msgstr ""

#: matplotlib.colors.LightSource.hillshade:2 of
msgid "Calculate the illumination intensity for a surface using the defined azimuth and elevation for the light source."
msgstr ""

#: matplotlib.colors.LightSource.hillshade:5 of
msgid "This computes the normal vectors for the surface, and then passes them on to `shade_normals`"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:11
#: matplotlib.colors.LightSource.shade_rgb:12 of
msgid "**elevation**"
msgstr ""

#: of
msgid "2D array-like"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:11 of
msgid "The height values used to generate an illumination map"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:18
#: matplotlib.colors.LightSource.shade:48
#: matplotlib.colors.LightSource.shade_rgb:38 of
msgid "**vert_exag**"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:14 of
msgid "The amount to exaggerate the elevation values by when calculating illumination. This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system (e.g. decimal degrees vs. meters) or to exaggerate or de-emphasize topographic effects."
msgstr ""

#: matplotlib.colors.LightSource.hillshade:21
#: matplotlib.colors.LightSource.shade:51
#: matplotlib.colors.LightSource.shade_rgb:41 of
msgid "**dx**"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:21
#: matplotlib.colors.LightSource.shade:51
#: matplotlib.colors.LightSource.shade_rgb:41 of
msgid "The x-spacing (columns) of the input *elevation* grid."
msgstr ""

#: matplotlib.colors.LightSource.hillshade:24
#: matplotlib.colors.LightSource.shade:54
#: matplotlib.colors.LightSource.shade_rgb:44 of
msgid "**dy**"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:24
#: matplotlib.colors.LightSource.shade:54
#: matplotlib.colors.LightSource.shade_rgb:44 of
msgid "The y-spacing (rows) of the input *elevation* grid."
msgstr ""

#: matplotlib.colors.LightSource.hillshade:31
#: matplotlib.colors.LightSource.shade:61
#: matplotlib.colors.LightSource.shade_normals:17
#: matplotlib.colors.LightSource.shade_rgb:19 of
msgid "**fraction**"
msgstr ""

#: matplotlib.colors.LightSource.hillshade:27
#: matplotlib.colors.LightSource.shade:57
#: matplotlib.colors.LightSource.shade_normals:13
#: matplotlib.colors.LightSource.shade_rgb:15 of
msgid "Increases or decreases the contrast of the hillshade.  Values greater than one will cause intermediate values to move closer to full illumination or shadow (and clipping any values that move beyond 0 or 1). Note that this is not visually or mathematically the same as vertical exaggeration."
msgstr ""

#: matplotlib.colors.LightSource.hillshade:36
#: matplotlib.colors.LightSource.shade_normals:22 of
msgid "A 2D array of illumination values between 0-1, where 0 is completely in shadow and 1 is completely illuminated."
msgstr ""

#: matplotlib.colors.LightSource.shade:2 of
msgid "Combine colormapped data values with an illumination intensity map (a.k.a.  \"hillshade\") of the values."
msgstr ""

#: matplotlib.colors.LightSource.shade:9 of
msgid "**data**"
msgstr ""

#: matplotlib.colors.LightSource.shade:9 of
msgid "The height values used to generate a shaded map."
msgstr ""

#: matplotlib.colors.LightSource.shade:15 of
msgid "**cmap** : `~matplotlib.colors.Colormap`"
msgstr ""

#: matplotlib.colors.LightSource.shade:14 of
msgid "Colormap"
msgstr ""

#: matplotlib.colors.LightSource.shade:12 of
msgid "The colormap used to color the *data* array. Note that this must be a `~matplotlib.colors.Colormap` instance.  For example, rather than passing in ``cmap='gist_earth'``, use ``cmap=plt.get_cmap('gist_earth')`` instead."
msgstr ""

#: matplotlib.colors.LightSource.shade:19 of
msgid "**norm** : `~matplotlib.colors.Normalize` instance, optional"
msgstr ""

#: matplotlib.colors.LightSource.shade:18 of
msgid "Normalize instance, optional"
msgstr ""

#: matplotlib.colors.LightSource.shade:18 of
msgid "The normalization used to scale values before colormapping. If None, the input will be linearly scaled between its min and max."
msgstr ""

#: matplotlib.colors.LightSource.shade:31
#: matplotlib.colors.LightSource.shade_rgb:31 of
msgid "**blend_mode**"
msgstr ""

#: of
msgid "{'hsv', 'overlay', 'soft'} or callable, optional"
msgstr ""

#: matplotlib.colors.LightSource.shade:22 of
msgid "The type of blending used to combine the colormapped data values with the illumination intensity.  Default is \"overlay\".  Note that for most topographic surfaces, \"overlay\" or \"soft\" appear more visually realistic. If a user-defined function is supplied, it is expected to combine an MxNx3 RGB array of floats (ranging 0 to 1) with an MxNx1 hillshade array (also 0 to 1).  (Call signature ``func(rgb, illum, **kwargs)``) Additional kwargs supplied to this function will be passed on to the *blend_mode* function."
msgstr ""

#: matplotlib.colors.LightSource.shade:36 of
msgid "**vmin**"
msgstr ""

#: of
msgid "float or None, optional"
msgstr ""

#: matplotlib.colors.LightSource.shade:34 of
msgid "The minimum value used in colormapping *data*. If *None* the minimum value in *data* is used. If *norm* is specified, then this argument will be ignored."
msgstr ""

#: matplotlib.colors.LightSource.shade:41 of
msgid "**vmax**"
msgstr ""

#: matplotlib.colors.LightSource.shade:39 of
msgid "The maximum value used in colormapping *data*. If *None* the maximum value in *data* is used. If *norm* is specified, then this argument will be ignored."
msgstr ""

#: matplotlib.colors.LightSource.shade:44
#: matplotlib.colors.LightSource.shade_rgb:34 of
msgid "The amount to exaggerate the elevation values by when calculating illumination. This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system (e.g. decimal degrees vs. meters) or to exaggerate or de-emphasize topography."
msgstr ""

#: matplotlib.colors.LightSource.shade:64
#: matplotlib.colors.LightSource.shade_rgb:47 of
msgid "**Additional kwargs are passed on to the *blend_mode* function.**"
msgstr ""

#: matplotlib.colors.LightSource.shade:69 of
msgid "An MxNx4 array of floats ranging between 0-1."
msgstr ""

#: matplotlib.colors.LightSource.shade_normals:2 of
msgid "Calculate the illumination intensity for the normal vectors of a surface using the defined azimuth and elevation for the light source."
msgstr ""

#: matplotlib.colors.LightSource.shade_normals:5 of
msgid "Imagine an artificial sun placed at infinity in some azimuth and elevation position illuminating our surface. The parts of the surface that slope toward the sun should brighten while those sides facing away should become darker."
msgstr ""

#: matplotlib.colors.LightSource.shade_rgb:2 of
msgid "Use this light source to adjust the colors of the *rgb* input array to give the impression of a shaded relief map with the given *elevation*."
msgstr ""

#: of
msgid "array-like"
msgstr ""

#: matplotlib.colors.LightSource.shade_rgb:9 of
msgid "An (M, N, 3) RGB array, assumed to be in the range of 0 to 1."
msgstr ""

#: matplotlib.colors.LightSource.shade_rgb:12 of
msgid "An (M, N) array of the height values used to generate a shaded map."
msgstr ""

#: of
msgid "number"
msgstr ""

#: matplotlib.colors.LightSource.shade_rgb:22 of
msgid "The type of blending used to combine the colormapped data values with the illumination intensity.  For backwards compatibility, this defaults to \"hsv\". Note that for most topographic surfaces, \"overlay\" or \"soft\" appear more visually realistic. If a user-defined function is supplied, it is expected to combine an MxNx3 RGB array of floats (ranging 0 to 1) with an MxNx1 hillshade array (also 0 to 1).  (Call signature ``func(rgb, illum, **kwargs)``) Additional kwargs supplied to this function will be passed on to the *blend_mode* function."
msgstr ""

#: matplotlib.colors.LightSource.shade_rgb:52 of
msgid "An (m, n, 3) array of floats ranging between 0-1."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.colors.LightSource.examples:2
msgid "Examples using ``matplotlib.colors.LightSource``"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:10
msgid "Shading example"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:10
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:18
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_shading_example.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:29
msgid "Shaded & power normalized rendering"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:29
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:37
msgid ":ref:`sphx_glr_gallery_showcase_mandelbrot.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:48
msgid "Frontpage 3D example"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:48
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:56
msgid ":ref:`sphx_glr_gallery_frontpage_3D.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:67
msgid "AGG filter"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:67
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:75
msgid ":ref:`sphx_glr_gallery_misc_demo_agg_filter.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:86
msgid "Custom hillshading in a 3D surface plot"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:86
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:94
msgid ":ref:`sphx_glr_gallery_mplot3d_custom_shaded_3d_surface.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:105
msgid "Hillshading"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:105
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:113
msgid ":ref:`sphx_glr_gallery_specialty_plots_advanced_hillshading.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:124
msgid "Topographic hillshading"
msgstr ""

#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:124
#: ../../api/_as_gen/matplotlib.colors.LightSource.examples:132
msgid ":ref:`sphx_glr_gallery_specialty_plots_topographic_hillshading.py`"
msgstr ""

