msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:18\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.specgram.po\n"
"X-Crowdin-File-ID: 1282\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.specgram.rst:2
msgid "matplotlib.pyplot.specgram"
msgstr ""

#: matplotlib.pyplot.specgram:2 of
msgid "Plot a spectrogram."
msgstr ""

#: matplotlib.pyplot.specgram:4 of
msgid "Compute and plot a spectrogram of data in *x*.  Data are split into *NFFT* length segments and the spectrum of each section is computed.  The windowing function *window* is applied to each segment, and the amount of overlap of each segment is specified with *noverlap*. The spectrogram is plotted as a colormap (using imshow)."
msgstr ""

#: matplotlib.pyplot.specgram of
msgid "Parameters"
msgstr ""

#: matplotlib.pyplot.specgram:14 of
msgid "**x**"
msgstr ""

#: of
msgid "1-D array or sequence"
msgstr ""

#: matplotlib.pyplot.specgram:14 of
msgid "Array or sequence containing the data."
msgstr ""

#: matplotlib.pyplot.specgram:18 of
msgid "**Fs**"
msgstr ""

#: of
msgid "float, default: 2"
msgstr ""

#: matplotlib.pyplot.specgram:17 of
msgid "The sampling frequency (samples per time unit).  It is used to calculate the Fourier frequencies, *freqs*, in cycles per time unit."
msgstr ""

#: matplotlib.pyplot.specgram:25 of
msgid "**window** : callable or ndarray, default: `.window_hanning`"
msgstr ""

#: of
msgid "callable or ndarray, default:"
msgstr ""

#: matplotlib.pyplot.specgram:21 of
msgid "A function or a vector of length *NFFT*.  To create window vectors see `.window_hanning`, `.window_none`, `numpy.blackman`, `numpy.hamming`, `numpy.bartlett`, `scipy.signal`, `scipy.signal.get_window`, etc.  If a function is passed as the argument, it must take a data segment as an argument and return the windowed version of the segment."
msgstr ""

#: matplotlib.pyplot.specgram:30 of
msgid "**sides**"
msgstr ""

#: of
msgid "{'default', 'onesided', 'twosided'}, optional"
msgstr ""

#: matplotlib.pyplot.specgram:28 of
msgid "Which sides of the spectrum to return. 'default' is one-sided for real data and two-sided for complex data. 'onesided' forces the return of a one-sided spectrum, while 'twosided' forces two-sided."
msgstr ""

#: matplotlib.pyplot.specgram:39 of
msgid "**pad_to**"
msgstr ""

#: of
msgid "int, optional"
msgstr ""

#: matplotlib.pyplot.specgram:33 of
msgid "The number of points to which the data segment is padded when performing the FFT.  This can be different from *NFFT*, which specifies the number of data points used.  While not increasing the actual resolution of the spectrum (the minimum distance between resolvable peaks), this can give more points in the plot, allowing for more detail. This corresponds to the *n* parameter in the call to fft(). The default is None, which sets *pad_to* equal to *NFFT*"
msgstr ""

#: matplotlib.pyplot.specgram:44 of
msgid "**NFFT**"
msgstr ""

#: of
msgid "int, default: 256"
msgstr ""

#: matplotlib.pyplot.specgram:42 of
msgid "The number of data points used in each block for the FFT.  A power 2 is most efficient.  This should *NOT* be used to get zero padding, or the scaling of the result will be incorrect; use *pad_to* for this instead."
msgstr ""

#: matplotlib.pyplot.specgram:53 of
msgid "**detrend**"
msgstr ""

#: of
msgid "{'none', 'mean', 'linear'} or callable, default: 'none'"
msgstr ""

#: matplotlib.pyplot.specgram:47 of
msgid "The function applied to each segment before fft-ing, designed to remove the mean or linear trend.  Unlike in MATLAB, where the *detrend* parameter is a vector, in Matplotlib it is a function.  The :mod:`~matplotlib.mlab` module defines `.detrend_none`, `.detrend_mean`, and `.detrend_linear`, but you can use a custom function as well.  You can also use a string to choose one of the functions: 'none' calls `.detrend_none`. 'mean' calls `.detrend_mean`. 'linear' calls `.detrend_linear`."
msgstr ""

#: matplotlib.pyplot.specgram:59 of
msgid "**scale_by_freq**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: matplotlib.pyplot.specgram:56 of
msgid "Whether the resulting density values should be scaled by the scaling frequency, which gives density in units of Hz^-1.  This allows for integration over the returned frequency values.  The default is True for MATLAB compatibility."
msgstr ""

#: matplotlib.pyplot.specgram:65 of
msgid "**mode**"
msgstr ""

#: of
msgid "{'default', 'psd', 'magnitude', 'angle', 'phase'}"
msgstr ""

#: matplotlib.pyplot.specgram:62 of
msgid "What sort of spectrum to use.  Default is 'psd', which takes the power spectral density.  'magnitude' returns the magnitude spectrum.  'angle' returns the phase spectrum without unwrapping. 'phase' returns the phase spectrum with unwrapping."
msgstr ""

#: matplotlib.pyplot.specgram:68 of
msgid "**noverlap**"
msgstr ""

#: of
msgid "int, default: 128"
msgstr ""

#: matplotlib.pyplot.specgram:68 of
msgid "The number of points of overlap between blocks."
msgstr ""

#: matplotlib.pyplot.specgram:76 of
msgid "**scale**"
msgstr ""

#: of
msgid "{'default', 'linear', 'dB'}"
msgstr ""

#: matplotlib.pyplot.specgram:71 of
msgid "The scaling of the values in the *spec*.  'linear' is no scaling. 'dB' returns the values in dB scale.  When *mode* is 'psd', this is dB power (10 * log10).  Otherwise this is dB amplitude (20 * log10). 'default' is 'dB' if *mode* is 'psd' or 'magnitude' and 'linear' otherwise.  This must be 'linear' if *mode* is 'angle' or 'phase'."
msgstr ""

#: matplotlib.pyplot.specgram:81 of
msgid "**Fc**"
msgstr ""

#: of
msgid "int, default: 0"
msgstr ""

#: matplotlib.pyplot.specgram:79 of
msgid "The center frequency of *x*, which offsets the x extents of the plot to reflect the frequency range used when a signal is acquired and then filtered and downsampled to baseband."
msgstr ""

#: matplotlib.pyplot.specgram:84 of
msgid "**cmap** : `.Colormap`, default: :rc:`image.cmap`"
msgstr ""

#: matplotlib.pyplot.specgram:83 of
msgid "Colormap, default: rcParams[\"image.cmap\"] (default: 'viridis')"
msgstr ""

#: matplotlib.pyplot.specgram:90 of
msgid "**xextent** : *None* or (xmin, xmax)"
msgstr ""

#: matplotlib.pyplot.specgram:89 of
msgid "None or (xmin, xmax)"
msgstr ""

#: matplotlib.pyplot.specgram:87 of
msgid "The image extent along the x-axis. The default sets *xmin* to the left border of the first bin (*spectrum* column) and *xmax* to the right border of the last bin. Note that for *noverlap>0* the width of the bins is smaller than those of the segments."
msgstr ""

#: matplotlib.pyplot.specgram:96 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: matplotlib.pyplot.specgram:93 of
msgid "If given, the following parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception):"
msgstr ""

#: matplotlib.pyplot.specgram:96 of
msgid "*x*"
msgstr ""

#: matplotlib.pyplot.specgram:101 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.pyplot.specgram:99 of
msgid "Additional keyword arguments are passed on to `~.axes.Axes.imshow` which makes the specgram image. The origin keyword argument is not supported."
msgstr ""

#: matplotlib.pyplot.specgram of
msgid "Returns"
msgstr ""

#: matplotlib.pyplot.specgram:106 of
msgid "**spectrum**"
msgstr ""

#: of
msgid "2D array"
msgstr ""

#: matplotlib.pyplot.specgram:106 of
msgid "Columns are the periodograms of successive segments."
msgstr ""

#: matplotlib.pyplot.specgram:109 of
msgid "**freqs**"
msgstr ""

#: of
msgid "1-D array"
msgstr ""

#: matplotlib.pyplot.specgram:109 of
msgid "The frequencies corresponding to the rows in *spectrum*."
msgstr ""

#: matplotlib.pyplot.specgram:113 of
msgid "**t**"
msgstr ""

#: matplotlib.pyplot.specgram:112 of
msgid "The times corresponding to midpoints of segments (i.e., the columns in *spectrum*)."
msgstr ""

#: matplotlib.pyplot.specgram:122 of
msgid "**im** : `.AxesImage`"
msgstr ""

#: matplotlib.pyplot.specgram:121 of
msgid "AxesImage"
msgstr ""

#: matplotlib.pyplot.specgram:116 of
msgid "The image created by imshow containing the spectrogram."
msgstr ""

#: matplotlib.pyplot.specgram:127 of
msgid ":obj:`psd`"
msgstr ""

#: matplotlib.pyplot.specgram:128 of
msgid "Differs in the default overlap; in returning the mean of the segment periodograms; in not returning times; and in generating a line plot instead of colormap."
msgstr ""

#: matplotlib.pyplot.specgram:129 of
msgid ":obj:`magnitude_spectrum`"
msgstr ""

#: matplotlib.pyplot.specgram:130 of
msgid "A single spectrum, similar to having a single segment when *mode* is 'magnitude'. Plots a line instead of a colormap."
msgstr ""

#: matplotlib.pyplot.specgram:131 of
msgid ":obj:`angle_spectrum`"
msgstr ""

#: matplotlib.pyplot.specgram:132 of
msgid "A single spectrum, similar to having a single segment when *mode* is 'angle'. Plots a line instead of a colormap."
msgstr ""

#: matplotlib.pyplot.specgram:133 of
msgid ":obj:`phase_spectrum`"
msgstr ""

#: matplotlib.pyplot.specgram:134 of
msgid "A single spectrum, similar to having a single segment when *mode* is 'phase'. Plots a line instead of a colormap."
msgstr ""

#: matplotlib.pyplot.specgram:138 of
msgid "Notes"
msgstr ""

#: matplotlib.pyplot.specgram:139 of
msgid "The parameters *detrend* and *scale_by_freq* do only apply when *mode* is set to 'psd'."
msgstr ""

