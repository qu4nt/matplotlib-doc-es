msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-01 21:38\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.violinplot.po\n"
"X-Crowdin-File-ID: 744\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.rst:2
msgid "matplotlib.axes.Axes.violinplot"
msgstr "matplotlib.axes.Axes.violinplot"

#: matplotlib.axes._axes.Axes.violinplot:2 of
msgid "Make a violin plot."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:4 of
msgid "Make a violin plot for each column of *dataset* or each vector in sequence *dataset*.  Each filled area extends to represent the entire data range, with optional lines at the mean, the median, the minimum, the maximum, and user-specified quantiles."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.axes._axes.Axes.violinplot:12 of
msgid "**dataset**"
msgstr "**dataset**"

#: of
msgid "Array or a sequence of vectors."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:12 of
msgid "The input data."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:16 of
msgid "**positions**"
msgstr ""

#: of
msgid "array-like, default: [1, 2, ..., n]"
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:15 of
msgid "The positions of the violins. The ticks and limits are automatically set to match the positions."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:20 of
msgid "**vert**"
msgstr ""

#: of
msgid "bool, default: True."
msgstr "bool, por defecto: True."

#: matplotlib.axes._axes.Axes.violinplot:19 of
msgid "If true, creates a vertical violin plot. Otherwise, creates a horizontal violin plot."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:25 of
msgid "**widths**"
msgstr ""

#: of
msgid "array-like, default: 0.5"
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:23 of
msgid "Either a scalar or a vector that sets the maximal width of each violin. The default is 0.5, which uses about half of the available horizontal space."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:28 of
msgid "**showmeans**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr "bool, por defecto: False"

#: matplotlib.axes._axes.Axes.violinplot:28 of
msgid "If `True`, will toggle rendering of the means."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:31 of
msgid "**showextrema**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr "bool, por defecto: True"

#: matplotlib.axes._axes.Axes.violinplot:31 of
msgid "If `True`, will toggle rendering of the extrema."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:34 of
msgid "**showmedians**"
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:34 of
msgid "If `True`, will toggle rendering of the medians."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:39 of
msgid "**quantiles**"
msgstr ""

#: of
msgid "array-like, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:37 of
msgid "If not None, set a list of floats in interval [0, 1] for each violin, which stands for the quantiles that will be rendered for that violin."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:43 of
msgid "**points**"
msgstr "**puntos**"

#: of
msgid "int, default: 100"
msgstr "int, por defecto: 100"

#: matplotlib.axes._axes.Axes.violinplot:42 of
msgid "Defines the number of points to evaluate each of the gaussian kernel density estimations at."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:50 of
msgid "**bw_method**"
msgstr "**bw_method**"

#: of
msgid "str, scalar or callable, optional"
msgstr "str, scalar or callable, optional"

#: matplotlib.axes._axes.Axes.violinplot:46 of
msgid "The method used to calculate the estimator bandwidth.  This can be 'scott', 'silverman', a scalar constant or a callable.  If a scalar, this will be used directly as `kde.factor`.  If a callable, it should take a `GaussianKDE` instance as its only parameter and return a scalar. If None (default), 'scott' is used."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:56 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.axes._axes.Axes.violinplot:53 of
msgid "If given, the following parameters also accept a string ``s``, which is interpreted as ``data[s]`` (unless this raises an exception):"
msgstr "Si se dan, los siguientes parámetros también aceptan una cadena ``s``, que se interpreta como ``data[s]`` (a menos que se produzca una excepción):"

#: matplotlib.axes._axes.Axes.violinplot:56 of
msgid "*dataset*"
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.axes._axes.Axes.violinplot:97 of
msgid "dict"
msgstr "dict"

#: matplotlib.axes._axes.Axes.violinplot:61 of
msgid "A dictionary mapping each component of the violinplot to a list of the corresponding collection instances created. The dictionary has the following keys:"
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:65 of
msgid "``bodies``: A list of the `~.collections.PolyCollection` instances containing the filled area of each violin."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:68 of
msgid "``cmeans``: A `~.collections.LineCollection` instance that marks the mean values of each of the violin's distribution."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:71 of
msgid "``cmins``: A `~.collections.LineCollection` instance that marks the bottom of each violin's distribution."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:74 of
msgid "``cmaxes``: A `~.collections.LineCollection` instance that marks the top of each violin's distribution."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:77 of
msgid "``cbars``: A `~.collections.LineCollection` instance that marks the centers of each violin's distribution."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:80 of
msgid "``cmedians``: A `~.collections.LineCollection` instance that marks the median values of each of the violin's distribution."
msgstr ""

#: matplotlib.axes._axes.Axes.violinplot:83 of
msgid "``cquantiles``: A `~.collections.LineCollection` instance created to identify the quantile values of each of the violin's distribution."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:2
msgid "Examples using ``matplotlib.axes.Axes.violinplot``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:10
msgid "Violin plot customization"
msgstr "Personalizar el gráfico de violín"

#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:18
msgid ":ref:`sphx_glr_gallery_statistics_customized_violin.py`"
msgstr ":ref:`sphx_glr_gallery_statistics_customized_violin.py`"

#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:29
msgid "violinplot(D)"
msgstr "violinplot(D)"

#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:29
#: ../../api/_as_gen/matplotlib.axes.Axes.violinplot.examples:37
msgid ":ref:`sphx_glr_plot_types_stats_violin.py`"
msgstr ":ref:`sphx_glr_plot_types_stats_violin.py`"

