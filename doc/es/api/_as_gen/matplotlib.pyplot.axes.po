msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:17\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.pyplot.axes.po\n"
"X-Crowdin-File-ID: 1060\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.pyplot.axes.rst:2
msgid "matplotlib.pyplot.axes"
msgstr ""

#: matplotlib.pyplot.axes:2 of
msgid "Add an axes to the current figure and make it the current axes."
msgstr ""

#: matplotlib.pyplot.axes:4 of
msgid "Call signatures::"
msgstr ""

#: matplotlib.pyplot.axes of
msgid "Parameters"
msgstr ""

#: matplotlib.pyplot.axes:19 of
msgid "**arg**"
msgstr ""

#: of
msgid "None or 4-tuple"
msgstr ""

#: matplotlib.pyplot.axes:13 of
msgid "The exact behavior of this function depends on the type:"
msgstr ""

#: matplotlib.pyplot.axes:15 of
msgid "*None*: A new full window axes is added using ``subplot(**kwargs)``."
msgstr ""

#: matplotlib.pyplot.axes:17 of
msgid "4-tuple of floats *rect* = ``[left, bottom, width, height]``. A new axes is added with dimensions *rect* in normalized (0, 1) units using `~.Figure.add_axes` on the current figure."
msgstr ""

#: matplotlib.pyplot.axes:24 of
msgid "**projection**"
msgstr ""

#: of
msgid "{None, 'aitoff', 'hammer', 'lambert', 'mollweide', 'polar', 'rectilinear', str}, optional"
msgstr ""

#: matplotlib.pyplot.axes:22 of
msgid "The projection type of the `~.axes.Axes`. *str* is the name of a custom projection, see `~matplotlib.projections`. The default None results in a 'rectilinear' projection."
msgstr ""

#: matplotlib.pyplot.axes:27 of
msgid "**polar**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.pyplot.axes:27 of
msgid "If True, equivalent to projection='polar'."
msgstr ""

#: matplotlib.pyplot.axes:32 of
msgid "**sharex, sharey** : `~.axes.Axes`, optional"
msgstr ""

#: matplotlib.pyplot.axes:31 of
msgid "Axes, optional"
msgstr ""

#: matplotlib.pyplot.axes:30 of
msgid "Share the x or y `~matplotlib.axis` with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared axes."
msgstr ""

#: matplotlib.pyplot.axes:35 of
msgid "**label**"
msgstr ""

#: matplotlib.pyplot.axes:80 matplotlib.pyplot.axes:93
#: matplotlib.pyplot.axes:95 matplotlib.pyplot.axes:98
#: matplotlib.pyplot.axes:105 of
msgid "str"
msgstr ""

#: matplotlib.pyplot.axes:35 of
msgid "A label for the returned axes."
msgstr ""

#: matplotlib.pyplot.axes of
msgid "Returns"
msgstr ""

#: matplotlib.pyplot.axes:44 of
msgid "`~.axes.Axes`, or a subclass of `~.axes.Axes`"
msgstr ""

#: matplotlib.pyplot.axes:40 of
msgid "The returned axes class depends on the projection used. It is `~.axes.Axes` if rectilinear projection is used and `.projections.polar.PolarAxes` if polar projection is used."
msgstr ""

#: matplotlib.pyplot.axes of
msgid "Other Parameters"
msgstr ""

#: matplotlib.pyplot.axes:115 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.pyplot.axes:49 of
msgid "This method also takes the keyword arguments for the returned axes class. The keyword arguments for the rectilinear axes class `~.axes.Axes` can be found in the following table but there might also be other keyword arguments if another projection is used, see the actual axes class."
msgstr ""

#: matplotlib.pyplot.axes:60 of
msgid "Property"
msgstr ""

#: matplotlib.pyplot.axes:60 of
msgid "Description"
msgstr ""

#: matplotlib.pyplot.axes:62 of
msgid ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"
msgstr ""

#: matplotlib.pyplot.axes:62 of
msgid "{'box', 'datalim'}"
msgstr ""

#: matplotlib.pyplot.axes:63 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.pyplot.axes:63 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.pyplot.axes:64 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ""

#: matplotlib.pyplot.axes:64 of
msgid "scalar or None"
msgstr ""

#: matplotlib.pyplot.axes:65 of
msgid ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"
msgstr ""

#: matplotlib.pyplot.axes:65 of
msgid "(float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"
msgstr ""

#: matplotlib.pyplot.axes:66 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.pyplot.axes:66 matplotlib.pyplot.axes:68
#: matplotlib.pyplot.axes:69 matplotlib.pyplot.axes:70
#: matplotlib.pyplot.axes:75 matplotlib.pyplot.axes:79
#: matplotlib.pyplot.axes:81 matplotlib.pyplot.axes:83
#: matplotlib.pyplot.axes:90 matplotlib.pyplot.axes:96 of
msgid "bool"
msgstr ""

#: matplotlib.pyplot.axes:67 of
msgid ":meth:`aspect <matplotlib.axes.Axes.set_aspect>`"
msgstr ""

#: matplotlib.pyplot.axes:67 of
msgid "{'auto', 'equal'} or float"
msgstr ""

#: matplotlib.pyplot.axes:68 of
msgid ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"
msgstr ""

#: matplotlib.pyplot.axes:69 of
msgid ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"
msgstr ""

#: matplotlib.pyplot.axes:70 of
msgid ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"
msgstr ""

#: matplotlib.pyplot.axes:71 of
msgid ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"
msgstr ""

#: matplotlib.pyplot.axes:71 of
msgid "Callable[[Axes, Renderer], Bbox]"
msgstr ""

#: matplotlib.pyplot.axes:72 of
msgid ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"
msgstr ""

#: matplotlib.pyplot.axes:72 of
msgid "bool or 'line'"
msgstr ""

#: matplotlib.pyplot.axes:73 of
msgid ":meth:`box_aspect <matplotlib.axes.Axes.set_box_aspect>`"
msgstr ""

#: matplotlib.pyplot.axes:73 matplotlib.pyplot.axes:89 of
msgid "float or None"
msgstr ""

#: matplotlib.pyplot.axes:74 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.pyplot.axes:74 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.pyplot.axes:75 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.pyplot.axes:76 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.pyplot.axes:76 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.pyplot.axes:77 of
msgid ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` or fc"
msgstr ""

#: matplotlib.pyplot.axes:77 of
msgid "color"
msgstr ""

#: matplotlib.pyplot.axes:78 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.pyplot.axes:78 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.pyplot.axes:79 of
msgid ":meth:`frame_on <matplotlib.axes.Axes.set_frame_on>`"
msgstr ""

#: matplotlib.pyplot.axes:80 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.pyplot.axes:81 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.pyplot.axes:82 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.pyplot.axes:82 of
msgid "object"
msgstr ""

#: matplotlib.pyplot.axes:83 of
msgid ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"
msgstr ""

#: matplotlib.pyplot.axes:84 of
msgid ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"
msgstr ""

#: matplotlib.pyplot.axes:84 matplotlib.pyplot.axes:88
#: matplotlib.pyplot.axes:97 matplotlib.pyplot.axes:102
#: matplotlib.pyplot.axes:103 matplotlib.pyplot.axes:104
#: matplotlib.pyplot.axes:109 matplotlib.pyplot.axes:110 of
msgid "unknown"
msgstr ""

#: matplotlib.pyplot.axes:85 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.pyplot.axes:85 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.pyplot.axes:86 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.pyplot.axes:86 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.pyplot.axes:87 of
msgid ":meth:`position <matplotlib.axes.Axes.set_position>`"
msgstr ""

#: matplotlib.pyplot.axes:87 of
msgid "[left, bottom, width, height] or `~matplotlib.transforms.Bbox`"
msgstr ""

#: matplotlib.pyplot.axes:88 of
msgid ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"
msgstr ""

#: matplotlib.pyplot.axes:89 of
msgid ":meth:`rasterization_zorder <matplotlib.axes.Axes.set_rasterization_zorder>`"
msgstr ""

#: matplotlib.pyplot.axes:90 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.pyplot.axes:91 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.pyplot.axes:91 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.pyplot.axes:92 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.pyplot.axes:92 of
msgid "bool or None"
msgstr ""

#: matplotlib.pyplot.axes:93 of
msgid ":meth:`title <matplotlib.axes.Axes.set_title>`"
msgstr ""

#: matplotlib.pyplot.axes:94 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.pyplot.axes:94 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.pyplot.axes:95 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.pyplot.axes:96 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.pyplot.axes:97 of
msgid ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"
msgstr ""

#: matplotlib.pyplot.axes:98 of
msgid ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"
msgstr ""

#: matplotlib.pyplot.axes:99 of
msgid ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"
msgstr ""

#: matplotlib.pyplot.axes:99 matplotlib.pyplot.axes:106 of
msgid "(bottom: float, top: float)"
msgstr ""

#: matplotlib.pyplot.axes:100 of
msgid ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"
msgstr ""

#: matplotlib.pyplot.axes:100 matplotlib.pyplot.axes:107 of
msgid "float greater than -0.5"
msgstr ""

#: matplotlib.pyplot.axes:101 of
msgid ":meth:`xscale <matplotlib.axes.Axes.set_xscale>`"
msgstr ""

#: matplotlib.pyplot.axes:101 matplotlib.pyplot.axes:108 of
msgid "{\"linear\", \"log\", \"symlog\", \"logit\", ...} or `.ScaleBase`"
msgstr ""

#: matplotlib.pyplot.axes:102 of
msgid ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"
msgstr ""

#: matplotlib.pyplot.axes:103 of
msgid ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"
msgstr ""

#: matplotlib.pyplot.axes:104 of
msgid ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"
msgstr ""

#: matplotlib.pyplot.axes:105 of
msgid ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"
msgstr ""

#: matplotlib.pyplot.axes:106 of
msgid ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"
msgstr ""

#: matplotlib.pyplot.axes:107 of
msgid ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"
msgstr ""

#: matplotlib.pyplot.axes:108 of
msgid ":meth:`yscale <matplotlib.axes.Axes.set_yscale>`"
msgstr ""

#: matplotlib.pyplot.axes:109 of
msgid ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"
msgstr ""

#: matplotlib.pyplot.axes:110 of
msgid ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"
msgstr ""

#: matplotlib.pyplot.axes:111 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: matplotlib.pyplot.axes:111 of
msgid "float"
msgstr ""

#: matplotlib.pyplot.axes:120 of
msgid ":obj:`.Figure.add_axes`"
msgstr ""

#: matplotlib.pyplot.axes:122 of
msgid ":obj:`.pyplot.subplot`"
msgstr ""

#: matplotlib.pyplot.axes:124 of
msgid ":obj:`.Figure.add_subplot`"
msgstr ""

#: matplotlib.pyplot.axes:126 of
msgid ":obj:`.Figure.subplots`"
msgstr ""

#: matplotlib.pyplot.axes:128 of
msgid ":obj:`.pyplot.subplots`"
msgstr ""

#: matplotlib.pyplot.axes:132 of
msgid "Notes"
msgstr ""

#: matplotlib.pyplot.axes:133 of
msgid "If the figure already has a axes with key (*args*, *kwargs*) then it will simply make that axes current and return it.  This behavior is deprecated. Meanwhile, if you do not want this behavior (i.e., you want to force the creation of a new axes), you must use a unique set of args and kwargs.  The axes *label* attribute has been exposed for this purpose: if you want two axes that are otherwise identical to be added to the figure, make sure you give them unique labels."
msgstr ""

#: matplotlib.pyplot.axes:144 of
msgid "Examples"
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.pyplot.axes.examples:2
msgid "Examples using ``matplotlib.pyplot.axes``"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:10
msgid "Make Room For Ylabel Using Axesgrid"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:10
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:18
msgid ":ref:`sphx_glr_gallery_axes_grid1_make_room_for_ylabel_using_axesgrid.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:29
msgid "Lasso Demo"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:29
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:37
msgid ":ref:`sphx_glr_gallery_event_handling_lasso_demo.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:48
msgid "Buttons"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:48
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:56
msgid ":ref:`sphx_glr_gallery_widgets_buttons.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:67
msgid "Check Buttons"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:67
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:75
msgid ":ref:`sphx_glr_gallery_widgets_check_buttons.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:86
msgid "Radio Buttons"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:86
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:94
msgid ":ref:`sphx_glr_gallery_widgets_radio_buttons.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:105
msgid "Thresholding an Image with RangeSlider"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:105
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:113
msgid ":ref:`sphx_glr_gallery_widgets_range_slider.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:124
msgid "Slider"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:124
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:132
msgid ":ref:`sphx_glr_gallery_widgets_slider_demo.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:143
msgid "Snapping Sliders to Discrete Values"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:143
#: ../../api/_as_gen/matplotlib.pyplot.axes.examples:151
msgid ":ref:`sphx_glr_gallery_widgets_slider_snap_demo.py`"
msgstr ""

