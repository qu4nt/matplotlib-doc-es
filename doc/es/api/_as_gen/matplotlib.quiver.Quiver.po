msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-01 21:43\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.quiver.Quiver.po\n"
"X-Crowdin-File-ID: 1376\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.quiver.Quiver.rst:2
msgid "matplotlib.quiver.Quiver"
msgstr ""

#: matplotlib.quiver.Quiver:1 of
msgid "Bases: :py:class:`matplotlib.collections.PolyCollection`"
msgstr "Bases: :py:class:`matplotlib.collections.PolyCollection`"

#: matplotlib.quiver.Quiver:2 of
msgid "Specialized PolyCollection for arrows."
msgstr ""

#: matplotlib.quiver.Quiver:4 of
msgid "The only API method is set_UVC(), which can be used to change the size, orientation, and color of the arrows; their locations are fixed when the class is instantiated.  Possibly this method will be useful in animations."
msgstr ""

#: matplotlib.quiver.Quiver:10 of
msgid "Much of the work in this class is done in the draw() method so that as much information as possible is available about the plot.  In subsequent draw() calls, recalculation is limited to things that might have changed, so there should be no performance penalty from putting the calculations in the draw() method."
msgstr ""

#: matplotlib.quiver.Quiver:35 of
msgid "The constructor takes one required argument, an Axes instance, followed by the args and kwargs described by the following pyplot interface documentation:"
msgstr ""

#: matplotlib.quiver.Quiver:39 of
msgid "Plot a 2D field of arrows."
msgstr ""

#: matplotlib.quiver.Quiver:41 of
msgid "Call signature::"
msgstr ""

#: matplotlib.quiver.Quiver:45 of
msgid "*X*, *Y* define the arrow locations, *U*, *V* define the arrow directions, and *C* optionally sets the color."
msgstr ""

#: matplotlib.quiver.Quiver:48 of
msgid "Each arrow is internally represented by a filled polygon with a default edge linewidth of 0. As a result, an arrow is rather a filled area, not a line with a head, and `.PolyCollection` properties like *linewidth*, *linestyle*, *facecolor*, etc. act accordingly."
msgstr ""

#: matplotlib.quiver.Quiver:53 of
msgid "**Arrow size**"
msgstr ""

#: matplotlib.quiver.Quiver:55 of
msgid "The default settings auto-scales the length of the arrows to a reasonable size. To change this behavior see the *scale* and *scale_units* parameters."
msgstr ""

#: matplotlib.quiver.Quiver:58 of
msgid "**Arrow shape**"
msgstr ""

#: matplotlib.quiver.Quiver:60 of
msgid "The defaults give a slightly swept-back arrow; to make the head a triangle, make *headaxislength* the same as *headlength*. To make the arrow more pointed, reduce *headwidth* or increase *headlength* and *headaxislength*. To make the head smaller relative to the shaft, scale down all the head parameters. You will probably do best to leave minshaft alone."
msgstr ""

#: matplotlib.quiver.Quiver:67 of
msgid "**Arrow outline**"
msgstr ""

#: matplotlib.quiver.Quiver:69 of
msgid "*linewidths* and *edgecolors* can be used to customize the arrow outlines."
msgstr ""

#: matplotlib.quiver.Quiver matplotlib.quiver.Quiver.draw of
msgid "Parameters"
msgstr "Parámetros"

#: matplotlib.quiver.Quiver:82 of
msgid "**X, Y**"
msgstr ""

#: of
msgid "1D or 2D array-like, optional"
msgstr ""

#: matplotlib.quiver.Quiver:75 of
msgid "The x and y coordinates of the arrow locations."
msgstr ""

#: matplotlib.quiver.Quiver:77 of
msgid "If not given, they will be generated as a uniform integer meshgrid based on the dimensions of *U* and *V*."
msgstr ""

#: matplotlib.quiver.Quiver:80 of
msgid "If *X* and *Y* are 1D but *U*, *V* are 2D, *X*, *Y* are expanded to 2D using ``X, Y = np.meshgrid(X, Y)``. In this case ``len(X)`` and ``len(Y)`` must match the column and row dimensions of *U* and *V*."
msgstr ""

#: matplotlib.quiver.Quiver:89 of
msgid "**U, V**"
msgstr ""

#: of
msgid "1D or 2D array-like"
msgstr ""

#: matplotlib.quiver.Quiver:85 of
msgid "The x and y direction components of the arrow vectors."
msgstr ""

#: matplotlib.quiver.Quiver:87 of
msgid "They must have the same number of elements, matching the number of arrow locations. *U* and *V* may be masked. Only locations unmasked in *U*, *V*, and *C* will be drawn."
msgstr ""

#: matplotlib.quiver.Quiver:97 of
msgid "**C**"
msgstr "**C**"

#: matplotlib.quiver.Quiver:92 of
msgid "Numeric data that defines the arrow colors by colormapping via *norm* and *cmap*."
msgstr ""

#: matplotlib.quiver.Quiver:95 of
msgid "This does not support explicit colors. If you want to set colors directly, use *color* instead.  The size of *C* must match the number of arrow locations."
msgstr ""

#: matplotlib.quiver.Quiver:114 of
msgid "**units**"
msgstr "**Unidades**"

#: of
msgid "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, default: 'width'"
msgstr ""

#: matplotlib.quiver.Quiver:100 of
msgid "The arrow dimensions (except for *length*) are measured in multiples of this unit."
msgstr ""

#: matplotlib.quiver.Quiver:103 of
msgid "The following values are supported:"
msgstr ""

#: matplotlib.quiver.Quiver:105 of
msgid "'width', 'height': The width or height of the axis."
msgstr ""

#: matplotlib.quiver.Quiver:106 of
msgid "'dots', 'inches': Pixels or inches based on the figure dpi."
msgstr ""

#: matplotlib.quiver.Quiver:107 of
msgid "'x', 'y', 'xy': *X*, *Y* or :math:`\\sqrt{X^2 + Y^2}` in data units."
msgstr ""

#: matplotlib.quiver.Quiver:109 of
msgid "The arrows scale differently depending on the units.  For 'x' or 'y', the arrows get larger as one zooms in; for other units, the arrow size is independent of the zoom state.  For 'width or 'height', the arrow size increases with the width and height of the axes, respectively, when the window is resized; for 'dots' or 'inches', resizing does not change the arrows."
msgstr ""

#: matplotlib.quiver.Quiver:136 of
msgid "**angles**"
msgstr "**Ángulos**"

#: of
msgid "{'uv', 'xy'} or array-like, default: 'uv'"
msgstr ""

#: matplotlib.quiver.Quiver:117 of
msgid "Method for determining the angle of the arrows."
msgstr ""

#: matplotlib.quiver.Quiver:119 of
msgid "'uv': The arrow axis aspect ratio is 1 so that if *U* == *V* the orientation of the arrow on the plot is 45 degrees counter-clockwise from the horizontal axis (positive to the right)."
msgstr ""

#: matplotlib.quiver.Quiver:123 of
msgid "Use this if the arrows symbolize a quantity that is not based on *X*, *Y* data coordinates."
msgstr ""

#: matplotlib.quiver.Quiver:126 of
msgid "'xy': Arrows point from (x, y) to (x+u, y+v). Use this for plotting a gradient field, for example."
msgstr ""

#: matplotlib.quiver.Quiver:129 of
msgid "Alternatively, arbitrary angles may be specified explicitly as an array of values in degrees, counter-clockwise from the horizontal axis."
msgstr ""

#: matplotlib.quiver.Quiver:132 of
msgid "In this case *U*, *V* is only used to determine the length of the arrows."
msgstr ""

#: matplotlib.quiver.Quiver:135 of
msgid "Note: inverting a data axis will correspondingly invert the arrows only with ``angles='xy'``."
msgstr ""

#: matplotlib.quiver.Quiver:144 of
msgid "**scale**"
msgstr ""

#: of
msgid "float, optional"
msgstr "float, opcional"

#: matplotlib.quiver.Quiver:139 of
msgid "Number of data units per arrow length unit, e.g., m/s per plot width; a smaller scale parameter makes the arrow longer. Default is *None*."
msgstr ""

#: matplotlib.quiver.Quiver:142 of
msgid "If *None*, a simple autoscaling algorithm is used, based on the average vector length and the number of vectors. The arrow length unit is given by the *scale_units* parameter."
msgstr ""

#: matplotlib.quiver.Quiver:158 of
msgid "**scale_units**"
msgstr ""

#: of
msgid "{'width', 'height', 'dots', 'inches', 'x', 'y', 'xy'}, optional"
msgstr ""

#: matplotlib.quiver.Quiver:147 of
msgid "If the *scale* kwarg is *None*, the arrow length unit. Default is *None*."
msgstr ""

#: matplotlib.quiver.Quiver:149 of
msgid "e.g. *scale_units* is 'inches', *scale* is 2.0, and ``(u, v) = (1, 0)``, then the vector will be 0.5 inches long."
msgstr ""

#: matplotlib.quiver.Quiver:152 of
msgid "If *scale_units* is 'width' or 'height', then the vector will be half the width/height of the axes."
msgstr ""

#: matplotlib.quiver.Quiver:155 of
msgid "If *scale_units* is 'x' then the vector will be 0.5 x-axis units. To plot vectors in the x-y plane, with u and v having the same units as x and y, use ``angles='xy', scale_units='xy', scale=1``."
msgstr ""

#: matplotlib.quiver.Quiver:163 of
msgid "**width**"
msgstr "**width**"

#: matplotlib.quiver.Quiver:161 of
msgid "Shaft width in arrow units; default depends on choice of units, above, and number of vectors; a typical starting value is about 0.005 times the width of the plot."
msgstr ""

#: matplotlib.quiver.Quiver:166 of
msgid "**headwidth**"
msgstr ""

#: of
msgid "float, default: 3"
msgstr "float, por defecto: 3"

#: matplotlib.quiver.Quiver:166 of
msgid "Head width as multiple of shaft width."
msgstr ""

#: matplotlib.quiver.Quiver:169 of
msgid "**headlength**"
msgstr ""

#: of
msgid "float, default: 5"
msgstr "float, por defecto: 5"

#: matplotlib.quiver.Quiver:169 of
msgid "Head length as multiple of shaft width."
msgstr ""

#: matplotlib.quiver.Quiver:172 of
msgid "**headaxislength**"
msgstr ""

#: of
msgid "float, default: 4.5"
msgstr "float, por defecto: 4.5"

#: matplotlib.quiver.Quiver:172 of
msgid "Head length at shaft intersection."
msgstr ""

#: matplotlib.quiver.Quiver:176 of
msgid "**minshaft**"
msgstr ""

#: of
msgid "float, default: 1"
msgstr "float, default: 1"

#: matplotlib.quiver.Quiver:175 of
msgid "Length below which arrow scales, in units of head length. Do not set this to less than 1, or small arrows will look terrible!"
msgstr ""

#: matplotlib.quiver.Quiver:180 of
msgid "**minlength**"
msgstr ""

#: matplotlib.quiver.Quiver:179 of
msgid "Minimum length as a multiple of shaft width; if an arrow length is less than this, plot a dot (hexagon) of this diameter instead."
msgstr ""

#: matplotlib.quiver.Quiver:186 of
msgid "**pivot**"
msgstr "**pivot**"

#: of
msgid "{'tail', 'mid', 'middle', 'tip'}, default: 'tail'"
msgstr ""

#: matplotlib.quiver.Quiver:183 of
msgid "The part of the arrow that is anchored to the *X*, *Y* grid. The arrow rotates about this point."
msgstr ""

#: matplotlib.quiver.Quiver:186 of
msgid "'mid' is a synonym for 'middle'."
msgstr ""

#: matplotlib.quiver.Quiver:192 of
msgid "**color**"
msgstr "**color**"

#: of
msgid "color or color sequence, optional"
msgstr ""

#: matplotlib.quiver.Quiver:189 of
msgid "Explicit color(s) for the arrows. If *C* has been set, *color* has no effect."
msgstr ""

#: matplotlib.quiver.Quiver:192 of
msgid "This is a synonym for the `.PolyCollection` *facecolor* parameter."
msgstr ""

#: matplotlib.quiver.Quiver of
msgid "Returns"
msgstr "Devuelve"

#: matplotlib.quiver.Quiver:199 of
msgid "`~matplotlib.quiver.Quiver`"
msgstr ""

#: matplotlib.quiver.Quiver of
msgid "Other Parameters"
msgstr "Otros Parámetros"

#: matplotlib.quiver.Quiver:204 of
msgid "**data**"
msgstr "**data**"

#: of
msgid "indexable object, optional"
msgstr "indexable object, optional"

#: matplotlib.quiver.Quiver:204 of
msgid "DATA_PARAMETER_PLACEHOLDER"
msgstr ""

#: matplotlib.quiver.Quiver:258 of
msgid "**\\*\\*kwargs** : `~matplotlib.collections.PolyCollection` properties, optional"
msgstr ""

#: matplotlib.quiver.Quiver:257 of
msgid "PolyCollection properties, optional"
msgstr ""

#: matplotlib.quiver.Quiver:207 of
msgid "All other keyword arguments are passed on to `.PolyCollection`:"
msgstr ""

#: matplotlib.artist.Quiver.set:10 matplotlib.quiver.Quiver:213 of
msgid "Property"
msgstr "Propiedad"

#: matplotlib.artist.Quiver.set:10 matplotlib.quiver.Quiver:213 of
msgid "Description"
msgstr "Descripción"

#: matplotlib.artist.Quiver.set:13 matplotlib.quiver.Quiver:215 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"

#: matplotlib.artist.Quiver.set:13 matplotlib.quiver.Quiver:215 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr "una función de filtro, que toma un arreglo de puntos flotantes (m, n, 3) y un valor de dpi, y devuelve un arreglo (m, n, 3)"

#: matplotlib.artist.Quiver.set:14 matplotlib.quiver.Quiver:216 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"

#: matplotlib.artist.Quiver.set:14 matplotlib.quiver.Quiver:216 of
msgid "array-like or scalar or None"
msgstr ""

#: matplotlib.artist.Quiver.set:15 matplotlib.quiver.Quiver:217 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ":meth:`animated <matplotlib.artist.Artist.set_animated>`"

#: matplotlib.artist.Quiver.set:15 matplotlib.artist.Quiver.set:21
#: matplotlib.artist.Quiver.set:30 matplotlib.artist.Quiver.set:42
#: matplotlib.artist.Quiver.set:51 matplotlib.quiver.Quiver:217
#: matplotlib.quiver.Quiver:223 matplotlib.quiver.Quiver:232
#: matplotlib.quiver.Quiver:244 matplotlib.quiver.Quiver:253 of
msgid "bool"
msgstr "bool"

#: matplotlib.artist.Quiver.set:16 matplotlib.quiver.Quiver:218 of
msgid ":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` or aa or antialiaseds"
msgstr ""

#: matplotlib.artist.Quiver.set:16 matplotlib.quiver.Quiver:218 of
msgid "bool or list of bools"
msgstr ""

#: matplotlib.artist.Quiver.set:17 matplotlib.quiver.Quiver:219 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ""

#: matplotlib.artist.Quiver.set:17 matplotlib.quiver.Quiver:219 of
msgid "array-like or None"
msgstr ""

#: matplotlib.artist.Quiver.set:18 matplotlib.quiver.Quiver:220 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ""

#: matplotlib.artist.Quiver.set:18 matplotlib.quiver.Quiver:220 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr ""

#: matplotlib.artist.Quiver.set:19 matplotlib.quiver.Quiver:221 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ""

#: matplotlib.artist.Quiver.set:19 matplotlib.quiver.Quiver:221 of
msgid "(vmin: float, vmax: float)"
msgstr ""

#: matplotlib.artist.Quiver.set:20 matplotlib.quiver.Quiver:222 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"

#: matplotlib.artist.Quiver.set:20 matplotlib.quiver.Quiver:222 of
msgid "`.Bbox`"
msgstr "`.Bbox`"

#: matplotlib.artist.Quiver.set:21 matplotlib.quiver.Quiver:223 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"

#: matplotlib.artist.Quiver.set:22 matplotlib.quiver.Quiver:224 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"

#: matplotlib.artist.Quiver.set:22 matplotlib.quiver.Quiver:224 of
msgid "Patch or (Path, Transform) or None"
msgstr "Patch o (Path, Transform) o None"

#: matplotlib.artist.Quiver.set:23 matplotlib.quiver.Quiver:225 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ""

#: matplotlib.artist.Quiver.set:23 matplotlib.quiver.Quiver:225 of
msgid "`.Colormap` or str or None"
msgstr ""

#: matplotlib.artist.Quiver.set:24 matplotlib.quiver.Quiver:226 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ":meth:`color <matplotlib.collections.Collection.set_color>`"

#: matplotlib.artist.Quiver.set:24 matplotlib.quiver.Quiver:226 of
msgid "color or list of rgba tuples"
msgstr ""

#: matplotlib.artist.Quiver.set:25 matplotlib.quiver.Quiver:227 of
msgid ":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec or edgecolors"
msgstr ""

#: matplotlib.artist.Quiver.set:25 matplotlib.quiver.Quiver:227 of
msgid "color or list of colors or 'face'"
msgstr ""

#: matplotlib.artist.Quiver.set:26 matplotlib.quiver.Quiver:228 of
msgid ":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or facecolors or fc"
msgstr ""

#: matplotlib.artist.Quiver.set:26 matplotlib.quiver.Quiver:228 of
msgid "color or list of colors"
msgstr ""

#: matplotlib.artist.Quiver.set:27 matplotlib.quiver.Quiver:229 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ":meth:`figure <matplotlib.artist.Artist.set_figure>`"

#: matplotlib.artist.Quiver.set:27 matplotlib.quiver.Quiver:229 of
msgid "`.Figure`"
msgstr "`.Figure`"

#: matplotlib.artist.Quiver.set:28 matplotlib.quiver.Quiver:230 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ":meth:`gid <matplotlib.artist.Artist.set_gid>`"

#: matplotlib.artist.Quiver.set:28 matplotlib.artist.Quiver.set:47
#: matplotlib.quiver.Quiver:230 matplotlib.quiver.Quiver:249 of
msgid "str"
msgstr "str"

#: matplotlib.artist.Quiver.set:29 matplotlib.quiver.Quiver:231 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ""

#: matplotlib.artist.Quiver.set:29 matplotlib.quiver.Quiver:231 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr ""

#: matplotlib.artist.Quiver.set:30 matplotlib.quiver.Quiver:232 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"

#: matplotlib.artist.Quiver.set:31 matplotlib.quiver.Quiver:233 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ""

#: matplotlib.artist.Quiver.set:31 matplotlib.quiver.Quiver:233 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr ""

#: matplotlib.artist.Quiver.set:32 matplotlib.quiver.Quiver:234 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ":meth:`label <matplotlib.artist.Artist.set_label>`"

#: matplotlib.artist.Quiver.set:32 matplotlib.quiver.Quiver:234 of
msgid "object"
msgstr "object"

#: matplotlib.artist.Quiver.set:33 matplotlib.quiver.Quiver:235 of
msgid ":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or dashes or linestyles or ls"
msgstr ""

#: matplotlib.artist.Quiver.set:33 matplotlib.quiver.Quiver:235 of
msgid "str or tuple or list thereof"
msgstr ""

#: matplotlib.artist.Quiver.set:34 matplotlib.quiver.Quiver:236 of
msgid ":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or linewidths or lw"
msgstr ""

#: matplotlib.artist.Quiver.set:34 matplotlib.quiver.Quiver:236 of
msgid "float or list of floats"
msgstr ""

#: matplotlib.artist.Quiver.set:35 matplotlib.quiver.Quiver:237 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ""

#: matplotlib.artist.Quiver.set:35 matplotlib.quiver.Quiver:237 of
msgid "`.Normalize` or None"
msgstr ""

#: matplotlib.artist.Quiver.set:36 matplotlib.quiver.Quiver:238 of
msgid ":meth:`offset_transform <matplotlib.collections.Collection.set_offset_transform>`"
msgstr ""

#: matplotlib.artist.Quiver.set:36 matplotlib.artist.Quiver.set:46
#: matplotlib.quiver.Quiver:238 matplotlib.quiver.Quiver:248 of
msgid "`.Transform`"
msgstr "`.Transform`"

#: matplotlib.artist.Quiver.set:37 matplotlib.quiver.Quiver:239 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ""

#: matplotlib.artist.Quiver.set:37 matplotlib.quiver.Quiver:239 of
msgid "(N, 2) or (2,) array-like"
msgstr ""

#: matplotlib.artist.Quiver.set:38 matplotlib.quiver.Quiver:240 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"

#: matplotlib.artist.Quiver.set:38 matplotlib.quiver.Quiver:240 of
msgid "`.AbstractPathEffect`"
msgstr "`.AbstractPathEffect`"

#: matplotlib.artist.Quiver.set:39 matplotlib.quiver.Quiver:241 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.artist.Quiver.set:39 matplotlib.artist.Quiver.set:49
#: matplotlib.quiver.Quiver:241 matplotlib.quiver.Quiver:251 of
msgid "list of array-like"
msgstr ""

#: matplotlib.artist.Quiver.set:40 matplotlib.quiver.Quiver:242 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ":meth:`picker <matplotlib.artist.Artist.set_picker>`"

#: matplotlib.artist.Quiver.set:40 matplotlib.quiver.Quiver:242 of
msgid "None or bool or float or callable"
msgstr "None o bool o float o callable"

#: matplotlib.artist.Quiver.set:41 matplotlib.quiver.Quiver:243 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"

#: matplotlib.artist.Quiver.set:41 matplotlib.artist.Quiver.set:52
#: matplotlib.quiver.Quiver:243 matplotlib.quiver.Quiver:254 of
msgid "float"
msgstr "de punto flotante (float)"

#: matplotlib.artist.Quiver.set:42 matplotlib.quiver.Quiver:244 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"

#: matplotlib.artist.Quiver.set:43 matplotlib.quiver.Quiver:245 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ""

#: matplotlib.artist.Quiver.set:43 matplotlib.quiver.Quiver:245 of
msgid "ndarray or None"
msgstr ""

#: matplotlib.artist.Quiver.set:44 matplotlib.quiver.Quiver:246 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"

#: matplotlib.artist.Quiver.set:44 matplotlib.quiver.Quiver:246 of
msgid "(scale: float, length: float, randomness: float)"
msgstr "(scale: float, length: float, randomness: float)"

#: matplotlib.artist.Quiver.set:45 matplotlib.quiver.Quiver:247 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ":meth:`snap <matplotlib.artist.Artist.set_snap>`"

#: matplotlib.artist.Quiver.set:45 matplotlib.quiver.Quiver:247 of
msgid "bool or None"
msgstr "bool or None"

#: matplotlib.artist.Quiver.set:46 matplotlib.quiver.Quiver:248 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ":meth:`transform <matplotlib.artist.Artist.set_transform>`"

#: matplotlib.artist.Quiver.set:47 matplotlib.quiver.Quiver:249 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ":meth:`url <matplotlib.artist.Artist.set_url>`"

#: matplotlib.artist.Quiver.set:48 matplotlib.quiver.Quiver:250 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ""

#: matplotlib.artist.Quiver.set:48 matplotlib.quiver.Quiver:250 of
msgid "list of str or None"
msgstr ""

#: matplotlib.artist.Quiver.set:49 matplotlib.quiver.Quiver:251 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.artist.Quiver.set:50 matplotlib.quiver.Quiver:252 of
msgid ":meth:`verts_and_codes <matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ""

#: matplotlib.artist.Quiver.set:12 matplotlib.artist.Quiver.set:50
#: matplotlib.quiver.Quiver:252 of
msgid "unknown"
msgstr "desconocido"

#: matplotlib.artist.Quiver.set:51 matplotlib.quiver.Quiver:253 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ":meth:`visible <matplotlib.artist.Artist.set_visible>`"

#: matplotlib.artist.Quiver.set:52 matplotlib.quiver.Quiver:254 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"

#: matplotlib.quiver.Quiver:263 of
msgid ":obj:`.Axes.quiverkey`"
msgstr ""

#: matplotlib.quiver.Quiver:264 of
msgid "Add a key to a quiver plot."
msgstr ""

#: matplotlib.quiver.Quiver.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr "Dibuja el Artist (y sus hijos) usando el renderizador dado."

#: matplotlib.quiver.Quiver.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr "Esto no tiene efecto si el artist no es visible (`.Artist.get_visible` devuelve False)."

#: matplotlib.quiver.Quiver.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr "**renderer** : `.RendererBase` subclase."

#: matplotlib.quiver.Quiver.draw:17 of
msgid "RendererBase subclass."
msgstr "Subclase RendererBase."

#: matplotlib.quiver.Quiver.draw:21 of
msgid "Notes"
msgstr "Notes"

#: matplotlib.quiver.Quiver.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr "Este método se sobrescribe en las subclases de Artist."

#: matplotlib.quiver.Quiver.remove:2 of
msgid "Remove the artist from the figure if possible."
msgstr ""

#: matplotlib.quiver.Quiver.remove:4 of
msgid "The effect will not be visible until the figure is redrawn, e.g., with `.FigureCanvasBase.draw_idle`.  Call `~.axes.Axes.relim` to update the axes limits if desired."
msgstr ""

#: matplotlib.quiver.Quiver.remove:8 of
msgid "Note: `~.axes.Axes.relim` will not see collections even if the collection was added to the axes with *autolim* = True."
msgstr ""

#: matplotlib.quiver.Quiver.remove:11 of
msgid "Note: there is no support for removing the artist's legend entry."
msgstr ""

#: matplotlib.artist.Quiver.set:2 of
msgid "Set multiple properties at once."
msgstr "Establece varias propiedades a la vez."

#: matplotlib.artist.Quiver.set:4 of
msgid "Supported properties are"
msgstr "Las propiedades admitidas son"

#: matplotlib.artist.Quiver.set:12 of
msgid ":meth:`UVC <matplotlib.quiver.Quiver.set_UVC>`"
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.quiver.Quiver.examples:2
msgid "Examples using ``matplotlib.quiver.Quiver``"
msgstr ""

#: ../../api/_as_gen/matplotlib.quiver.Quiver.examples:10
msgid "Advanced quiver and quiverkey functions"
msgstr "Funciones avanzadas de quiver y quiverkey"

#: ../../api/_as_gen/matplotlib.quiver.Quiver.examples:10
#: ../../api/_as_gen/matplotlib.quiver.Quiver.examples:18
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_demo.py`"
msgstr ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_demo.py`"

#: ../../api/_as_gen/matplotlib.quiver.Quiver.examples:29
msgid "Quiver Simple Demo"
msgstr "Demostración de Quiver Simple"

#: ../../api/_as_gen/matplotlib.quiver.Quiver.examples:29
#: ../../api/_as_gen/matplotlib.quiver.Quiver.examples:37
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_simple_demo.py`"
msgstr ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_simple_demo.py`"

