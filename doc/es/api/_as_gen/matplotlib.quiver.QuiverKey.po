msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:19\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.quiver.QuiverKey.po\n"
"X-Crowdin-File-ID: 1378\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.quiver.QuiverKey.rst:2
msgid "matplotlib.quiver.QuiverKey"
msgstr ""

#: matplotlib.quiver.QuiverKey:1 of
msgid "Bases: :py:class:`matplotlib.artist.Artist`"
msgstr ""

#: matplotlib.quiver.QuiverKey:2 of
msgid "Labelled arrow for use as a quiver plot scale key."
msgstr ""

#: matplotlib.quiver.QuiverKey:23 of
msgid "Add a key to a quiver plot."
msgstr ""

#: matplotlib.quiver.QuiverKey:25 of
msgid "The positioning of the key depends on *X*, *Y*, *coordinates*, and *labelpos*.  If *labelpos* is 'N' or 'S', *X*, *Y* give the position of the middle of the key arrow.  If *labelpos* is 'E', *X*, *Y* positions the head, and if *labelpos* is 'W', *X*, *Y* positions the tail; in either of these two cases, *X*, *Y* is somewhere in the middle of the arrow+label key object."
msgstr ""

#: matplotlib.quiver.QuiverKey matplotlib.quiver.QuiverKey.contains
#: matplotlib.quiver.QuiverKey.draw matplotlib.quiver.QuiverKey.set_figure of
msgid "Parameters"
msgstr ""

#: matplotlib.quiver.QuiverKey:35 of
msgid "**Q** : `matplotlib.quiver.Quiver`"
msgstr ""

#: matplotlib.quiver.QuiverKey:34 of
msgid "matplotlib.quiver.Quiver"
msgstr ""

#: matplotlib.quiver.QuiverKey:35 of
msgid "A `.Quiver` object as returned by a call to `~.Axes.quiver()`."
msgstr ""

#: matplotlib.quiver.QuiverKey:38 of
msgid "**X, Y**"
msgstr ""

#: matplotlib.artist.QuiverKey.set:30 of
msgid "float"
msgstr ""

#: matplotlib.quiver.QuiverKey:38 of
msgid "The location of the key."
msgstr ""

#: matplotlib.quiver.QuiverKey:41 of
msgid "**U**"
msgstr ""

#: matplotlib.quiver.QuiverKey:41 of
msgid "The length of the key."
msgstr ""

#: matplotlib.quiver.QuiverKey:44 of
msgid "**label**"
msgstr ""

#: matplotlib.artist.QuiverKey.set:19 matplotlib.artist.QuiverKey.set:28 of
msgid "str"
msgstr ""

#: matplotlib.quiver.QuiverKey:44 of
msgid "The key label (e.g., length and units of the key)."
msgstr ""

#: matplotlib.quiver.QuiverKey:48 of
msgid "**angle**"
msgstr ""

#: of
msgid "float, default: 0"
msgstr ""

#: matplotlib.quiver.QuiverKey:47 of
msgid "The angle of the key arrow, in degrees anti-clockwise from the x-axis."
msgstr ""

#: matplotlib.quiver.QuiverKey:56 of
msgid "**coordinates**"
msgstr ""

#: of
msgid "{'axes', 'figure', 'data', 'inches'}, default: 'axes'"
msgstr ""

#: matplotlib.quiver.QuiverKey:51 of
msgid "Coordinate system and units for *X*, *Y*: 'axes' and 'figure' are normalized coordinate systems with (0, 0) in the lower left and (1, 1) in the upper right; 'data' are the axes data coordinates (used for the locations of the vectors in the quiver plot itself); 'inches' is position in the figure in inches, with (0, 0) at the lower left corner."
msgstr ""

#: matplotlib.quiver.QuiverKey:59 of
msgid "**color**"
msgstr ""

#: of
msgid "color"
msgstr ""

#: matplotlib.quiver.QuiverKey:59 of
msgid "Overrides face and edge colors from *Q*."
msgstr ""

#: matplotlib.quiver.QuiverKey:63 of
msgid "**labelpos**"
msgstr ""

#: of
msgid "{'N', 'S', 'E', 'W'}"
msgstr ""

#: matplotlib.quiver.QuiverKey:62 of
msgid "Position the label above, below, to the right, to the left of the arrow, respectively."
msgstr ""

#: matplotlib.quiver.QuiverKey:66 of
msgid "**labelsep**"
msgstr ""

#: of
msgid "float, default: 0.1"
msgstr ""

#: matplotlib.quiver.QuiverKey:66 of
msgid "Distance in inches between the arrow and the label."
msgstr ""

#: matplotlib.quiver.QuiverKey:69 of
msgid "**labelcolor** : color, default: :rc:`text.color`"
msgstr ""

#: of
msgid "color, default:"
msgstr ""

#: matplotlib.quiver.QuiverKey:69 of
msgid "Label color."
msgstr ""

#: matplotlib.quiver.QuiverKey:74 of
msgid "**fontproperties**"
msgstr ""

#: of
msgid "dict, optional"
msgstr ""

#: matplotlib.quiver.QuiverKey:72 of
msgid "A dictionary with keyword arguments accepted by the `~matplotlib.font_manager.FontProperties` initializer: *family*, *style*, *variant*, *size*, *weight*."
msgstr ""

#: matplotlib.quiver.QuiverKey:91 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.quiver.QuiverKey:77 of
msgid "Any additional keyword arguments are used to override vector properties taken from *Q*."
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:2 of
msgid "Test whether the artist contains the mouse event."
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:8 of
msgid "**mouseevent** : `matplotlib.backend_bases.MouseEvent`"
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:7 of
msgid "matplotlib.backend_bases.MouseEvent"
msgstr ""

#: matplotlib.quiver.QuiverKey.contains of
msgid "Returns"
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:13 of
msgid "**contains**"
msgstr ""

#: matplotlib.artist.QuiverKey.set:14 matplotlib.artist.QuiverKey.set:16
#: matplotlib.artist.QuiverKey.set:20 matplotlib.artist.QuiverKey.set:24
#: matplotlib.artist.QuiverKey.set:29 of
msgid "bool"
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:13 of
msgid "Whether any values are within the radius."
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:30 of
msgid "**details**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: matplotlib.quiver.QuiverKey.contains:16 of
msgid "An artist-specific dictionary of details of the event context, such as which points are contained in the pick radius. See the individual Artist subclasses for details."
msgstr ""

#: matplotlib.quiver.QuiverKey.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr ""

#: matplotlib.quiver.QuiverKey.draw:4 of
msgid "This has no effect if the artist is not visible (`.Artist.get_visible` returns False)."
msgstr ""

#: matplotlib.quiver.QuiverKey.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr ""

#: matplotlib.quiver.QuiverKey.draw:17 of
msgid "RendererBase subclass."
msgstr ""

#: matplotlib.quiver.QuiverKey.draw:21 of
msgid "Notes"
msgstr ""

#: matplotlib.quiver.QuiverKey.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr ""

#: matplotlib.quiver.QuiverKey.remove:2 of
msgid "Remove the artist from the figure if possible."
msgstr ""

#: matplotlib.quiver.QuiverKey.remove:4 of
msgid "The effect will not be visible until the figure is redrawn, e.g., with `.FigureCanvasBase.draw_idle`.  Call `~.axes.Axes.relim` to update the axes limits if desired."
msgstr ""

#: matplotlib.quiver.QuiverKey.remove:8 of
msgid "Note: `~.axes.Axes.relim` will not see collections even if the collection was added to the axes with *autolim* = True."
msgstr ""

#: matplotlib.quiver.QuiverKey.remove:11 of
msgid "Note: there is no support for removing the artist's legend entry."
msgstr ""

#: matplotlib.artist.QuiverKey.set:2 of
msgid "Set multiple properties at once."
msgstr ""

#: matplotlib.artist.QuiverKey.set:4 of
msgid "Supported properties are"
msgstr ""

#: matplotlib.artist.QuiverKey.set:10 of
msgid "Property"
msgstr ""

#: matplotlib.artist.QuiverKey.set:10 of
msgid "Description"
msgstr ""

#: matplotlib.artist.QuiverKey.set:12 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:12 of
msgid "a filter function, which takes a (m, n, 3) float array and a dpi value, and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.artist.QuiverKey.set:13 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:13 of
msgid "scalar or None"
msgstr ""

#: matplotlib.artist.QuiverKey.set:14 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:15 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:15 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:16 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:17 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:17 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.artist.QuiverKey.set:18 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:18 of
msgid "unknown"
msgstr ""

#: matplotlib.artist.QuiverKey.set:19 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:20 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:21 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:21 of
msgid "object"
msgstr ""

#: matplotlib.artist.QuiverKey.set:22 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:22 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:23 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:23 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.artist.QuiverKey.set:24 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:25 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:25 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.artist.QuiverKey.set:26 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:26 of
msgid "bool or None"
msgstr ""

#: matplotlib.artist.QuiverKey.set:27 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:27 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:28 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:29 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.artist.QuiverKey.set:30 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: matplotlib.quiver.QuiverKey.set_figure:2 of
msgid "Set the `.Figure` instance the artist belongs to."
msgstr ""

#: matplotlib.quiver.QuiverKey.set_figure:21 of
msgid "**fig** : `.Figure`"
msgstr ""

#: matplotlib.quiver.QuiverKey.set_figure:20 of
msgid "Figure"
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.quiver.QuiverKey.examples:2
msgid "Examples using ``matplotlib.quiver.QuiverKey``"
msgstr ""

#: ../../api/_as_gen/matplotlib.quiver.QuiverKey.examples:10
msgid "Advanced quiver and quiverkey functions"
msgstr ""

#: ../../api/_as_gen/matplotlib.quiver.QuiverKey.examples:10
#: ../../api/_as_gen/matplotlib.quiver.QuiverKey.examples:18
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_quiver_demo.py`"
msgstr ""

