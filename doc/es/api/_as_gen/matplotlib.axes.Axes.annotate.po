msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/_as_gen/matplotlib.axes.Axes.annotate.po\n"
"X-Crowdin-File-ID: 334\n"
"Language: es_ES\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.rst:2
msgid "matplotlib.axes.Axes.annotate"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:2 of
msgid "Annotate the point *xy* with text *text*."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:4 of
msgid "In the simplest form, the text is placed at *xy*."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:6 of
msgid "Optionally, the text can be displayed in another position *xytext*. An arrow pointing from the text to the annotated point *xy* can then be added by defining *arrowprops*."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:13 of
msgid "**text**"
msgstr ""

#: of
msgid "str"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:13 of
msgid "The text of the annotation."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:17 of
msgid "**xy**"
msgstr ""

#: of
msgid "(float, float)"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:16 of
msgid "The point *(x, y)* to annotate. The coordinate system is determined by *xycoords*."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:21 of
msgid "**xytext** : (float, float), default: *xy*"
msgstr ""

#: of
msgid "(float, float), default:"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:20 of
msgid "The position *(x, y)* to place the text at. The coordinate system is determined by *textcoords*."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:72 of
msgid "**xycoords** : str or `.Artist` or `.Transform` or callable or (float, float), default: 'data'"
msgstr ""

#: of
msgid "str or"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:24 of
msgid "The coordinate system that *xy* is given in. The following types of values are supported:"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:27 of
msgid "One of the following strings:"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:30
#: matplotlib.axes._axes.Axes.annotate:81 of
msgid "Value"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:30
#: matplotlib.axes._axes.Axes.annotate:81
#: matplotlib.axes._axes.Axes.annotate:101
#: matplotlib.axes._axes.Axes.annotate:121 of
msgid "Description"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:32 of
msgid "'figure points'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:32 of
msgid "Points from the lower left of the figure"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:33 of
msgid "'figure pixels'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:33 of
msgid "Pixels from the lower left of the figure"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:34 of
msgid "'figure fraction'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:34 of
msgid "Fraction of figure from lower left"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:35 of
msgid "'subfigure points'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:35 of
msgid "Points from the lower left of the subfigure"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:36 of
msgid "'subfigure pixels'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:36 of
msgid "Pixels from the lower left of the subfigure"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:37 of
msgid "'subfigure fraction'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:37 of
msgid "Fraction of subfigure from lower left"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:38 of
msgid "'axes points'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:38 of
msgid "Points from lower left corner of axes"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:39 of
msgid "'axes pixels'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:39 of
msgid "Pixels from lower left corner of axes"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:40 of
msgid "'axes fraction'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:40 of
msgid "Fraction of axes from lower left"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:41 of
msgid "'data'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:41 of
msgid "Use the coordinate system of the object being annotated (default)"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:43 of
msgid "'polar'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:43 of
msgid "*(theta, r)* if not native 'data' coordinates"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:47 of
msgid "Note that 'subfigure pixels' and 'figure pixels' are the same for the parent figure, so users who want code that is usable in a subfigure can use 'subfigure pixels'."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:51 of
msgid "An `.Artist`: *xy* is interpreted as a fraction of the artist's `~matplotlib.transforms.Bbox`. E.g. *(0, 0)* would be the lower left corner of the bounding box and *(0.5, 1)* would be the center top of the bounding box."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:56 of
msgid "A `.Transform` to transform *xy* to screen coordinates."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:58 of
msgid "A function with one of the following signatures::"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:63 of
msgid "where *renderer* is a `.RendererBase` subclass."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:65 of
msgid "The result of the function is interpreted like the `.Artist` and `.Transform` cases above."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:68 of
msgid "A tuple *(xcoords, ycoords)* specifying separate coordinate systems for *x* and *y*. *xcoords* and *ycoords* must each be of one of the above described types."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:72 of
msgid "See :ref:`plotting-guide-annotation` for more details."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:85 of
msgid "**textcoords** : str or `.Artist` or `.Transform` or callable or (float, float), default: value of *xycoords*"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:75 of
msgid "The coordinate system that *xytext* is given in."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:77 of
msgid "All *xycoords* values are valid as well as the following strings:"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:83 of
msgid "'offset points'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:83 of
msgid "Offset (in points) from the *xy* value"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:84 of
msgid "'offset pixels'"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:84 of
msgid "Offset (in pixels) from the *xy* value"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:140 of
msgid "**arrowprops**"
msgstr ""

#: of
msgid "dict, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:88 of
msgid "The properties used to draw a `.FancyArrowPatch` arrow between the positions *xy* and *xytext*.  Defaults to None, i.e. no arrow is drawn."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:92 of
msgid "For historical reasons there are two different ways to specify arrows, \"simple\" and \"fancy\":"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:95 of
msgid "**Simple arrow:**"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:97 of
msgid "If *arrowprops* does not contain the key 'arrowstyle' the allowed keys are:"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:101
#: matplotlib.axes._axes.Axes.annotate:121 of
msgid "Key"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:103 of
msgid "width"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:103 of
msgid "The width of the arrow in points"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:104 of
msgid "headwidth"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:104 of
msgid "The width of the base of the arrow head in points"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:105 of
msgid "headlength"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:105 of
msgid "The length of the arrow head in points"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:106 of
msgid "shrink"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:106 of
msgid "Fraction of total length to shrink from both ends"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:107
#: matplotlib.axes._axes.Axes.annotate:132 of
msgid "?"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:107 of
msgid "Any key to :class:`matplotlib.patches.FancyArrowPatch`"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:110 of
msgid "The arrow is attached to the edge of the text box, the exact position (corners or centers) depending on where it's pointing to."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:113 of
msgid "**Fancy arrow:**"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:115 of
msgid "This is used if 'arrowstyle' is provided in the *arrowprops*."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:117 of
msgid "Valid keys are the following `~matplotlib.patches.FancyArrowPatch` parameters:"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:123 of
msgid "arrowstyle"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:123 of
msgid "the arrow style"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:124 of
msgid "connectionstyle"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:124 of
msgid "the connection style"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:125 of
msgid "relpos"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:125 of
msgid "see below; default is (0.5, 0.5)"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:126 of
msgid "patchA"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:126 of
msgid "default is bounding box of the text"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:127 of
msgid "patchB"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:127 of
msgid "default is None"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:128 of
msgid "shrinkA"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:128
#: matplotlib.axes._axes.Axes.annotate:129 of
msgid "default is 2 points"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:129 of
msgid "shrinkB"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:130 of
msgid "mutation_scale"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:130 of
msgid "default is text size (in points)"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:131 of
msgid "mutation_aspect"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:131 of
msgid "default is 1."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:132 of
msgid "any key for :class:`matplotlib.patches.PathPatch`"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:135 of
msgid "The exact starting point position of the arrow is defined by *relpos*. It's a tuple of relative coordinates of the text box, where (0, 0) is the lower left corner and (1, 1) is the upper right corner. Values <0 and >1 are supported and specify points outside the text box. By default (0.5, 0.5) the starting point is centered in the text box."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:150 of
msgid "**annotation_clip**"
msgstr ""

#: of
msgid "bool or None, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:143 of
msgid "Whether to draw the annotation when the annotation point *xy* is outside the axes area."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:146 of
msgid "If *True*, the annotation will only be drawn when *xy* is within the axes."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:148 of
msgid "If *False*, the annotation will always be drawn."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:149 of
msgid "If *None*, the annotation will only be drawn when *xy* is within the axes and *xycoords* is 'data'."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:153 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:153 of
msgid "Additional kwargs are passed to `~matplotlib.text.Text`."
msgstr ""

#: matplotlib.axes._axes.Axes.annotate of
msgid "Returns"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:164 of
msgid "`.Annotation`"
msgstr ""

#: matplotlib.axes._axes.Axes.annotate:169 of
msgid ":ref:`plotting-guide-annotation`"
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:2
msgid "Examples using ``matplotlib.axes.Axes.annotate``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:10
msgid "Broken Barh"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:18
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_broken_barh.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:29
msgid "Scale invariant angle label"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:29
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:37
msgid ":ref:`sphx_glr_gallery_text_labels_and_annotations_angle_annotation.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:48
msgid "Text Commands"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:48
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:56
msgid ":ref:`sphx_glr_gallery_pyplots_text_commands.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:67
msgid "Basic Usage"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:67
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:75
msgid ":ref:`sphx_glr_tutorials_introductory_usage.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:86
msgid "Transformations Tutorial"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:86
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:94
msgid ":ref:`sphx_glr_tutorials_advanced_transforms_tutorial.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:105
msgid "Text in Matplotlib Plots"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:105
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:113
msgid ":ref:`sphx_glr_tutorials_text_text_intro.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:124
msgid "Annotations"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:124
#: ../../api/_as_gen/matplotlib.axes.Axes.annotate.examples:132
msgid ":ref:`sphx_glr_tutorials_text_annotations.py`"
msgstr ""

