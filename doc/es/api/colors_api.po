msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:22\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/colors_api.po\n"
"X-Crowdin-File-ID: 1770\n"
"Language: es_ES\n"

#: ../../api/colors_api.rst:3
msgid "``matplotlib.colors``"
msgstr ""

#: ../../api/colors_api.rst:7
msgid "The Color :ref:`tutorials <tutorials-colors>` and :ref:`examples <color_examples>` demonstrate how to set colors and colormaps. You may want to read those instead."
msgstr ""

#: matplotlib.colors:1 of
msgid "A module for converting numbers or color arguments to *RGB* or *RGBA*."
msgstr ""

#: matplotlib.colors:3 of
msgid "*RGB* and *RGBA* are sequences of, respectively, 3 or 4 floats in the range 0-1."
msgstr ""

#: matplotlib.colors:6 of
msgid "This module includes functions and classes for color specification conversions, and for mapping numbers to colors in a 1-D array of colors called a colormap."
msgstr ""

#: matplotlib.colors:9 of
msgid "Mapping data onto colors using a colormap typically involves two steps: a data array is first mapped onto the range 0-1 using a subclass of `Normalize`, then this number is mapped to a color using a subclass of `Colormap`.  Two subclasses of `Colormap` provided here:  `LinearSegmentedColormap`, which uses piecewise-linear interpolation to define colormaps, and `ListedColormap`, which makes a colormap from a list of colors."
msgstr ""

#: matplotlib.colors:18 of
msgid ":doc:`/tutorials/colors/colormap-manipulation` for examples of how to make colormaps and"
msgstr ""

#: matplotlib.colors:21 of
msgid ":doc:`/tutorials/colors/colormaps` for a list of built-in colormaps."
msgstr ""

#: matplotlib.colors:23 of
msgid ":doc:`/tutorials/colors/colormapnorms` for more details about data normalization"
msgstr ""

#: matplotlib.colors:26 of
msgid "More colormaps are available at palettable_."
msgstr ""

#: matplotlib.colors:28 of
msgid "The module also provides functions for checking whether an object can be interpreted as a color (`is_color_like`), for converting such an object to an RGBA tuple (`to_rgba`) or to an HTML-like hex string in the \"#rrggbb\" format (`to_hex`), and a sequence of colors to an (n, 4) RGBA array (`to_rgba_array`).  Caching is used for efficiency."
msgstr ""

#: matplotlib.colors:34 of
msgid "Colors that Matplotlib recognizes are listed at :doc:`/tutorials/colors/colors`."
msgstr ""

#: ../../api/colors_api.rst:18
msgid "Classes"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`BoundaryNorm <matplotlib.colors.BoundaryNorm>`\\ \\(boundaries\\, ncolors\\[\\, clip\\, extend\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Generate a colormap index based on discrete intervals."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`Colormap <matplotlib.colors.Colormap>`\\ \\(name\\[\\, N\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Baseclass for all scalar to RGBA mappings."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`CenteredNorm <matplotlib.colors.CenteredNorm>`\\ \\(\\[vcenter\\, halfrange\\, clip\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Normalize symmetrical data around a center (0 by default)."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`LightSource <matplotlib.colors.LightSource>`\\ \\(\\[azdeg\\, altdeg\\, hsv\\_min\\_val\\, ...\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Create a light source coming from the specified azimuth and elevation."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`LinearSegmentedColormap <matplotlib.colors.LinearSegmentedColormap>`\\ \\(name\\, segmentdata\\[\\, ...\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Colormap objects based on lookup tables using linear segments."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`ListedColormap <matplotlib.colors.ListedColormap>`\\ \\(colors\\[\\, name\\, N\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Colormap object generated from a list of colors."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`LogNorm <matplotlib.colors.LogNorm>`\\ \\(\\[vmin\\, vmax\\, clip\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Normalize a given value to the 0-1 range on a log scale."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`NoNorm <matplotlib.colors.NoNorm>`\\ \\(\\[vmin\\, vmax\\, clip\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Dummy replacement for `Normalize`, for the case where we want to use indices directly in a `~matplotlib.cm.ScalarMappable`."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`Normalize <matplotlib.colors.Normalize>`\\ \\(\\[vmin\\, vmax\\, clip\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "A class which, when called, linearly normalizes data into the ``[0.0, 1.0]`` interval."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`PowerNorm <matplotlib.colors.PowerNorm>`\\ \\(gamma\\[\\, vmin\\, vmax\\, clip\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Linearly map a given value to the 0-1 range and then apply a power-law normalization over that range."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`SymLogNorm <matplotlib.colors.SymLogNorm>`\\ \\(linthresh\\[\\, linscale\\, vmin\\, ...\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "The symmetrical logarithmic scale is logarithmic in both the positive and negative directions from the origin."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`TwoSlopeNorm <matplotlib.colors.TwoSlopeNorm>`\\ \\(vcenter\\[\\, vmin\\, vmax\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Normalize data with a set center."
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid ":py:obj:`FuncNorm <matplotlib.colors.FuncNorm>`\\ \\(functions\\[\\, vmin\\, vmax\\, clip\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:37:<autosummary>:1
msgid "Arbitrary normalization using functions for the forward and inverse."
msgstr ""

#: ../../api/colors_api.rst:39
msgid "Functions"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`from_levels_and_colors <matplotlib.colors.from_levels_and_colors>`\\ \\(levels\\, colors\\[\\, extend\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "A helper routine to generate a cmap and a norm instance which behave similar to contourf's levels and colors arguments."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`hsv_to_rgb <matplotlib.colors.hsv_to_rgb>`\\ \\(hsv\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Convert hsv values to rgb."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`rgb_to_hsv <matplotlib.colors.rgb_to_hsv>`\\ \\(arr\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Convert float rgb values (in the range [0, 1]), in a numpy array to hsv values."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`to_hex <matplotlib.colors.to_hex>`\\ \\(c\\[\\, keep\\_alpha\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Convert *c* to a hex color."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`to_rgb <matplotlib.colors.to_rgb>`\\ \\(c\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Convert *c* to an RGB color, silently dropping the alpha channel."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`to_rgba <matplotlib.colors.to_rgba>`\\ \\(c\\[\\, alpha\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Convert *c* to an RGBA color."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`to_rgba_array <matplotlib.colors.to_rgba_array>`\\ \\(c\\[\\, alpha\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Convert *c* to a (n, 4) array of RGBA colors."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`is_color_like <matplotlib.colors.is_color_like>`\\ \\(c\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Return whether *c* can be interpreted as an RGB(A) color."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`same_color <matplotlib.colors.same_color>`\\ \\(c1\\, c2\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Return whether the colors *c1* and *c2* are the same."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`get_named_colors_mapping <matplotlib.colors.get_named_colors_mapping>`\\ \\(\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Return the global mapping of names to named colors."
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid ":py:obj:`make_norm_from_scale <matplotlib.colors.make_norm_from_scale>`\\ \\(scale\\_cls\\[\\, ...\\]\\)"
msgstr ""

#: ../../api/colors_api.rst:55:<autosummary>:1
msgid "Decorator for building a `.Normalize` subclass from a `~.scale.ScaleBase` subclass."
msgstr ""

