msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:22\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/prev_api_changes/api_changes_3.4.0.po\n"
"X-Crowdin-File-ID: 1932\n"
"Language: es_ES\n"

#: ../../api/prev_api_changes/api_changes_3.4.0.rst:2
msgid "API Changes for 3.4.0"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:2
msgid "Behaviour changes"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:5
msgid "Constrained layout rewrite"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:7
msgid "The layout manager ``constrained_layout`` was re-written with different outer constraints that should be more robust to complicated subplot layouts. User-facing changes are:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:11
msgid "some poorly constrained layouts will have different width/height plots than before."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:13
msgid "colorbars now respect the ``anchor`` keyword argument of `matplotlib.colorbar.make_axes`"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:15
msgid "colorbars are wider."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:16
msgid "colorbars in different rows or columns line up more robustly."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:17
msgid "*hspace* and *wspace* options to  `.Figure.set_constrained_layout_pads` were twice as wide as the docs said they should be. So these now follow the docs."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:20
msgid "This feature will remain \"experimental\" until the new changes have been used enough by users, so we anticipate version 3.5 or 3.6. On the other hand, ``constrained_layout`` is extensively tested and used in examples in the library, so using it should be safe, but layouts may not be exactly the same as more development takes place."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:26
msgid "Details of using ``constrained_layout``, and its algorithm are available at :doc:`/tutorials/intermediate/constrainedlayout_guide`"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:30
msgid "``plt.subplot`` re-selection without keyword arguments"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:32
msgid "The purpose of `.pyplot.subplot` is to facilitate creating and re-selecting Axes in a Figure when working strictly in the implicit pyplot API. When creating new Axes it is possible to select the projection (e.g. polar, 3D, or various cartographic projections) as well as to pass additional keyword arguments through to the Axes-subclass that is created."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:38
msgid "The first time `.pyplot.subplot` is called for a given position in the Axes grid it always creates and returns a new Axes with the passed arguments and projection (defaulting to rectilinear). On subsequent calls to `.pyplot.subplot` we have to determine if an existing Axes has a) equivalent parameters, in which case it should be selected as the current Axes and returned, or b) different parameters, in which case a new Axes is created and the existing Axes is removed. This leaves the question of what is \"equivalent parameters\"."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:47
msgid "Previously it was the case that an existing Axes subclass, except for Axes3D, would be considered equivalent to a 2D rectilinear Axes, despite having different projections, if the keyword arguments (other than *projection*) matched. Thus::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:56
msgid "We are embracing this long standing behavior to ensure that in the case when no keyword arguments (of any sort) are passed to `.pyplot.subplot` any existing Axes is returned, without consideration for keywords or projection used to initially create it. This will cause a change in behavior when additional keywords were passed to the original Axes::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:72
msgid "For the same reason, if there was an existing Axes that was not rectilinear, passing ``projection='rectilinear'`` would reuse the existing Axes ::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:80
msgid "contrary to the user's request."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:82
msgid "Previously Axes3D could not be re-selected with `.pyplot.subplot` due to an unrelated bug (also fixed in Matplotlib 3.4). While Axes3D are now consistent with all other projections there is a change in behavior for ::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:94
msgid "``ioff`` and ``ion`` can be used as context managers"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:96
msgid "`.pyplot.ion` and `.pyplot.ioff` may now be used as context managers to create a context with interactive mode on or off, respectively. The old behavior of calling these functions is maintained. To use the new functionality call as::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:104
msgid "Locators and formatters must be in the class hierarchy"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:106
msgid "Axis locators and formatters must now be subclasses of `~matplotlib.ticker.Locator` and `~matplotlib.ticker.Formatter` respectively."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:110
msgid "Date locator for DAILY interval now returns middle of month"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:112
msgid "The `matplotlib.dates.AutoDateLocator` has a default of ``interval_multiples=True`` that attempts to align ticks with the start of meaningful intervals like the start of the month, or start of the day, etc. That lead to approximately 140-day intervals being mapped to the first and 22nd of the month. This has now been changed so that it chooses the first and 15th of the month, which is probably what most people want."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:120
msgid "``ScalarFormatter`` *useLocale* option obeys grouping"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:122
msgid "When the `~.ScalarFormatter` option *useLocale* is enabled (or :rc:`axes.formatter.use_locale` is *True*) and the configured locale uses grouping, a separator will be added as described in `locale.format_string`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:127
msgid "``Axes.errorbar`` cycles non-color properties correctly"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:129
msgid "Formerly, `.Axes.errorbar` incorrectly skipped the Axes property cycle if a color was explicitly specified, even if the property cycler was for other properties (such as line style). Now, `.Axes.errorbar` will advance the Axes property cycle as done for `.Axes.plot`, i.e., as long as all properties in the cycler are not explicitly passed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:136
msgid "pyplot.specgram always uses origin='upper'"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:138
msgid "Previously if :rc:`image.origin` was set to something other than ``'upper'`` or if the *origin* keyword argument was passed with a value other than ``'upper'``, the spectrogram itself would flip, but the Axes would remain oriented for an origin value of ``'upper'``, so that the resulting plot was incorrectly labelled."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:144
msgid "Now, the *origin* keyword argument is not supported and the ``image.origin`` rcParam is ignored. The function `matplotlib.pyplot.specgram` is forced to use ``origin='upper'``, so that the Axes are correct for the plotted spectrogram."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:149
msgid "xunits=None and yunits=None passed as keyword arguments are treated as \"no action\""
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:151
msgid "Many (but not all) of the methods on `~.axes.Axes` take the (undocumented) keyword arguments *xunits* and *yunits* that will update the units on the given Axis by calling `.Axis.set_units` and `.Axis.update_units`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:155
msgid "Previously if *None* was passed it would clear the value stored in ``.Axis.units`` which will in turn break converters which rely on the value in ``.Axis.units`` to work properly (notably `.StrCategoryConverter`)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:159
msgid "This changes the semantics of ``ax.meth(..., xunits=None, yunits=None)`` from \"please clear the units\" to \"do the default thing as if they had not been passed\" which is consistent with the standard behavior of Matplotlib keyword arguments."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:164
msgid "If you were relying on passing ``xunits=None`` to plotting methods to clear the ``.Axes.units`` attribute, directly call `.Axis.set_units` (and `.Axis.update_units` if you also require the converter to be updated)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:169
msgid "Annotations with ``annotation_clip`` no longer affect ``tight_layout``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:171
msgid "Previously, `.text.Annotation.get_tightbbox` always returned the full `.text.Annotation.get_window_extent` of the object, independent of the value of ``annotation_clip``. `.text.Annotation.get_tightbbox` now correctly takes this extra clipping box into account, meaning that `~.text.Annotation`\\s that are not drawn because of ``annotation_clip`` will not count towards the Axes bounding box calculations, such as those done by `~.pyplot.tight_layout`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:178
msgid "This is now consistent with the API described in `~.artist.Artist`, which specifies that ``get_window_extent`` should return the full extents and ``get_tightbbox`` should \"account for any clipping\"."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:183
msgid "Parasite Axes pcolor and pcolormesh now defaults to placing grid edges at integers, not half-integers"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:185
msgid "This is consistent with `~.Axes.pcolor` and `~.Axes.pcolormesh`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:188
msgid "``Colorbar`` outline is now a ``Spine``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:190
msgid "The outline of `~matplotlib.colorbar.Colorbar` is now a `.Spine` and drawn as one, instead of a `.Polygon` drawn as an artist. This ensures it will always be drawn after (i.e., on top of) all artists, consistent with Spines on normal Axes."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:196
msgid "``Colorbar.dividers`` changes"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:198
msgid "This attribute is now always a `.LineCollection` -- an empty one if ``drawedges`` is *False*. Its default colors and linewidth (:rc:`axes.edgecolor`, :rc:`axes.linewidth`) are now resolved at instantiation time, not at draw time."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:204
msgid "Raise or warn on registering a colormap twice"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:206
msgid "When using `matplotlib.cm.register_cmap` to register a user provided or third-party colormap it will now raise a `ValueError` if trying to over-write one of the built in colormaps and warn if trying to over write a user registered colormap. This may raise for user-registered colormaps in the future."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:213
msgid "Consecutive rasterized draws now merged"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:215
msgid "Tracking of depth of raster draws has moved from `.backend_mixed.MixedModeRenderer.start_rasterizing` and `.backend_mixed.MixedModeRenderer.stop_rasterizing` into `.artist.allow_rasterization`. This means the start and stop functions are only called when the rasterization actually needs to be started and stopped."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:221
msgid "The output of vector backends will change in the case that rasterized elements are merged. This should not change the appearance of outputs."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:224
msgid "The renders in 3rd party backends are now expected to have ``self._raster_depth`` and ``self._rasterizing`` initialized to ``0`` and *False* respectively."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:229
msgid "Consistent behavior of ``draw_if_interactive()`` across backends"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:231
msgid "`.pyplot.draw_if_interactive` no longer shows the window (if it was previously unshown) on the Tk and nbAgg backends, consistently with all other backends."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:235
msgid "The Artist property *rasterized* cannot be *None* anymore"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:237
msgid "It is now a boolean only. Before the default was *None* and `.Artist.set_rasterized` was documented to accept *None*. However, *None* did not have a special meaning and was treated as *False*."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:242
msgid "Canvas's callback registry now stored on Figure"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:244
msgid "The canonical location of the `~.cbook.CallbackRegistry` used to handle Figure/Canvas events has been moved from the Canvas to the Figure. This change should be transparent to almost all users, however if you are swapping switching the Figure out from on top of a Canvas or visa versa you may see a change in behavior."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:251
msgid "Harmonized key event data across backends"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:253
msgid "The different backends with key translation support, now handle \"Shift\" as a sometimes modifier, where the ``'shift+'`` prefix won't be added if a key translation was made."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:257
msgid "In the Qt5 backend, the ``matplotlib.backends.backend_qt5.SPECIAL_KEYS`` dictionary contains keys that do *not* return their unicode name instead they have manually specified names. The name for ``QtCore.Qt.Key_Meta`` has changed to ``'meta'`` to be consistent with the other GUI backends."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:262
msgid "The WebAgg backend now handles key translations correctly on non-US keyboard layouts."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:265
msgid "In the GTK and Tk backends, the handling of non-ASCII keypresses (as reported in the KeyEvent passed to ``key_press_event``-handlers) now correctly reports Unicode characters (e.g., €), and better respects NumLock on the numpad."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:269
msgid "In the GTK and Tk backends, the following key names have changed; the new names are consistent with those reported by the Qt backends:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:272
msgid "The \"Break/Pause\" key (keysym 0xff13) is now reported as ``\"pause\"`` instead of ``\"break\"`` (this is also consistent with the X key name)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:274
msgid "The numpad \"delete\" key is now reported as ``\"delete\"`` instead of ``\"dec\"``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:277
msgid "WebAgg backend no longer reports a middle click as a right click"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:279
msgid "Previously when using the WebAgg backend the event passed to a callback by ``fig.canvas.mpl_connect('mouse_button_event', callback)`` on a middle click would report `.MouseButton.RIGHT` instead of `.MouseButton.MIDDLE`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:284
msgid "ID attribute of XML tags in SVG files now based on SHA256 rather than MD5"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:286
msgid "Matplotlib generates unique ID attributes for various tags in SVG files. Matplotlib previously generated these unique IDs using the first 10 characters of an MD5 hash. The MD5 hashing algorithm is not available in Python on systems with Federal Information Processing Standards (FIPS) enabled. Matplotlib now uses the first 10 characters of an SHA256 hash instead. SVG files that would otherwise match those saved with earlier versions of matplotlib, will have different ID attributes."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:295
msgid "``RendererPS.set_font`` is no longer a no-op in AFM mode"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:297
msgid "`.RendererPS.set_font` now sets the current PostScript font in all cases."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:300
msgid "Autoscaling in Axes3D"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:302
msgid "In Matplotlib 3.2.0, autoscaling was made lazier for 2D Axes, i.e., limits would only be recomputed when actually rendering the canvas, or when the user queries the Axes limits. This performance improvement is now extended to `.Axes3D`. This also fixes some issues with autoscaling being triggered unexpectedly in Axes3D."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:308
msgid "Please see :ref:`the API change for 2D Axes <api-changes-3-2-0-autoscaling>` for further details."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:312
msgid "Axes3D automatically adding itself to Figure is deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:314
msgid "New `.Axes3D` objects previously added themselves to figures when they were created, unlike all other Axes classes, which lead to them being added twice if ``fig.add_subplot(111, projection='3d')`` was called."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:318
msgid "This behavior is now deprecated and will warn. The new keyword argument *auto_add_to_figure* controls the behavior and can be used to suppress the warning. The default value will change to *False* in Matplotlib 3.5, and any non-*False* value will be an error in Matplotlib 3.6."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:323
msgid "In the future, `.Axes3D` will need to be explicitly added to the figure ::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:331
msgid "as needs to be done for other `.axes.Axes` sub-classes. Or, a 3D projection can be made via::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:337
msgid "``mplot3d.art3d.get_dir_vector`` always returns NumPy arrays"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:339
msgid "For consistency, `~.mplot3d.art3d.get_dir_vector` now always returns NumPy arrays, even if the input is a 3-element iterable."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:343
msgid "Changed cursive and fantasy font definitions"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:345
msgid "The Comic Sans and Comic Neue fonts were moved from the default :rc:`font.fantasy` list to the default :rc:`font.cursive` setting, in accordance with the CSS font families example_ and in order to provide a cursive font present in Microsoft's Core Fonts set."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/behaviour.rst:353
msgid "docstring.Substitution now always dedents docstrings before string interpolation"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:2
msgid "Deprecations"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:5
msgid "Extra parameters to Axes constructor"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:7
msgid "Parameters of the Axes constructor other than *fig* and *rect* will become keyword-only in a future version."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:11
msgid "``pyplot.gca`` and ``Figure.gca`` keyword arguments"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:13
msgid "Passing keyword arguments to `.pyplot.gca` or `.figure.Figure.gca` will not be supported in a future release."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:17
msgid "``Axis.cla``, ``RadialAxis.cla``, ``ThetaAxis.cla`` and ``Spine.cla``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:19
msgid "These methods are deprecated in favor of the respective ``clear()`` methods."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:22
msgid "Invalid hatch pattern characters are no longer ignored"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:24
msgid "When specifying hatching patterns, characters that are not recognized will raise a deprecation warning. In the future, this will become a hard error."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:28
msgid "``imread`` reading from URLs"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:30
msgid "Passing a URL to `~.pyplot.imread()` is deprecated. Please open the URL for reading and directly use the Pillow API (``PIL.Image.open(urllib.request.urlopen(url))``, or ``PIL.Image.open(io.BytesIO(requests.get(url).content))``) instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:36
msgid "Subplot-related attributes and methods"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:38
msgid "Some ``SubplotBase`` methods and attributes have been deprecated and/or moved to `.SubplotSpec`:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:41
msgid "``get_geometry`` (use `.SubplotBase.get_subplotspec` instead),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:42
msgid "``change_geometry`` (use `.SubplotBase.set_subplotspec` instead),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:43
msgid "``is_first_row``, ``is_last_row``, ``is_first_col``, ``is_last_col`` (use the corresponding methods on the `.SubplotSpec` instance instead),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:45
msgid "``update_params`` (now a no-op),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:46
msgid "``figbox`` (use ``ax.get_subplotspec().get_geometry(ax.figure)`` instead to recompute the geometry, or ``ax.get_position()`` to read its current value),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:48
msgid "``numRows``, ``numCols`` (use the ``nrows`` and ``ncols`` attribute on the `.GridSpec` instead)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:51
msgid "Likewise, the ``get_geometry``, ``change_geometry``, ``update_params``, and ``figbox`` methods/attributes of `.SubplotDivider` have been deprecated, with similar replacements."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:56
msgid "``is_url`` and ``URL_REGEX``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:58
msgid "... are deprecated. (They were previously defined in the toplevel :mod:`matplotlib` module.)"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:62
msgid "``matplotlib.style.core`` deprecations"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:63
msgid "``STYLE_FILE_PATTERN``, ``load_base_library``, and ``iter_user_libraries`` are deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:67
msgid "``dpi_cor`` property of `.FancyArrowPatch`"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:69
msgid "This parameter is considered internal and deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:72
msgid "Passing ``boxstyle=\"custom\", bbox_transmuter=...`` to ``FancyBboxPatch``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:74
msgid "In order to use a custom boxstyle, directly pass it as the *boxstyle* argument to `.FancyBboxPatch`. This was previously already possible, and is consistent with custom arrow styles and connection styles."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:79
msgid "BoxStyles are now called without passing the *mutation_aspect* parameter"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:81
msgid "Mutation aspect is now handled by the artist itself. Hence the *mutation_aspect* parameter of ``BoxStyle._Base.__call__`` is deprecated, and custom boxstyles should be implemented to not require this parameter (it can be left as a parameter defaulting to 1 for back-compatibility)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:87
msgid "``ContourLabeler.get_label_coords`` is deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:89
msgid "It is considered an internal helper."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:92
msgid "Line2D and Patch no longer duplicate ``validJoin`` and ``validCap``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:94
msgid "Validation of joinstyle and capstyles is now centralized in ``rcsetup``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:97
msgid "Setting a Line2D's pickradius via ``set_picker`` is undeprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:99
msgid "This cancels the deprecation introduced in Matplotlib 3.3.0."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:102
msgid "``MarkerStyle`` is considered immutable"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:104
msgid "``MarkerStyle.set_fillstyle()`` and ``MarkerStyle.set_marker()`` are deprecated. Create a new ``MarkerStyle`` with the respective parameters instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:109
msgid "``MovieWriter.cleanup`` is deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:111
msgid "Cleanup logic is now fully implemented in `.MovieWriter.finish`. Third-party movie writers should likewise move the relevant cleanup logic there, as overridden ``cleanup``\\s will no longer be called in the future."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:116
msgid "*minimumdescent* parameter/property of ``TextArea``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:118
msgid "`.offsetbox.TextArea` has behaved as if *minimumdescent* was always True (regardless of the value to which it was set) since Matplotlib 1.3, so the parameter/property is deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:123
msgid "``colorbar`` now warns when the mappable's Axes is different from the current Axes"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:125
msgid "Currently, `.Figure.colorbar` and `.pyplot.colorbar` steal space by default from the current Axes to place the colorbar. In a future version, they will steal space from the mappable's Axes instead. In preparation for this change, `.Figure.colorbar` and `.pyplot.colorbar` now emits a warning when the current Axes is not the same as the mappable's Axes."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:132
msgid "Colorbar docstrings"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:134
msgid "The following globals in :mod:`matplotlib.colorbar` are deprecated: ``colorbar_doc``, ``colormap_kw_doc``, ``make_axes_kw_doc``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:138
msgid "``ColorbarPatch`` and ``colorbar_factory`` are deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:139
msgid "All the relevant functionality has been moved to the `~matplotlib.colorbar.Colorbar` class."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:143
msgid "Backend deprecations"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:145
msgid "``FigureCanvasBase.get_window_title`` and ``FigureCanvasBase.set_window_title`` are deprecated. Use the corresponding methods on the FigureManager if using pyplot, or GUI-specific methods if embedding."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:149
msgid "The *resize_callback* parameter to ``FigureCanvasTk`` was never used internally and is deprecated. Tk-level custom event handlers for resize events can be added to a ``FigureCanvasTk`` using e.g. ``get_tk_widget().bind('<Configure>', ..., True)``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:153
msgid "The ``key_press`` and ``button_press`` methods of `.FigureManagerBase`, which incorrectly did nothing when using ``toolmanager``, are deprecated in favor of directly passing the event to the `.CallbackRegistry` via ``self.canvas.callbacks.process(event.name, event)``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:157
msgid "``RendererAgg.get_content_extents`` and ``RendererAgg.tostring_rgba_minimized`` are deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:159
msgid "``backend_pgf.TmpDirCleaner`` is deprecated, with no replacement."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:160
msgid "``GraphicsContextPS`` is deprecated. The PostScript backend now uses `.GraphicsContextBase`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:164
msgid "wx backend cleanups"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:166
msgid "The *origin* parameter to ``_FigureCanvasWxBase.gui_repaint`` is deprecated with no replacement; ``gui_repaint`` now automatically detects the case where it is used with the wx renderer."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:170
msgid "The ``NavigationToolbar2Wx.get_canvas`` method is deprecated; directly instantiate a canvas (``FigureCanvasWxAgg(frame, -1, figure)``) if needed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:174
msgid "Unused positional parameters to ``print_<fmt>`` methods are deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:176
msgid "None of the ``print_<fmt>`` methods implemented by canvas subclasses used positional arguments other that the first (the output filename or file-like), so these extra parameters are deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:181
msgid "The *dpi* parameter of ``FigureCanvas.print_foo`` printers is deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:183
msgid "The `~.Figure.savefig` machinery already took care of setting the figure DPI to the desired value, so ``print_foo`` can directly read it from there. Not passing *dpi* to ``print_foo`` allows clearer detection of unused parameters passed to `~.Figure.savefig`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:189
msgid "Passing `bytes` to ``FT2Font.set_text``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:191
msgid "... is deprecated, pass `str` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:194
msgid "``ps.useafm`` deprecated for mathtext"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:196
msgid "Outputting mathtext using only standard PostScript fonts has likely been broken for a while (issue `#18722 <https://github.com/matplotlib/matplotlib/issues/18722>`_). In Matplotlib 3.5, the setting :rc:`ps.useafm` will have no effect on mathtext."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:202
msgid "``MathTextParser(\"bitmap\")`` is deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:204
msgid "The associated APIs ``MathtextBackendBitmap``, ``MathTextParser.to_mask``, ``MathTextParser.to_rgba``, ``MathTextParser.to_png``, and ``MathTextParser.get_depth`` are likewise deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:208
msgid "To convert a text string to an image, either directly draw the text to an empty `.Figure` and save the figure using a tight bbox, as demonstrated in :doc:`/gallery/text_labels_and_annotations/mathtext_asarray`, or use `.mathtext.math_to_image`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:213
msgid "When using `.math_to_image`, text color can be set with e.g.::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:218
msgid "and an RGBA array can be obtained with e.g.::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:227
msgid "Deprecation of mathtext internals"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:229
msgid "The following API elements previously exposed by the :mod:`.mathtext` module are considered to be implementation details and public access to them is deprecated:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:233
msgid "``Fonts`` and all its subclasses,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:234
msgid "``FontConstantsBase`` and all its subclasses,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:235
msgid "``Node`` and all its subclasses,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:236
msgid "``Ship``, ``ship``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:237
msgid "``Error``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:238
msgid "``Parser``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:239
msgid "``SHRINK_FACTOR``, ``GROW_FACTOR``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:240
msgid "``NUM_SIZE_LEVELS``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:241
msgid "``latex_to_bakoma``, ``latex_to_cmex``, ``latex_to_standard``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:242
msgid "``stix_virtual_fonts``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:243
msgid "``tex2uni``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:246
msgid "Deprecation of various mathtext helpers"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:248
msgid "The ``MathtextBackendPdf``, ``MathtextBackendPs``, ``MathtextBackendSvg``, and ``MathtextBackendCairo`` classes from the :mod:`.mathtext` module, as well as the corresponding ``.mathtext_parser`` attributes on ``RendererPdf``, ``RendererPS``, ``RendererSVG``, and ``RendererCairo``, are deprecated. The ``MathtextBackendPath`` class can be used to obtain a list of glyphs and rectangles in a mathtext expression, and renderer-specific logic should be directly implemented in the renderer."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:256
msgid "``StandardPsFonts.pswriter`` is unused and deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:259
msgid "Widget class internals"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:261
msgid "Several `.widgets.Widget` class internals have been privatized and deprecated:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:263
msgid "``AxesWidget.cids``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:264
msgid "``Button.cnt`` and ``Button.observers``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:265
msgid "``CheckButtons.cnt`` and ``CheckButtons.observers``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:266
msgid "``RadioButtons.cnt`` and ``RadioButtons.observers``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:267
msgid "``Slider.cnt`` and ``Slider.observers``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:268
msgid "``TextBox.cnt``, ``TextBox.change_observers`` and ``TextBox.submit_observers``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:272
msgid "3D properties on renderers"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:274
msgid "The properties of the 3D Axes that were placed on the Renderer during draw are now deprecated:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:277
msgid "``renderer.M``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:278
msgid "``renderer.eye``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:279
msgid "``renderer.vvec``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:280
msgid "``renderer.get_axis_position``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:282
msgid "These attributes are all available via `.Axes3D`, which can be accessed via ``self.axes`` on all `.Artist`\\s."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:286
msgid "*renderer* argument of ``do_3d_projection`` method for ``Collection3D``/``Patch3D``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:288
msgid "The *renderer* argument for the ``do_3d_projection`` method on ``Collection3D`` and ``Patch3D`` is no longer necessary, and passing it during draw is deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:293
msgid "*project* argument of ``draw`` method for ``Line3DCollection``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:295
msgid "The *project* argument for the ``draw`` method on ``Line3DCollection`` is deprecated. Call `.Line3DCollection.do_3d_projection` explicitly instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:299
msgid "Extra positional parameters to ``plot_surface`` and ``plot_wireframe``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:301
msgid "Positional parameters to `~.axes3d.Axes3D.plot_surface` and `~.axes3d.Axes3D.plot_wireframe` other than ``X``, ``Y``, and ``Z`` are deprecated. Pass additional artist properties as keyword arguments instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:306
msgid "``ParasiteAxesAuxTransBase`` class"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:308
msgid "The functionality of that mixin class has been moved to the base ``ParasiteAxesBase`` class. Thus, ``ParasiteAxesAuxTransBase``, ``ParasiteAxesAuxTrans``, and ``parasite_axes_auxtrans_class_factory`` are deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:313
msgid "In general, it is suggested to use ``HostAxes.get_aux_axes`` to create parasite Axes, as this saves the need of manually appending the parasite to ``host.parasites`` and makes sure that their ``remove()`` method works properly."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:319
msgid "``AxisArtist.ZORDER`` attribute"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:321
msgid "Use ``AxisArtist.zorder`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:324
msgid "``GridHelperBase`` invalidation"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:326
msgid "The ``GridHelperBase.invalidate``, ``GridHelperBase.valid``, and ``axislines.Axes.invalidate_grid_helper`` methods are considered internal and deprecated."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:331
msgid "``sphinext.plot_directive.align``"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:333
msgid "... is deprecated. Use ``docutils.parsers.rst.directives.images.Image.align`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:337
msgid "Deprecation-related functionality is considered internal"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:339
msgid "The module ``matplotlib.cbook.deprecation`` is considered internal and will be removed from the public API. This also holds for deprecation-related re-imports in ``matplotlib.cbook``, i.e. ``matplotlib.cbook.deprecated()``, ``matplotlib.cbook.warn_deprecated()``, ``matplotlib.cbook.MatplotlibDeprecationWarning`` and ``matplotlib.cbook.mplDeprecation``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/deprecations.rst:346
msgid "If needed, external users may import ``MatplotlibDeprecationWarning`` directly from the ``matplotlib`` namespace. ``mplDeprecation`` is only an alias of ``MatplotlibDeprecationWarning`` and should not be used anymore."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:2
msgid "Removals"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:3
msgid "The following deprecated APIs have been removed:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:6
msgid "Removed behaviour"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:8
msgid "The \"smart bounds\" functionality on `~.axis.Axis` and `.Spine` has been deleted, and the related methods have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:10
msgid "Converting a string with single color characters (e.g. ``'cymk'``) in `~.colors.to_rgba_array` is no longer supported. Instead, the colors can be passed individually in a list (e.g. ``['c', 'y', 'm', 'k']``)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:13
msgid "Returning a factor equal to ``None`` from ``mpl_toolkits.axisartist`` Locators (which are **not** the same as \"standard\" tick Locators), or passing a factor equal to ``None`` to axisartist Formatters (which are **not** the same as \"standard\" tick Formatters) is no longer supported. Pass a factor equal to 1 instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:20
msgid "Modules"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:22
msgid "The entire ``matplotlib.testing.disable_internet`` module has been removed. The `pytest-remotedata package <https://github.com/astropy/pytest-remotedata>`_ can be used instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:25
msgid "The ``mpl_toolkits.axes_grid1.colorbar`` module and its colorbar implementation have been removed in favor of `matplotlib.colorbar`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:29
msgid "Classes, methods and attributes"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:31
msgid "The `.animation.MovieWriterRegistry` methods ``.set_dirty()``, ``.ensure_not_dirty()``, and ``.reset_available_writers()`` do nothing and have been removed.  The ``.avail()`` method has been removed; use ``.list()`` instead to get a list of available writers."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:35
msgid "The ``matplotlib.artist.Artist.eventson`` and ``matplotlib.container.Container.eventson`` attributes have no effect and have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:38
msgid "``matplotlib.axes.Axes.get_data_ratio_log`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:39
msgid "``matplotlib.axes.SubplotBase.rowNum``; use ``ax.get_subplotspec().rowspan.start`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:41
msgid "``matplotlib.axes.SubplotBase.colNum``; use ``ax.get_subplotspec().colspan.start`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:43
msgid "``matplotlib.axis.Axis.set_smart_bounds`` and ``matplotlib.axis.Axis.get_smart_bounds`` have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:45
msgid "``matplotlib.colors.DivergingNorm`` has been renamed to `~matplotlib.colors.TwoSlopeNorm`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:47
msgid "``matplotlib.figure.AxesStack`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:48
msgid "``matplotlib.font_manager.JSONEncoder`` has been removed; use `.font_manager.json_dump` to dump a `.FontManager` instance."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:50
msgid "The ``matplotlib.ft2font.FT2Image`` methods ``.as_array()``, ``.as_rgba_str()``, ``.as_str()``, ``.get_height()`` and ``.get_width()`` have been removed. Convert the ``FT2Image`` to a NumPy array with ``np.asarray`` before processing it."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:54
msgid "``matplotlib.quiver.QuiverKey.quiverkey_doc`` has been removed; use ``matplotlib.quiver.QuiverKey.__init__.__doc__`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:56
msgid "``matplotlib.spines.Spine.set_smart_bounds`` and ``matplotlib.spines.Spine.get_smart_bounds`` have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:58
msgid "``matplotlib.testing.jpl_units.UnitDbl.checkUnits`` has been removed; use ``units not in self.allowed`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:60
msgid "The unused ``matplotlib.ticker.Locator.autoscale`` method has been removed (pass the axis limits to `.Locator.view_limits` instead). The derived methods ``Locator.autoscale``, ``AutoDateLocator.autoscale``, ``RRuleLocator.autoscale``, ``RadialLocator.autoscale``, ``ThetaLocator.autoscale``, and ``YearLocator.autoscale`` have also been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:66
msgid "``matplotlib.transforms.BboxBase.is_unit`` has been removed; check the `.Bbox` extents if needed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:68
msgid "``matplotlib.transforms.Affine2DBase.matrix_from_values(...)`` has been removed; use (for example) ``Affine2D.from_values(...).get_matrix()`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:72
msgid "``matplotlib.backend_bases.FigureCanvasBase.draw_cursor`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:73
msgid "``matplotlib.backends.backend_gtk.ConfigureSubplotsGTK3.destroy`` and ``matplotlib.backends.backend_gtk.ConfigureSubplotsGTK3.init_window`` methods have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:76
msgid "``matplotlib.backends.backend_gtk.ConfigureSubplotsGTK3.window`` property has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:78
msgid "``matplotlib.backends.backend_macosx.FigureCanvasMac.invalidate`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:80
msgid "``matplotlib.backends.backend_pgf.RendererPgf.latexManager`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:81
msgid "``matplotlib.backends.backend_wx.FigureFrameWx.statusbar``, ``matplotlib.backends.backend_wx.NavigationToolbar2Wx.set_status_bar``, and ``matplotlib.backends.backend_wx.NavigationToolbar2Wx.statbar`` have been removed. The status bar can be retrieved by calling standard wx methods (``frame.GetStatusBar()`` and ``toolbar.GetTopLevelParent().GetStatusBar()``)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:87
msgid "``matplotlib.backends.backend_wx.ConfigureSubplotsWx.configure_subplots`` and ``matplotlib.backends.backend_wx.ConfigureSubplotsWx.get_canvas`` have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:92
msgid "``mpl_toolkits.axisartist.grid_finder.GridFinderBase`` has been removed; use `.GridFinder` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:94
msgid "``mpl_toolkits.axisartist.axis_artist.BezierPath`` has been removed; use `.patches.PathPatch` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:98
msgid "Functions"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:100
msgid "``matplotlib.backends.backend_pgf.repl_escapetext`` and ``matplotlib.backends.backend_pgf.repl_mathdefault`` have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:102
msgid "``matplotlib.checkdep_ps_distiller`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:103
msgid "``matplotlib.cm.revcmap`` has been removed; use `.Colormap.reversed` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:105
msgid "``matplotlib.colors.makeMappingArray`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:106
msgid "``matplotlib.compare_versions`` has been removed; use comparison of ``distutils.version.LooseVersion``\\s instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:108
msgid "``matplotlib.dates.mx2num`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:109
msgid "``matplotlib.font_manager.createFontList`` has been removed; `.font_manager.FontManager.addfont` is now available to register a font at a given path."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:112
msgid "``matplotlib.get_home`` has been removed; use standard library instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:113
msgid "``matplotlib.mlab.apply_window`` and ``matplotlib.mlab.stride_repeat`` have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:115
msgid "``matplotlib.rcsetup.update_savefig_format`` has been removed; this just replaced ``'auto'`` with ``'png'``, so do the same."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:117
msgid "``matplotlib.rcsetup.validate_animation_writer_path`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:118
msgid "``matplotlib.rcsetup.validate_path_exists`` has been removed; use `os.path.exists` or `pathlib.Path.exists` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:120
msgid "``matplotlib.style.core.is_style_file`` and ``matplotlib.style.core.iter_style_files`` have been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:122
msgid "``matplotlib.testing.is_called_from_pytest`` has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:123
msgid "``mpl_toolkits.mplot3d.axes3d.unit_bbox`` has been removed; use `.Bbox.unit` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:128
msgid "Arguments"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:130
msgid "Passing more than one positional argument to `.axes.Axes.axis` will now raise an error."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:132
msgid "Passing ``\"range\"`` to the *whis* parameter of `.Axes.boxplot` and `.cbook.boxplot_stats` to mean \"the whole data range\" is  no longer supported."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:135
msgid "Passing scalars to the *where* parameter in `.axes.Axes.fill_between` and `.axes.Axes.fill_betweenx` is no longer accepted and non-matching sizes now raise a `ValueError`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:138
msgid "The *verts* parameter to `.Axes.scatter` has been removed; use *marker* instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:139
msgid "The *minor* parameter in `.Axis.set_ticks` and ``SecondaryAxis.set_ticks`` is now keyword-only."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:141
msgid "`.scale.ScaleBase`, `.scale.LinearScale` and `.scale.SymmetricalLogScale` now error if any unexpected keyword arguments are passed to their constructors."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:143
msgid "The *renderer* parameter to `.Figure.tight_layout` has been removed; this method now always uses the renderer instance cached on the `.Figure`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:145
msgid "The *locator* parameter to `mpl_toolkits.axes_grid1.axes_grid.CbarAxesBase.colorbar` has been removed in favor of its synonym *ticks* (which already existed previously, and is consistent with :mod:`matplotlib.colorbar`)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:149
msgid "The *switch_backend_warn* parameter to ``matplotlib.test`` has no effect and has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:151
msgid "The *dryrun* parameter to the various ``FigureCanvas*.print_*`` methods has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:155
msgid "rcParams"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:157
msgid "The ``datapath`` rcParam has been removed. Use `matplotlib.get_data_path` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:159
msgid "The ``mpl_toolkits.legacy_colorbar`` rcParam has no effect and has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:161
msgid "Setting :rc:`boxplot.whiskers` to ``\"range\"`` is no longer valid; set it to ``0, 100`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:163
msgid "Setting :rc:`savefig.format` to ``\"auto\"`` is no longer valid; use ``\"png\"`` instead."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:165
msgid "Setting :rc:`text.hinting` to `False` or `True` is no longer valid; set it to ``\"auto\"`` or ``\"none\"`` respectively."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:169
msgid "sample_data removals"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:170
msgid "The sample datasets listed below have been removed.  Suggested replacements for demonstration purposes are listed in parentheses."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:173
msgid "``None_vs_nearest-pdf.png``,"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:174
msgid "``aapl.npz`` (use ``goog.npz``),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:175
msgid "``ada.png``, ``grace_hopper.png`` (use ``grace_hopper.jpg``),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:176
msgid "``ct.raw.gz`` (use ``s1045.ima.gz``),"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/removals.rst:177
msgid "``damodata.csv`` (use ``msft.csv``)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:2
msgid "Development changes"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:5
msgid "Increase to minimum supported versions of Python and dependencies"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:7
msgid "For Maptlotlib 3.4, the :ref:`minimum supported versions <dependencies>` are being bumped:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:11
msgid "Dependency"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:11
msgid "min in mpl3.3"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:11
msgid "min in mpl3.4"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:13
msgid "Python"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:13
msgid "3.6"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:13
msgid "3.7"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:15
msgid "dateutil"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:15
msgid "2.1"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:15
msgid "2.7"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:17
msgid "numpy"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:17
msgid "1.15"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:17
msgid "1.16"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:19
msgid "pyparsing"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:19
msgid "2.0.3"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:19
msgid "2.2.1"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:22
msgid "This is consistent with our :ref:`min_deps_policy` and `NEP29 <https://numpy.org/neps/nep-0029-deprecation_policy.html>`__"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:26
msgid "Qhull downloaded at build-or-sdist time"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:28
msgid "Much like FreeType, Qhull is now downloaded at build time, or upon creation of the sdist. To link against system Qhull, set the ``system_qhull`` option to `True` in the :file:`setup.cfg` file. Note that Matplotlib now requires the re-entrant version of Qhull (``qhull_r``)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:34
msgid "``FigureBase`` class added, and ``Figure`` class made a child"
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:36
msgid "The new subfigure feature motivated some re-organization of the `.figure.Figure` class, so that the new `.figure.SubFigure` class could have all the capabilities of a figure."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:40
msgid "The `.figure.Figure` class is now a subclass of `.figure.FigureBase`, where `.figure.FigureBase` contains figure-level artist addition routines, and the `.figure.Figure` subclass just contains features that are unique to the outer figure."
msgstr ""

#: ../../api/prev_api_changes/api_changes_3.4.0/development.rst:45
msgid "Note that there is a new *transSubfigure* transform associated with the subfigure.  This transform also exists for a `.Figure` instance, and is equal to *transFigure* in that case, so code that uses the transform stack that wants to place objects on either the parent figure or one of the subfigures should use *transSubfigure*."
msgstr ""

