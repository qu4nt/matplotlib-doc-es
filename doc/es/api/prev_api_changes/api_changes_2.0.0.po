msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-01 21:46\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/prev_api_changes/api_changes_2.0.0.po\n"
"X-Crowdin-File-ID: 1906\n"
"Language: es_ES\n"

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:3
msgid "API Changes in 2.0.0"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:6
msgid "Deprecation and removal"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:9
msgid "Color of Axes"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:10
msgid "The ``axisbg`` and ``axis_bgcolor`` properties on *Axes* have been deprecated in favor of ``facecolor``."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:14
msgid "GTK and GDK backends deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:15
msgid "The GDK and GTK backends have been deprecated. These obsolete backends allow figures to be rendered via the GDK API to files and GTK2 figures. They are untested and known to be broken, and their use has been discouraged for some time.  Instead, use the ``GTKAgg`` and ``GTKCairo`` backends for rendering to GTK2 windows."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:22
msgid "WX backend deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:23
msgid "The WX backend has been deprecated.  It is untested, and its use has been discouraged for some time. Instead, use the ``WXAgg`` backend for rendering figures to WX windows."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:28
msgid "CocoaAgg backend removed"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:29
msgid "The deprecated and not fully functional CocoaAgg backend has been removed."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:32
msgid "`round` removed from TkAgg Backend"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:33
msgid "The TkAgg backend had its own implementation of the `round` function. This was unused internally and has been removed. Instead, use either the `round` builtin function or `numpy.around`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:40
msgid "'hold' functionality deprecated"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:41
msgid "The 'hold' keyword argument and all functions and methods related to it are deprecated, along with the ``axes.hold`` rcParams entry. The behavior will remain consistent with the default ``hold=True`` state that has long been in place.  Instead of using a function or keyword argument (``hold=False``) to change that behavior, explicitly clear the axes or figure as needed prior to subsequent plotting commands."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:51
msgid "`.Artist.update` has return value"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:53
msgid "The methods `matplotlib.artist.Artist.set`, `matplotlib.artist.Artist.update`, and the function `matplotlib.artist.setp` now use a common codepath to look up how to update the given artist properties (either using the setter methods or an attribute/property)."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:58
msgid "The behavior of `matplotlib.artist.Artist.update` is slightly changed to return a list of the values returned from the setter methods to avoid changing the API of `matplotlib.artist.Artist.set` and `matplotlib.artist.setp`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:62
msgid "The keys passed into `matplotlib.artist.Artist.update` are now converted to lower case before being processed, to match the behavior of `matplotlib.artist.Artist.set` and `matplotlib.artist.setp`.  This should not break any user code because there are no set methods with capitals in their names, but this puts a constraint on naming properties in the future."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:70
msgid "`.Legend` initializers gain *edgecolor* and *facecolor* keyword arguments"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:72
msgid "The :class:`~matplotlib.legend.Legend` background patch (or 'frame') can have its ``edgecolor`` and ``facecolor`` determined by the corresponding keyword arguments to the :class:`matplotlib.legend.Legend` initializer, or to any of the methods or functions that call that initializer.  If left to their default values of `None`, their values will be taken from ``matplotlib.rcParams``.  The previously-existing ``framealpha`` kwarg still controls the alpha transparency of the patch."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:83
msgid "Qualitative colormaps"
msgstr "Mapas cualitativos de colores"

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:85
msgid "Colorbrewer's qualitative/discrete colormaps (\"Accent\", \"Dark2\", \"Paired\", \"Pastel1\", \"Pastel2\", \"Set1\", \"Set2\", \"Set3\") are now implemented as `.ListedColormap` instead of `.LinearSegmentedColormap`."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:89
msgid "To use these for images where categories are specified as integers, for instance, use::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:96
msgid "Change in the ``draw_image`` backend API"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:98
msgid "The ``draw_image`` method implemented by backends has changed its interface."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:100
msgid "This change is only relevant if the backend declares that it is able to transform images by returning ``True`` from ``option_scale_image``. See the ``draw_image`` docstring for more information."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:107
msgid "``matplotlib.ticker.LinearLocator`` algorithm update"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:109
msgid "The `matplotlib.ticker.LinearLocator` is used to define the range and location of axis ticks when the user wants an exact number of ticks. ``LinearLocator`` thus differs from the default locator ``MaxNLocator``, for which the user specifies a maximum number of intervals rather than a precise number of ticks."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:115
msgid "The view range algorithm in ``matplotlib.ticker.LinearLocator`` has been changed so that more convenient tick locations are chosen. The new algorithm returns a plot view range that is a multiple of the user-requested number of ticks. This ensures tick marks will be located at whole integers more consistently. For example, when both y-axes of a``twinx`` plot use ``matplotlib.ticker.LinearLocator`` with the same number of ticks, their y-tick locations and grid lines will coincide."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:124
msgid "`matplotlib.ticker.LogLocator` gains numticks kwarg"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:126
msgid "The maximum number of ticks generated by the `~matplotlib.ticker.LogLocator` can now be controlled explicitly via setting the new 'numticks' kwarg to an integer.  By default the kwarg is None which internally sets it to the 'auto' string, triggering a new algorithm for adjusting the maximum according to the axis length relative to the ticklabel font size."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:134
msgid "`matplotlib.ticker.LogFormatter`: two new kwargs"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:136
msgid "Previously, minor ticks on log-scaled axes were not labeled by default.  An algorithm has been added to the `~matplotlib.ticker.LogFormatter` to control the labeling of ticks between integer powers of the base.  The algorithm uses two parameters supplied in a kwarg tuple named 'minor_thresholds'. See the docstring for further explanation."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:143
msgid "To improve support for axes using `~matplotlib.ticker.SymmetricalLogLocator`, a *linthresh* keyword argument was added."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:148
msgid "New defaults for 3D quiver function in mpl_toolkits.mplot3d.axes3d.py"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:150
msgid "Matplotlib has both a 2D and a 3D ``quiver`` function. These changes affect only the 3D function and make the default behavior of the 3D function match the 2D version. There are two changes:"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:154
msgid "The 3D quiver function previously normalized the arrows to be the same length, which makes it unusable for situations where the arrows should be different lengths and does not match the behavior of the 2D function. This normalization behavior is now controlled with the ``normalize`` keyword, which defaults to False."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:160
msgid "The ``pivot`` keyword now defaults to ``tail`` instead of ``tip``. This was done in order to match the default behavior of the 2D quiver function."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:164
msgid "To obtain the previous behavior with the 3D quiver function, one can call the function with ::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:169
msgid "where \"ax\" is an ``Axes3d`` object created with something like ::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:176
msgid "Stale figure behavior"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:178
msgid "Attempting to draw the figure will now mark it as not stale (independent if the draw succeeds).  This change is to prevent repeatedly trying to re-draw a figure which is raising an error on draw.  The previous behavior would only mark a figure as not stale after a full re-draw succeeded."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:185
msgid "The spectral colormap is now nipy_spectral"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:187
msgid "The colormaps formerly known as ``spectral`` and ``spectral_r`` have been replaced by ``nipy_spectral`` and ``nipy_spectral_r`` since Matplotlib 1.3.0. Even though the colormap was deprecated in Matplotlib 1.3.0, it never raised a warning. As of Matplotlib 2.0.0, using the old names raises a deprecation warning. In the future, using the old names will raise an error."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:194
msgid "Default install no longer includes test images"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:196
msgid "To reduce the size of wheels and source installs, the tests and baseline images are no longer included by default."
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:199
msgid "To restore installing the tests and images, use a :file:`setup.cfg` with ::"
msgstr ""

#: ../../api/prev_api_changes/api_changes_2.0.0.rst:205
msgid "in the source directory at build/install time."
msgstr ""

