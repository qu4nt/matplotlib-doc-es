msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-07-15 03:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/mathtext_api.po\n"
"X-Crowdin-File-ID: 1804\n"
"Language: es_ES\n"

#: ../../api/mathtext_api.rst:3
msgid "``matplotlib.mathtext``"
msgstr "``matplotlib.mathtext``"

#: matplotlib.mathtext:1 of
msgid "A module for parsing a subset of the TeX math syntax and rendering it to a Matplotlib backend."
msgstr ""

#: matplotlib.mathtext:4 of
msgid "For a tutorial of its usage, see :doc:`/tutorials/text/mathtext`.  This document is primarily concerned with implementation details."
msgstr ""

#: matplotlib.mathtext:7 of
msgid "The module uses pyparsing_ to parse the TeX expression."
msgstr ""

#: matplotlib.mathtext:11 of
msgid "The Bakoma distribution of the TeX Computer Modern fonts, and STIX fonts are supported.  There is experimental support for using arbitrary fonts, but results may vary without proper tweaking and metrics for those fonts."
msgstr ""

#: matplotlib.mathtext.MathTextParser:1 matplotlib.mathtext.MathtextBackend:1
#: of
msgid "Bases: :py:class:`object`"
msgstr ""

#: matplotlib.mathtext.MathTextParser:2 of
msgid "Create a MathTextParser for the given backend *output*."
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:2 of
msgid "[*Deprecated*] Get the depth of a mathtext string."
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth
#: matplotlib.mathtext.MathTextParser.to_mask
#: matplotlib.mathtext.MathTextParser.to_png
#: matplotlib.mathtext.MathTextParser.to_rgba
#: matplotlib.mathtext.get_unicode_index matplotlib.mathtext.math_to_image of
msgid "Parameters"
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:8
#: matplotlib.mathtext.MathTextParser.to_mask:8
#: matplotlib.mathtext.MathTextParser.to_png:11
#: matplotlib.mathtext.MathTextParser.to_rgba:8 of
msgid "**texstr**"
msgstr ""

#: of
msgid "str"
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:8
#: matplotlib.mathtext.MathTextParser.to_mask:8
#: matplotlib.mathtext.MathTextParser.to_png:11
#: matplotlib.mathtext.MathTextParser.to_rgba:8 of
msgid "A valid mathtext string, e.g., r'IQ: $\\sigma_i=15$'."
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:11
#: matplotlib.mathtext.MathTextParser.to_mask:11
#: matplotlib.mathtext.MathTextParser.to_png:17
#: matplotlib.mathtext.MathTextParser.to_rgba:14
#: matplotlib.mathtext.math_to_image:19 of
msgid "**dpi**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:11
#: matplotlib.mathtext.MathTextParser.to_mask:11
#: matplotlib.mathtext.MathTextParser.to_png:17
#: matplotlib.mathtext.MathTextParser.to_rgba:14 of
msgid "The dots-per-inch setting used to render the text."
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth
#: matplotlib.mathtext.MathTextParser.to_mask
#: matplotlib.mathtext.MathTextParser.to_png
#: matplotlib.mathtext.MathTextParser.to_rgba of
msgid "Returns"
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:23
#: matplotlib.mathtext.MathTextParser.to_png:32 of
msgid "int"
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:16
#: matplotlib.mathtext.MathTextParser.to_mask:22
#: matplotlib.mathtext.MathTextParser.to_png:25
#: matplotlib.mathtext.MathTextParser.to_rgba:25 of
msgid "Offset of the baseline from the bottom of the image, in pixels."
msgstr ""

#: matplotlib.mathtext.MathTextParser.get_depth:26
#: matplotlib.mathtext.MathTextParser.to_mask:32
#: matplotlib.mathtext.MathTextParser.to_png:35
#: matplotlib.mathtext.MathTextParser.to_rgba:35
#: matplotlib.mathtext.MathtextBackendBitmap:15
#: matplotlib.mathtext.MathtextBackendCairo:16
#: matplotlib.mathtext.MathtextBackendPdf:15
#: matplotlib.mathtext.MathtextBackendPs:15
#: matplotlib.mathtext.MathtextBackendSvg:16 matplotlib.mathtext.ship:15 of
msgid "Notes"
msgstr ""

#: matplotlib.mathtext.MathTextParser.parse:2 of
msgid "Parse the given math expression *s* at the given *dpi*.  If *prop* is provided, it is a `.FontProperties` object specifying the \"default\" font to use in the math expression, used for all non-math text."
msgstr ""

#: matplotlib.mathtext.MathTextParser.parse:6 of
msgid "The results are cached, so multiple calls to `parse` with the same expression should be fast."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_mask:2 of
msgid "[*Deprecated*] Convert a mathtext string to a grayscale array and depth."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_mask:14
#: matplotlib.mathtext.MathTextParser.to_png:20
#: matplotlib.mathtext.MathTextParser.to_rgba:17 of
msgid "**fontsize**"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_mask:14 of
msgid "The font size in points"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_mask:19
#: matplotlib.mathtext.MathTextParser.to_rgba:22 of
msgid "**array**"
msgstr ""

#: of
msgid "2D uint8 alpha"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_mask:19 of
msgid "Mask array of rasterized tex."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_mask:29
#: matplotlib.mathtext.MathTextParser.to_rgba:32 of
msgid "**depth**"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_png:2 of
msgid "[*Deprecated*] Render a tex expression to a PNG file."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_png:8 of
msgid "**filename**"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_png:8 of
msgid "A writable filename or fileobject."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_png:14
#: matplotlib.mathtext.MathTextParser.to_rgba:11 of
msgid "**color**"
msgstr ""

#: of
msgid "color"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_png:14
#: matplotlib.mathtext.MathTextParser.to_rgba:11 of
msgid "The text color."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_png:20
#: matplotlib.mathtext.MathTextParser.to_rgba:17 of
msgid "The font size in points."
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_rgba:2 of
msgid "[*Deprecated*] Convert a mathtext string to an RGBA array and depth."
msgstr ""

#: of
msgid "(M, N, 4) array"
msgstr ""

#: matplotlib.mathtext.MathTextParser.to_rgba:22 of
msgid "RGBA color values of rasterized tex, colorized with *color*."
msgstr ""

#: matplotlib.mathtext.MathTextWarning:1 of
msgid "Bases: :py:class:`Warning`"
msgstr ""

#: matplotlib.mathtext.MathtextBackend:2 of
msgid "The base class for the mathtext backend-specific code.  `MathtextBackend` subclasses interface between mathtext and specific Matplotlib graphics backends."
msgstr ""

#: matplotlib.mathtext.MathtextBackend:6 of
msgid "Subclasses need to override the following:"
msgstr ""

#: matplotlib.mathtext.MathtextBackend:8 of
msgid ":meth:`render_glyph`"
msgstr ""

#: matplotlib.mathtext.MathtextBackend:9 of
msgid ":meth:`render_rect_filled`"
msgstr ""

#: matplotlib.mathtext.MathtextBackend:10 of
msgid ":meth:`get_results`"
msgstr ""

#: matplotlib.mathtext.MathtextBackend:12 of
msgid "And optionally, if you need to use a FreeType hinting style:"
msgstr ""

#: matplotlib.mathtext.MathtextBackend:14 of
msgid ":meth:`get_hinting_type`"
msgstr ""

#: matplotlib.mathtext.MathtextBackend.get_hinting_type:2
#: matplotlib.mathtext.MathtextBackendAgg.get_hinting_type:2 of
msgid "Get the FreeType hinting type to use with this particular backend."
msgstr ""

#: matplotlib.mathtext.MathtextBackend.get_results:2
#: matplotlib.mathtext.MathtextBackendAgg.get_results:2
#: matplotlib.mathtext.MathtextBackendBitmap.get_results:2
#: matplotlib.mathtext.MathtextBackendCairo.get_results:2
#: matplotlib.mathtext.MathtextBackendPath.get_results:2
#: matplotlib.mathtext.MathtextBackendPdf.get_results:2
#: matplotlib.mathtext.MathtextBackendPs.get_results:2
#: matplotlib.mathtext.MathtextBackendSvg.get_results:2 of
msgid "Return a backend-specific tuple to return to the backend after all processing is done."
msgstr ""

#: matplotlib.mathtext.MathtextBackend.render_glyph:2
#: matplotlib.mathtext.MathtextBackendAgg.render_glyph:2
#: matplotlib.mathtext.MathtextBackendCairo.render_glyph:2
#: matplotlib.mathtext.MathtextBackendPath.render_glyph:2
#: matplotlib.mathtext.MathtextBackendPdf.render_glyph:2
#: matplotlib.mathtext.MathtextBackendPs.render_glyph:2
#: matplotlib.mathtext.MathtextBackendSvg.render_glyph:2 of
msgid "Draw a glyph described by *info* to the reference point (*ox*, *oy*)."
msgstr ""

#: matplotlib.mathtext.MathtextBackend.render_rect_filled:2
#: matplotlib.mathtext.MathtextBackendAgg.render_rect_filled:2
#: matplotlib.mathtext.MathtextBackendCairo.render_rect_filled:2
#: matplotlib.mathtext.MathtextBackendPath.render_rect_filled:2
#: matplotlib.mathtext.MathtextBackendPdf.render_rect_filled:2
#: matplotlib.mathtext.MathtextBackendPs.render_rect_filled:2
#: matplotlib.mathtext.MathtextBackendSvg.render_rect_filled:2 of
msgid "Draw a filled black rectangle from (*x1*, *y1*) to (*x2*, *y2*)."
msgstr ""

#: matplotlib.mathtext.MathtextBackend.set_canvas_size:2
#: matplotlib.mathtext.MathtextBackendAgg.set_canvas_size:2 of
msgid "Set the dimension of the drawing canvas."
msgstr ""

#: matplotlib.mathtext.MathtextBackendAgg:1
#: matplotlib.mathtext.MathtextBackendCairo:1
#: matplotlib.mathtext.MathtextBackendPath:1
#: matplotlib.mathtext.MathtextBackendPdf:1
#: matplotlib.mathtext.MathtextBackendPs:1
#: matplotlib.mathtext.MathtextBackendSvg:1 of
msgid "Bases: :py:class:`matplotlib.mathtext.MathtextBackend`"
msgstr ""

#: matplotlib.mathtext.MathtextBackendAgg:2 of
msgid "Render glyphs and rectangles to an FTImage buffer, which is later transferred to the Agg image by the Agg backend."
msgstr ""

#: matplotlib.mathtext.MathtextBackendBitmap:1 of
msgid "Bases: :py:class:`matplotlib.mathtext.MathtextBackendAgg`"
msgstr ""

#: matplotlib.mathtext.MathtextBackendBitmap:2 matplotlib.mathtext.ship:2 of
msgid "[*Deprecated*]"
msgstr ""

#: matplotlib.mathtext.MathtextBackendBitmap:16 matplotlib.mathtext.ship:16 of
msgid "\\"
msgstr ""

#: matplotlib.mathtext.MathtextBackendCairo:2 of
msgid "[*Deprecated*] Store information to write a mathtext rendering to the Cairo backend."
msgstr ""

#: matplotlib.mathtext.MathtextBackendPath:2 of
msgid "Store information to write a mathtext rendering to the text path machinery."
msgstr ""

#: matplotlib.mathtext.MathtextBackendPdf:2 of
msgid "[*Deprecated*] Store information to write a mathtext rendering to the PDF backend."
msgstr ""

#: matplotlib.mathtext.MathtextBackendPs:2 of
msgid "[*Deprecated*] Store information to write a mathtext rendering to the PostScript backend."
msgstr ""

#: matplotlib.mathtext.MathtextBackendSvg:2 of
msgid "[*Deprecated*] Store information to write a mathtext rendering to the SVG backend."
msgstr ""

#: matplotlib.mathtext.get_unicode_index:2 of
msgid "Return the integer index (from the Unicode table) of *symbol*."
msgstr ""

#: matplotlib.mathtext.get_unicode_index:9 of
msgid "**symbol**"
msgstr ""

#: matplotlib.mathtext.get_unicode_index:8 of
msgid "A single unicode character, a TeX command (e.g. r'\\pi') or a Type1 symbol name (e.g. 'phi')."
msgstr ""

#: matplotlib.mathtext.get_unicode_index:25 of
msgid "**math**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: matplotlib.mathtext.get_unicode_index:12 of
msgid "If False, always treat as a single unicode character."
msgstr ""

#: matplotlib.mathtext.math_to_image:2 of
msgid "Given a math expression, renders it in a closely-clipped bounding box to an image file."
msgstr ""

#: matplotlib.mathtext.math_to_image:9 of
msgid "**s**"
msgstr ""

#: matplotlib.mathtext.math_to_image:9 of
msgid "A math expression.  The math portion must be enclosed in dollar signs."
msgstr ""

#: matplotlib.mathtext.math_to_image:12 of
msgid "**filename_or_obj**"
msgstr ""

#: of
msgid "str or path-like or file-like"
msgstr ""

#: matplotlib.mathtext.math_to_image:12 of
msgid "Where to write the image data."
msgstr ""

#: matplotlib.mathtext.math_to_image:15 of
msgid "**prop** : `.FontProperties`, optional"
msgstr ""

#: matplotlib.mathtext.math_to_image:14 of
msgid "FontProperties, optional"
msgstr ""

#: matplotlib.mathtext.math_to_image:15 of
msgid "The size and style of the text."
msgstr ""

#: of
msgid "float, optional"
msgstr ""

#: matplotlib.mathtext.math_to_image:18 of
msgid "The output dpi.  If not set, the dpi is determined as for `.Figure.savefig`."
msgstr ""

#: matplotlib.mathtext.math_to_image:36 of
msgid "**format**"
msgstr ""

#: of
msgid "str, optional"
msgstr ""

#: matplotlib.mathtext.math_to_image:22 of
msgid "The output format, e.g., 'svg', 'pdf', 'ps' or 'png'.  If not set, the format is determined as for `.Figure.savefig`."
msgstr ""

