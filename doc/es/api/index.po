msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-11-01 21:45\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/index.po\n"
"X-Crowdin-File-ID: 1792\n"
"Language: es_ES\n"

#: ../../api/index.rst:2
msgid "API Reference"
msgstr ""

#: ../../api/index.rst:4
msgid "When using the library you will typically create :doc:`Figure <figure_api>` and :doc:`Axes <axes_api>` objects and call their methods to add content and modify the appearance."
msgstr ""

#: ../../api/index.rst:8
msgid ":mod:`matplotlib.figure`: axes creation, figure-level content"
msgstr ""

#: ../../api/index.rst:9
msgid ":mod:`matplotlib.axes`: most plotting methods, Axes labels, access to axis styling, etc."
msgstr ""

#: ../../api/index.rst:12
msgid "Example: We create a Figure ``fig`` and Axes ``ax``. Then we call methods on them to plot data, add axis labels and a figure title."
msgstr ""

#: ../../api/index.rst:20
msgid "(`Source code <../api/index-1.py>`__, `png <../api/index-1.png>`__, `pdf <../api/index-1.pdf>`__)"
msgstr ""

#: ../../api/index.rst:34
msgid "Modules"
msgstr "Módulos"

#: ../../api/index.rst:36
msgid "Alphabetical list of modules:"
msgstr ""

#: ../../api/index.rst:113
msgid "Usage patterns"
msgstr ""

#: ../../api/index.rst:115
msgid "Below we describe several common approaches to plotting with Matplotlib."
msgstr ""

#: ../../api/index.rst:118
msgid "The pyplot API"
msgstr ""

#: ../../api/index.rst:120
msgid "`matplotlib.pyplot` is a collection of functions that make Matplotlib work like MATLAB. Each pyplot function makes some change to a figure: e.g., creates a figure, creates a plotting area in a figure, plots some lines in a plotting area, decorates the plot with labels, etc."
msgstr ""

#: ../../api/index.rst:125
msgid "`.pyplot` is mainly intended for interactive plots and simple cases of programmatic plot generation."
msgstr ""

#: ../../api/index.rst:128 ../../api/index.rst:147
msgid "Further reading:"
msgstr ""

#: ../../api/index.rst:130
msgid "The `matplotlib.pyplot` function reference"
msgstr ""

#: ../../api/index.rst:131
msgid ":doc:`/tutorials/introductory/pyplot`"
msgstr ""

#: ../../api/index.rst:132
msgid ":ref:`Pyplot examples <pyplots_examples>`"
msgstr ""

#: ../../api/index.rst:137
msgid "The object-oriented API"
msgstr ""

#: ../../api/index.rst:139
msgid "At its core, Matplotlib is object-oriented. We recommend directly working with the objects, if you need more control and customization of your plots."
msgstr ""

#: ../../api/index.rst:142
msgid "In many cases you will create a `.Figure` and one or more `~matplotlib.axes.Axes` using `.pyplot.subplots` and from then on only work on these objects. However, it's also possible to create `.Figure`\\ s explicitly (e.g. when including them in GUI applications)."
msgstr ""

#: ../../api/index.rst:149
msgid "`matplotlib.axes.Axes` and `matplotlib.figure.Figure` for an overview of"
msgstr ""

#: ../../api/index.rst:150
msgid "plotting functions."
msgstr "funciones de graficación."

#: ../../api/index.rst:152
msgid "Most of the :ref:`examples <examples-index>` use the object-oriented approach"
msgstr ""

#: ../../api/index.rst:152
msgid "(except for the pyplot section)"
msgstr ""

#: ../../api/index.rst:155
msgid "The pylab API (discouraged)"
msgstr ""

#: of pylab:2
msgid "Since heavily importing into the global namespace may result in unexpected behavior, the use of pylab is strongly discouraged. Use `matplotlib.pyplot` instead."
msgstr ""

#: of pylab:6
msgid "`pylab` is a module that includes `matplotlib.pyplot`, `numpy`, `numpy.fft`, `numpy.linalg`, `numpy.random`, and some additional functions, all within a single namespace. Its original purpose was to mimic a MATLAB-like way of working by importing all functions into the global namespace. This is considered bad style nowadays."
msgstr ""

