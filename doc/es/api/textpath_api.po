msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:24\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/api/textpath_api.po\n"
"X-Crowdin-File-ID: 1966\n"
"Language: es_ES\n"

#: ../../api/textpath_api.rst:3
msgid "``matplotlib.textpath``"
msgstr ""

#: matplotlib.textpath.TextPath:1 of
msgid "Bases: :py:class:`matplotlib.path.Path`"
msgstr ""

#: matplotlib.textpath.TextPath:2 of
msgid "Create a path from the text."
msgstr ""

#: matplotlib.textpath.TextPath:23 of
msgid "Create a path from the text. Note that it simply is a path, not an artist. You need to use the `.PathPatch` (or other artists) to draw this path onto the canvas."
msgstr ""

#: matplotlib.textpath.TextPath matplotlib.textpath.TextToPath.get_text_path of
msgid "Parameters"
msgstr ""

#: matplotlib.textpath.TextPath:31 of
msgid "**xy**"
msgstr ""

#: of
msgid "tuple or array of two float values"
msgstr ""

#: matplotlib.textpath.TextPath:31 of
msgid "Position of the text. For no offset, use ``xy=(0, 0)``."
msgstr ""

#: matplotlib.textpath.TextPath:34
#: matplotlib.textpath.TextToPath.get_text_path:12 of
msgid "**s**"
msgstr ""

#: of
msgid "str"
msgstr ""

#: matplotlib.textpath.TextPath:34 of
msgid "The text to convert to a path."
msgstr ""

#: matplotlib.textpath.TextPath:38 of
msgid "**size**"
msgstr ""

#: of
msgid "float, optional"
msgstr ""

#: matplotlib.textpath.TextPath:37 of
msgid "Font size in points. Defaults to the size specified via the font properties *prop*."
msgstr ""

#: matplotlib.textpath.TextPath:43 of
msgid "**prop** : `matplotlib.font_manager.FontProperties`, optional"
msgstr ""

#: matplotlib.textpath.TextPath:42 of
msgid "matplotlib.font_manager.FontProperties, optional"
msgstr ""

#: matplotlib.textpath.TextPath:41 of
msgid "Font property. If not provided, will use a default ``FontProperties`` with parameters from the :ref:`rcParams<customizing-with-dynamic-rc-settings>`."
msgstr ""

#: matplotlib.textpath.TextPath:46 of
msgid "**_interpolation_steps**"
msgstr ""

#: of
msgid "int, optional"
msgstr ""

#: matplotlib.textpath.TextPath:46 of
msgid "(Currently ignored)"
msgstr ""

#: matplotlib.textpath.TextPath:59 of
msgid "**usetex**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.textpath.TextPath:49 of
msgid "Whether to use tex rendering."
msgstr ""

#: matplotlib.textpath.TextPath:62
#: matplotlib.textpath.TextToPath.get_text_path:36 of
msgid "Examples"
msgstr ""

#: matplotlib.textpath.TextPath:63 of
msgid "The following creates a path from the string \"ABC\" with Helvetica font face; and another path from the latex fraction 1/2::"
msgstr ""

#: matplotlib.textpath.TextPath:73 of
msgid "Also see :doc:`/gallery/text_labels_and_annotations/demo_text_path`."
msgstr ""

#: matplotlib.textpath.TextPath.codes:2 of
msgid "Return the codes"
msgstr ""

#: matplotlib.textpath.TextPath.get_size:2 of
msgid "Get the text size."
msgstr ""

#: matplotlib.textpath.TextPath.set_size:2 of
msgid "Set the text size."
msgstr ""

#: matplotlib.textpath.TextPath.vertices:2 of
msgid "Return the cached path after updating it if necessary."
msgstr ""

#: matplotlib.textpath.TextToPath:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: matplotlib.textpath.TextToPath:2 of
msgid "A class that converts strings to paths."
msgstr ""

#: matplotlib.textpath.TextToPath.get_glyphs_mathtext:2 of
msgid "Parse mathtext string *s* and convert it to a (vertices, codes) pair."
msgstr ""

#: matplotlib.textpath.TextToPath.get_glyphs_tex:2 of
msgid "Convert the string *s* to vertices and codes using usetex mode."
msgstr ""

#: matplotlib.textpath.TextToPath.get_glyphs_with_font:2 of
msgid "Convert string *s* to vertices and codes using the provided ttf font."
msgstr ""

#: matplotlib.textpath.TextToPath.get_texmanager:2 of
msgid "Return the cached `~.texmanager.TexManager` instance."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:2 of
msgid "Convert text *s* to path (a tuple of vertices and codes for matplotlib.path.Path)."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:9 of
msgid "**prop** : `~matplotlib.font_manager.FontProperties`"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:8 of
msgid "FontProperties"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:9 of
msgid "The font properties for the text."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:12 of
msgid "The text to be converted."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:15 of
msgid "**ismath**"
msgstr ""

#: of
msgid "{False, True, \"TeX\"}"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:15 of
msgid "If True, use mathtext parser.  If \"TeX\", use tex for rendering."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path of
msgid "Returns"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:21 of
msgid "**verts**"
msgstr ""

#: of
msgid "list"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:20 of
msgid "A list of numpy arrays containing the x and y coordinates of the vertices."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:33 of
msgid "**codes**"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:24 of
msgid "A list of path codes."
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:37 of
msgid "Create a list of vertices and codes from a text, and create a `.Path` from those::"
msgstr ""

#: matplotlib.textpath.TextToPath.get_text_path:48 of
msgid "Also see `TextPath` for a more direct way to create a path from a text."
msgstr ""

