msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-05-17 00:41\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/tutorials/text/text_props.po\n"
"X-Crowdin-File-ID: 3346\n"
"Language: es_ES\n"

#: ../../tutorials/text/text_props.rst:13
msgid "Click :ref:`here <sphx_glr_download_tutorials_text_text_props.py>` to download the full example code"
msgstr ""

#: ../../tutorials/text/text_props.rst:23
msgid "Text properties and layout"
msgstr ""

#: ../../tutorials/text/text_props.rst:25
msgid "Controlling properties of text and its layout with Matplotlib."
msgstr ""

#: ../../tutorials/text/text_props.rst:27
msgid "`matplotlib.text.Text` instances have a variety of properties which can be configured via keyword arguments to `~.Axes.set_title`, `~.Axes.set_xlabel`, `~.Axes.text`, etc."
msgstr ""

#: ../../tutorials/text/text_props.rst:32
msgid "Property"
msgstr "Propiedad"

#: ../../tutorials/text/text_props.rst:32
msgid "Value Type"
msgstr "Tipo de valor"

#: ../../tutorials/text/text_props.rst:34
msgid "alpha"
msgstr "alpha"

#: ../../tutorials/text/text_props.rst:34
#: ../../tutorials/text/text_props.rst:45
#: ../../tutorials/text/text_props.rst:59
#: ../../tutorials/text/text_props.rst:60
msgid "`float`"
msgstr "`float`"

#: ../../tutorials/text/text_props.rst:35
msgid "backgroundcolor"
msgstr "color de fondo"

#: ../../tutorials/text/text_props.rst:35
#: ../../tutorials/text/text_props.rst:40
msgid "any matplotlib :doc:`color </tutorials/colors/colors>`"
msgstr ""

#: ../../tutorials/text/text_props.rst:36
msgid "bbox"
msgstr "bbox"

#: ../../tutorials/text/text_props.rst:36
msgid "`~matplotlib.patches.Rectangle` prop dict plus key ``'pad'`` which is a pad in points"
msgstr ""

#: ../../tutorials/text/text_props.rst:37
msgid "clip_box"
msgstr ""

#: ../../tutorials/text/text_props.rst:37
msgid "a matplotlib.transform.Bbox instance"
msgstr ""

#: ../../tutorials/text/text_props.rst:38
msgid "clip_on"
msgstr ""

#: ../../tutorials/text/text_props.rst:38
#: ../../tutorials/text/text_props.rst:57
msgid "bool"
msgstr ""

#: ../../tutorials/text/text_props.rst:39
msgid "clip_path"
msgstr ""

#: ../../tutorials/text/text_props.rst:39
msgid "a `~matplotlib.path.Path` instance and a `~matplotlib.transforms.Transform` instance, a `~matplotlib.patches.Patch`"
msgstr ""

#: ../../tutorials/text/text_props.rst:40
msgid "color"
msgstr ""

#: ../../tutorials/text/text_props.rst:41
msgid "family"
msgstr ""

#: ../../tutorials/text/text_props.rst:41
msgid "[ ``'serif'`` | ``'sans-serif'`` | ``'cursive'`` | ``'fantasy'`` | ``'monospace'`` ]"
msgstr "[ ``'serif'`` | ``'sans-serif'`` | ``'cursive'`` | ``'fantasy'`` | ``'monospace'`` ]"

#: ../../tutorials/text/text_props.rst:42
msgid "fontproperties"
msgstr ""

#: ../../tutorials/text/text_props.rst:42
msgid "`~matplotlib.font_manager.FontProperties`"
msgstr "`~matplotlib.font_manager.FontProperties`"

#: ../../tutorials/text/text_props.rst:43
msgid "horizontalalignment or ha"
msgstr ""

#: ../../tutorials/text/text_props.rst:43
msgid "[ ``'center'`` | ``'right'`` | ``'left'`` ]"
msgstr "[ ``'center'`` | ``'right'`` | ``'left'`` ]"

#: ../../tutorials/text/text_props.rst:44
msgid "label"
msgstr "etiqueta"

#: ../../tutorials/text/text_props.rst:44
msgid "any string"
msgstr "cualquier cadena"

#: ../../tutorials/text/text_props.rst:45
msgid "linespacing"
msgstr "espacio en línea"

#: ../../tutorials/text/text_props.rst:46
msgid "multialignment"
msgstr ""

#: ../../tutorials/text/text_props.rst:46
msgid "[``'left'`` | ``'right'`` | ``'center'`` ]"
msgstr "[``'left'`` | ``'right'`` | ``'center'`` ]"

#: ../../tutorials/text/text_props.rst:47
msgid "name or fontname"
msgstr ""

#: ../../tutorials/text/text_props.rst:47
msgid "string e.g., [``'Sans'`` | ``'Courier'`` | ``'Helvetica'`` ...]"
msgstr "string por ejemplo, [``'Sans'`` | ``'Courier'`` | ``'Helvetica'`` ...]"

#: ../../tutorials/text/text_props.rst:48
msgid "picker"
msgstr ""

#: ../../tutorials/text/text_props.rst:48
msgid "[None|float|bool|callable]"
msgstr "[None|float|bool|callable]"

#: ../../tutorials/text/text_props.rst:49
msgid "position"
msgstr "posición"

#: ../../tutorials/text/text_props.rst:49
msgid "(x, y)"
msgstr "(x, y)"

#: ../../tutorials/text/text_props.rst:50
msgid "rotation"
msgstr "rotación"

#: ../../tutorials/text/text_props.rst:50
msgid "[ angle in degrees | ``'vertical'`` | ``'horizontal'`` ]"
msgstr "[ ángulo en grados | ``'vertical'`` | ``'horizontal'`` ]"

#: ../../tutorials/text/text_props.rst:51
msgid "size or fontsize"
msgstr "tamaño o tamaño de fuente"

#: ../../tutorials/text/text_props.rst:51
msgid "[ size in points | relative size, e.g., ``'smaller'``, ``'x-large'`` ]"
msgstr "[ tamaño en puntos | tamaño relativo, p. ej., ``'smaller'``, ``'x-large'`` ]"

#: ../../tutorials/text/text_props.rst:52
msgid "style or fontstyle"
msgstr ""

#: ../../tutorials/text/text_props.rst:52
msgid "[ ``'normal'`` | ``'italic'`` | ``'oblique'`` ]"
msgstr "[ ``'normal'`` | ``'italic'`` | ``'oblique'`` ]"

#: ../../tutorials/text/text_props.rst:53
msgid "text"
msgstr "texto"

#: ../../tutorials/text/text_props.rst:53
#, python-format
msgid "string or anything printable with '%s' conversion"
msgstr ""

#: ../../tutorials/text/text_props.rst:54
msgid "transform"
msgstr "transformar"

#: ../../tutorials/text/text_props.rst:54
msgid "`~matplotlib.transforms.Transform` subclass"
msgstr ""

#: ../../tutorials/text/text_props.rst:55
msgid "variant"
msgstr "variante"

#: ../../tutorials/text/text_props.rst:55
msgid "[ ``'normal'`` | ``'small-caps'`` ]"
msgstr "[ ``'normal'`` | ``'small-caps'`` ]"

#: ../../tutorials/text/text_props.rst:56
msgid "verticalalignment or va"
msgstr ""

#: ../../tutorials/text/text_props.rst:56
msgid "[ ``'center'`` | ``'top'`` | ``'bottom'`` | ``'baseline'`` ]"
msgstr "[ ``'center'`` | ``'top'`` | ``'bottom'`` | ``'baseline'`` ]"

#: ../../tutorials/text/text_props.rst:57
msgid "visible"
msgstr "visible"

#: ../../tutorials/text/text_props.rst:58
msgid "weight or fontweight"
msgstr "peso o peso de fuente"

#: ../../tutorials/text/text_props.rst:58
msgid "[ ``'normal'`` | ``'bold'`` | ``'heavy'`` | ``'light'`` | ``'ultrabold'`` | ``'ultralight'``]"
msgstr "[ ``'normal'`` | ``'bold'`` | ``'heavy'`` | ``'light'`` | ``'ultrabold'`` | ``'ultralight'``]"

#: ../../tutorials/text/text_props.rst:59
msgid "x"
msgstr "x"

#: ../../tutorials/text/text_props.rst:60
msgid "y"
msgstr "y"

#: ../../tutorials/text/text_props.rst:61
msgid "zorder"
msgstr "zorder"

#: ../../tutorials/text/text_props.rst:61
msgid "any number"
msgstr "cualquier número"

#: ../../tutorials/text/text_props.rst:65
msgid "You can lay out text with the alignment arguments ``horizontalalignment``, ``verticalalignment``, and ``multialignment``.  ``horizontalalignment`` controls whether the x positional argument for the text indicates the left, center or right side of the text bounding box. ``verticalalignment`` controls whether the y positional argument for the text indicates the bottom, center or top side of the text bounding box.  ``multialignment``, for newline separated strings only, controls whether the different lines are left, center or right justified.  Here is an example which uses the :func:`~matplotlib.pyplot.text` command to show the various alignment possibilities.  The use of ``transform=ax.transAxes`` throughout the code indicates that the coordinates are given relative to the axes bounding box, with (0, 0) being the lower left of the axes and (1, 1) the upper right."
msgstr ""

#: ../../tutorials/text/text_props.rst:179
msgid "Default Font"
msgstr "Fuente por defecto"

#: ../../tutorials/text/text_props.rst:181
msgid "The base default font is controlled by a set of rcParams. To set the font for mathematical expressions, use the rcParams beginning with ``mathtext`` (see :ref:`mathtext <mathtext-fonts>`)."
msgstr ""

#: ../../tutorials/text/text_props.rst:186
msgid "rcParam"
msgstr "rcParam"

#: ../../tutorials/text/text_props.rst:186
msgid "usage"
msgstr "uso"

#: ../../tutorials/text/text_props.rst:188
msgid "``'font.family'``"
msgstr "``'font.family'``"

#: ../../tutorials/text/text_props.rst:188
msgid "List of font families (installed on user's machine) and/or ``{'cursive', 'fantasy', 'monospace', 'sans', 'sans serif', 'sans-serif', 'serif'}``."
msgstr ""

#: ../../tutorials/text/text_props.rst:193
msgid "``'font.style'``"
msgstr "``'font.style'``"

#: ../../tutorials/text/text_props.rst:193
msgid "The default style, ex ``'normal'``, ``'italic'``."
msgstr ""

#: ../../tutorials/text/text_props.rst:197
msgid "``'font.variant'``"
msgstr "``'font.variant'``"

#: ../../tutorials/text/text_props.rst:197
msgid "Default variant, ex ``'normal'``, ``'small-caps'`` (untested)"
msgstr ""

#: ../../tutorials/text/text_props.rst:200
msgid "``'font.stretch'``"
msgstr "``'font.stretch'``"

#: ../../tutorials/text/text_props.rst:200
msgid "Default stretch, ex ``'normal'``, ``'condensed'`` (incomplete)"
msgstr ""

#: ../../tutorials/text/text_props.rst:204
msgid "``'font.weight'``"
msgstr "``'font.weight'``"

#: ../../tutorials/text/text_props.rst:204
msgid "Default weight.  Either string or integer"
msgstr ""

#: ../../tutorials/text/text_props.rst:208
msgid "``'font.size'``"
msgstr "``'font.size'``"

#: ../../tutorials/text/text_props.rst:208
msgid "Default font size in points.  Relative font sizes (``'large'``, ``'x-small'``) are computed against this size."
msgstr ""

#: ../../tutorials/text/text_props.rst:213
msgid "Matplotlib can use font families installed on the user's computer, i.e. Helvetica, Times, etc. Font families can also be specified with generic-family aliases like (``{'cursive', 'fantasy', 'monospace', 'sans', 'sans serif', 'sans-serif', 'serif'}``)."
msgstr ""

#: ../../tutorials/text/text_props.rst:218
msgid "The mapping between the generic family aliases and actual font families (mentioned at :doc:`default rcParams </tutorials/introductory/customizing>`) is controlled by the following rcParams:"
msgstr ""

#: ../../tutorials/text/text_props.rst:224
msgid "CSS-based generic-family alias"
msgstr ""

#: ../../tutorials/text/text_props.rst:224
msgid "rcParam with mappings"
msgstr ""

#: ../../tutorials/text/text_props.rst:226
msgid "``'serif'``"
msgstr "``'serif'``"

#: ../../tutorials/text/text_props.rst:226
msgid "``'font.serif'``"
msgstr "``'font.serif'``"

#: ../../tutorials/text/text_props.rst:228
msgid "``'monospace'``"
msgstr "``'monospace'``"

#: ../../tutorials/text/text_props.rst:228
msgid "``'font.monospace'``"
msgstr "``'font.monospace'``"

#: ../../tutorials/text/text_props.rst:230
msgid "``'fantasy'``"
msgstr "``'fantasy'``"

#: ../../tutorials/text/text_props.rst:230
msgid "``'font.fantasy'``"
msgstr "``'font.fantasy'``"

#: ../../tutorials/text/text_props.rst:232
msgid "``'cursive'``"
msgstr "``'cursive'``"

#: ../../tutorials/text/text_props.rst:232
msgid "``'font.cursive'``"
msgstr "``'font.cursive'``"

#: ../../tutorials/text/text_props.rst:234
msgid "``{'sans', 'sans serif', 'sans-serif'}``"
msgstr "``{'sans', 'sans serif', 'sans-serif'}``"

#: ../../tutorials/text/text_props.rst:234
msgid "``'font.sans-serif'``"
msgstr "``'font.sans-serif'``"

#: ../../tutorials/text/text_props.rst:238
msgid "If any of generic family names appear in ``'font.family'``, we replace that entry by all the entries in the corresponding rcParam mapping. For example: ::"
msgstr ""

#: ../../tutorials/text/text_props.rst:249
msgid "Text with non-latin glyphs"
msgstr ""

#: ../../tutorials/text/text_props.rst:251
msgid "As of v2.0 the :ref:`default font <default_changes_font>`, DejaVu, contains glyphs for many western alphabets, but not other scripts, such as Chinese, Korean, or Japanese."
msgstr ""

#: ../../tutorials/text/text_props.rst:255
msgid "To set the default font to be one that supports the code points you need, prepend the font name to ``'font.family'`` (recommended), or to the desired alias lists. ::"
msgstr ""

#: ../../tutorials/text/text_props.rst:266
#, python-format
msgid "The generic family alias lists contain fonts that are either shipped alongside Matplotlib (so they have 100% chance of being found), or fonts which have a very high probability of being present in most systems."
msgstr ""

#: ../../tutorials/text/text_props.rst:270
msgid "A good practice when setting custom font families is to append a generic-family to the font-family list as a last resort."
msgstr ""

#: ../../tutorials/text/text_props.rst:273
msgid "You can also set it in your :file:`.matplotlibrc` file::"
msgstr ""

#: ../../tutorials/text/text_props.rst:277
msgid "To control the font used on per-artist basis use the *name*, *fontname* or *fontproperties* keyword arguments documented :doc:`above </tutorials/text/text_props>`."
msgstr ""

#: ../../tutorials/text/text_props.rst:282
msgid "On linux, `fc-list <https://linux.die.net/man/1/fc-list>`__ can be a useful tool to discover the font name; for example ::"
msgstr ""

#: ../../tutorials/text/text_props.rst:294
msgid "lists all of the fonts that support Chinese."
msgstr ""

#: ../../tutorials/text/text_props.rst:310
msgid ":download:`Download Python source code: text_props.py <text_props.py>`"
msgstr ":download:`Download Python source code: text_props.py <text_props.py>`"

#: ../../tutorials/text/text_props.rst:316
msgid ":download:`Download Jupyter notebook: text_props.ipynb <text_props.ipynb>`"
msgstr ""

#: ../../tutorials/text/text_props.rst:323
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

