msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-05-16 19:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/tutorials/text/annotations.po\n"
"X-Crowdin-File-ID: 3336\n"
"Language: es_ES\n"

#: ../../tutorials/text/annotations.rst:13
msgid "Click :ref:`here <sphx_glr_download_tutorials_text_annotations.py>` to download the full example code"
msgstr ""

#: ../../tutorials/text/annotations.rst:22
msgid "Annotations"
msgstr ""

#: ../../tutorials/text/annotations.rst:24
msgid "Annotating text with Matplotlib."
msgstr ""

#: ../../tutorials/text/annotations.rst:27
msgid "Table of Contents"
msgstr ""

#: ../../tutorials/text/annotations.rst:48
msgid "Basic annotation"
msgstr ""

#: ../../tutorials/text/annotations.rst:50
msgid "The uses of the basic :func:`~matplotlib.pyplot.text` will place text at an arbitrary position on the Axes.  A common use case of text is to annotate some feature of the plot, and the :func:`~matplotlib.axes.Axes.annotate` method provides helper functionality to make annotations easy.  In an annotation, there are two points to consider: the location being annotated represented by the argument *xy* and the location of the text *xytext*.  Both of these arguments are ``(x, y)`` tuples."
msgstr ""

#: ../../tutorials/text/annotations.rst:63
msgid "In this example, both the *xy* (arrow tip) and *xytext* locations (text location) are in data coordinates.  There are a variety of other coordinate systems one can choose -- you can specify the coordinate system of *xy* and *xytext* with one of the following strings for *xycoords* and *textcoords* (default is 'data')"
msgstr ""

#: ../../tutorials/text/annotations.rst:70
msgid "argument"
msgstr ""

#: ../../tutorials/text/annotations.rst:70
msgid "coordinate system"
msgstr ""

#: ../../tutorials/text/annotations.rst:72
msgid "'figure points'"
msgstr ""

#: ../../tutorials/text/annotations.rst:72
msgid "points from the lower left corner of the figure"
msgstr ""

#: ../../tutorials/text/annotations.rst:73
msgid "'figure pixels'"
msgstr ""

#: ../../tutorials/text/annotations.rst:73
msgid "pixels from the lower left corner of the figure"
msgstr ""

#: ../../tutorials/text/annotations.rst:74
msgid "'figure fraction'"
msgstr ""

#: ../../tutorials/text/annotations.rst:74
msgid "(0, 0) is lower left of figure and (1, 1) is upper right"
msgstr ""

#: ../../tutorials/text/annotations.rst:75
msgid "'axes points'"
msgstr ""

#: ../../tutorials/text/annotations.rst:75
msgid "points from lower left corner of axes"
msgstr ""

#: ../../tutorials/text/annotations.rst:76
msgid "'axes pixels'"
msgstr ""

#: ../../tutorials/text/annotations.rst:76
msgid "pixels from lower left corner of axes"
msgstr ""

#: ../../tutorials/text/annotations.rst:77
msgid "'axes fraction'"
msgstr ""

#: ../../tutorials/text/annotations.rst:77
msgid "(0, 0) is lower left of axes and (1, 1) is upper right"
msgstr ""

#: ../../tutorials/text/annotations.rst:78
msgid "'data'"
msgstr ""

#: ../../tutorials/text/annotations.rst:78
msgid "use the axes data coordinate system"
msgstr ""

#: ../../tutorials/text/annotations.rst:81
msgid "For example to place the text coordinates in fractional axes coordinates, one could do::"
msgstr ""

#: ../../tutorials/text/annotations.rst:90
msgid "For physical coordinate systems (points or pixels) the origin is the bottom-left of the figure or axes."
msgstr ""

#: ../../tutorials/text/annotations.rst:93
msgid "Optionally, you can enable drawing of an arrow from the text to the annotated point by giving a dictionary of arrow properties in the optional keyword argument *arrowprops*."
msgstr ""

#: ../../tutorials/text/annotations.rst:99
msgid "*arrowprops* key"
msgstr ""

#: ../../tutorials/text/annotations.rst:99
msgid "description"
msgstr "descripci√≥n"

#: ../../tutorials/text/annotations.rst:101
msgid "width"
msgstr ""

#: ../../tutorials/text/annotations.rst:101
msgid "the width of the arrow in points"
msgstr ""

#: ../../tutorials/text/annotations.rst:102
msgid "frac"
msgstr ""

#: ../../tutorials/text/annotations.rst:102
msgid "the fraction of the arrow length occupied by the head"
msgstr ""

#: ../../tutorials/text/annotations.rst:103
msgid "headwidth"
msgstr ""

#: ../../tutorials/text/annotations.rst:103
msgid "the width of the base of the arrow head in points"
msgstr ""

#: ../../tutorials/text/annotations.rst:104
msgid "shrink"
msgstr ""

#: ../../tutorials/text/annotations.rst:104
msgid "move the tip and base some percent away from the annotated point and text"
msgstr ""

#: ../../tutorials/text/annotations.rst:107
msgid "\\*\\*kwargs"
msgstr ""

#: ../../tutorials/text/annotations.rst:107
msgid "any key for :class:`matplotlib.patches.Polygon`, e.g., ``facecolor``"
msgstr ""

#: ../../tutorials/text/annotations.rst:112
msgid "In the example below, the *xy* point is in native coordinates (*xycoords* defaults to 'data').  For a polar axes, this is in (theta, radius) space.  The text in this example is placed in the fractional figure coordinate system. :class:`matplotlib.text.Text` keyword arguments like *horizontalalignment*, *verticalalignment* and *fontsize* are passed from `~matplotlib.axes.Axes.annotate` to the ``Text`` instance."
msgstr ""

#: ../../tutorials/text/annotations.rst:124
msgid "For more on all the wild and wonderful things you can do with annotations, including fancy arrows, see :ref:`plotting-guide-annotation` and :doc:`/gallery/text_labels_and_annotations/annotation_demo`."
msgstr ""

#: ../../tutorials/text/annotations.rst:129
msgid "Do not proceed unless you have already read :ref:`annotations-tutorial`, :func:`~matplotlib.pyplot.text` and :func:`~matplotlib.pyplot.annotate`!"
msgstr ""

#: ../../tutorials/text/annotations.rst:136
msgid "Advanced Annotations"
msgstr ""

#: ../../tutorials/text/annotations.rst:139
msgid "Annotating with Text with Box"
msgstr ""

#: ../../tutorials/text/annotations.rst:141
msgid "Let's start with a simple example."
msgstr ""

#: ../../tutorials/text/annotations.rst:147
msgid "`~.Axes.text` takes a *bbox* keyword argument, which draws a box around the text::"
msgstr ""

#: ../../tutorials/text/annotations.rst:154
msgid "The patch object associated with the text can be accessed by::"
msgstr ""

#: ../../tutorials/text/annotations.rst:158
msgid "The return value is a `.FancyBboxPatch`; patch properties (facecolor, edgewidth, etc.) can be accessed and modified as usual. `.FancyBboxPatch.set_boxstyle` sets the box shape::"
msgstr ""

#: ../../tutorials/text/annotations.rst:164
msgid "The arguments are the name of the box style with its attributes as keyword arguments. Currently, following box styles are implemented."
msgstr ""

#: ../../tutorials/text/annotations.rst:168
msgid "Class"
msgstr ""

#: ../../tutorials/text/annotations.rst:168
#: ../../tutorials/text/annotations.rst:240
#: ../../tutorials/text/annotations.rst:266
msgid "Name"
msgstr ""

#: ../../tutorials/text/annotations.rst:168
#: ../../tutorials/text/annotations.rst:240
#: ../../tutorials/text/annotations.rst:266
msgid "Attrs"
msgstr ""

#: ../../tutorials/text/annotations.rst:170
msgid "Circle"
msgstr ""

#: ../../tutorials/text/annotations.rst:170
msgid "``circle``"
msgstr ""

#: ../../tutorials/text/annotations.rst:170
#: ../../tutorials/text/annotations.rst:171
#: ../../tutorials/text/annotations.rst:172
#: ../../tutorials/text/annotations.rst:173
#: ../../tutorials/text/annotations.rst:178
msgid "pad=0.3"
msgstr ""

#: ../../tutorials/text/annotations.rst:171
msgid "DArrow"
msgstr ""

#: ../../tutorials/text/annotations.rst:171
msgid "``darrow``"
msgstr ""

#: ../../tutorials/text/annotations.rst:172
msgid "LArrow"
msgstr ""

#: ../../tutorials/text/annotations.rst:172
msgid "``larrow``"
msgstr ""

#: ../../tutorials/text/annotations.rst:173
msgid "RArrow"
msgstr ""

#: ../../tutorials/text/annotations.rst:173
msgid "``rarrow``"
msgstr ""

#: ../../tutorials/text/annotations.rst:174
msgid "Round"
msgstr ""

#: ../../tutorials/text/annotations.rst:174
msgid "``round``"
msgstr ""

#: ../../tutorials/text/annotations.rst:174
#: ../../tutorials/text/annotations.rst:175
msgid "pad=0.3,rounding_size=None"
msgstr ""

#: ../../tutorials/text/annotations.rst:175
msgid "Round4"
msgstr ""

#: ../../tutorials/text/annotations.rst:175
msgid "``round4``"
msgstr ""

#: ../../tutorials/text/annotations.rst:176
msgid "Roundtooth"
msgstr ""

#: ../../tutorials/text/annotations.rst:176
msgid "``roundtooth``"
msgstr ""

#: ../../tutorials/text/annotations.rst:176
#: ../../tutorials/text/annotations.rst:177
msgid "pad=0.3,tooth_size=None"
msgstr ""

#: ../../tutorials/text/annotations.rst:177
msgid "Sawtooth"
msgstr ""

#: ../../tutorials/text/annotations.rst:177
msgid "``sawtooth``"
msgstr ""

#: ../../tutorials/text/annotations.rst:178
msgid "Square"
msgstr ""

#: ../../tutorials/text/annotations.rst:178
msgid "``square``"
msgstr ""

#: ../../tutorials/text/annotations.rst:185
msgid "Note that the attribute arguments can be specified within the style name with separating comma (this form can be used as \"boxstyle\" value of bbox argument when initializing the text instance) ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:192
msgid "Annotating with Arrow"
msgstr ""

#: ../../tutorials/text/annotations.rst:194
msgid "`~.Axes.annotate` draws an arrow connecting two points in an axes::"
msgstr ""

#: ../../tutorials/text/annotations.rst:201
msgid "This annotates a point at *xy* in the given coordinate (*xycoords*) with the text at *xytext* given in *textcoords*. Often, the annotated point is specified in the *data* coordinate and the annotating text in *offset points*. See `~.Axes.annotate` for available coordinate systems."
msgstr ""

#: ../../tutorials/text/annotations.rst:207
msgid "An arrow connecting *xy* to *xytext* can be optionally drawn by specifying the *arrowprops* argument. To draw only an arrow, use empty string as the first argument. ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:222
msgid "The arrow is drawn as follows:"
msgstr ""

#: ../../tutorials/text/annotations.rst:224
msgid "A path connecting the two points is created, as specified by the *connectionstyle* parameter."
msgstr ""

#: ../../tutorials/text/annotations.rst:226
msgid "The path is clipped to avoid patches *patchA* and *patchB*, if these are set."
msgstr ""

#: ../../tutorials/text/annotations.rst:228
msgid "The path is further shrunk by *shrinkA* and *shrinkB* (in pixels)."
msgstr ""

#: ../../tutorials/text/annotations.rst:229
msgid "The path is transmuted to an arrow patch, as specified by the *arrowstyle* parameter."
msgstr ""

#: ../../tutorials/text/annotations.rst:236
msgid "The creation of the connecting path between two points is controlled by ``connectionstyle`` key and the following styles are available."
msgstr ""

#: ../../tutorials/text/annotations.rst:242
msgid "``angle``"
msgstr ""

#: ../../tutorials/text/annotations.rst:242
msgid "angleA=90,angleB=0,rad=0.0"
msgstr ""

#: ../../tutorials/text/annotations.rst:243
msgid "``angle3``"
msgstr ""

#: ../../tutorials/text/annotations.rst:243
msgid "angleA=90,angleB=0"
msgstr ""

#: ../../tutorials/text/annotations.rst:244
msgid "``arc``"
msgstr ""

#: ../../tutorials/text/annotations.rst:244
msgid "angleA=0,angleB=0,armA=None,armB=None,rad=0.0"
msgstr ""

#: ../../tutorials/text/annotations.rst:245
msgid "``arc3``"
msgstr ""

#: ../../tutorials/text/annotations.rst:245
msgid "rad=0.0"
msgstr ""

#: ../../tutorials/text/annotations.rst:246
msgid "``bar``"
msgstr ""

#: ../../tutorials/text/annotations.rst:246
msgid "armA=0.0,armB=0.0,fraction=0.3,angle=None"
msgstr ""

#: ../../tutorials/text/annotations.rst:249
msgid "Note that \"3\" in ``angle3`` and ``arc3`` is meant to indicate that the resulting path is a quadratic spline segment (three control points). As will be discussed below, some arrow style options can only be used when the connecting path is a quadratic spline."
msgstr ""

#: ../../tutorials/text/annotations.rst:254
msgid "The behavior of each connection style is (limitedly) demonstrated in the example below. (Warning: The behavior of the ``bar`` style is currently not well defined, it may be changed in the future)."
msgstr ""

#: ../../tutorials/text/annotations.rst:262
msgid "The connecting path (after clipping and shrinking) is then mutated to an arrow patch, according to the given ``arrowstyle``."
msgstr ""

#: ../../tutorials/text/annotations.rst:268
msgid "``-``"
msgstr ""

#: ../../tutorials/text/annotations.rst:268
msgid "None"
msgstr ""

#: ../../tutorials/text/annotations.rst:269
msgid "``->``"
msgstr ""

#: ../../tutorials/text/annotations.rst:269
#: ../../tutorials/text/annotations.rst:272
#: ../../tutorials/text/annotations.rst:273
#: ../../tutorials/text/annotations.rst:274
#: ../../tutorials/text/annotations.rst:275
#: ../../tutorials/text/annotations.rst:276
msgid "head_length=0.4,head_width=0.2"
msgstr ""

#: ../../tutorials/text/annotations.rst:270
msgid "``-[``"
msgstr ""

#: ../../tutorials/text/annotations.rst:270
msgid "widthB=1.0,lengthB=0.2,angleB=None"
msgstr ""

#: ../../tutorials/text/annotations.rst:271
msgid "``|-|``"
msgstr ""

#: ../../tutorials/text/annotations.rst:271
msgid "widthA=1.0,widthB=1.0"
msgstr ""

#: ../../tutorials/text/annotations.rst:272
msgid "``-|>``"
msgstr ""

#: ../../tutorials/text/annotations.rst:273
msgid "``<-``"
msgstr ""

#: ../../tutorials/text/annotations.rst:274
msgid "``<->``"
msgstr ""

#: ../../tutorials/text/annotations.rst:275
msgid "``<|-``"
msgstr ""

#: ../../tutorials/text/annotations.rst:276
msgid "``<|-|>``"
msgstr ""

#: ../../tutorials/text/annotations.rst:277
msgid "``fancy``"
msgstr ""

#: ../../tutorials/text/annotations.rst:277
msgid "head_length=0.4,head_width=0.4,tail_width=0.4"
msgstr ""

#: ../../tutorials/text/annotations.rst:278
msgid "``simple``"
msgstr ""

#: ../../tutorials/text/annotations.rst:278
msgid "head_length=0.5,head_width=0.5,tail_width=0.2"
msgstr ""

#: ../../tutorials/text/annotations.rst:279
msgid "``wedge``"
msgstr ""

#: ../../tutorials/text/annotations.rst:279
msgid "tail_width=0.3,shrink_factor=0.5"
msgstr ""

#: ../../tutorials/text/annotations.rst:286
msgid "Some arrowstyles only work with connection styles that generate a quadratic-spline segment. They are ``fancy``, ``simple``, and ``wedge``. For these arrow styles, you must use the \"angle3\" or \"arc3\" connection style."
msgstr ""

#: ../../tutorials/text/annotations.rst:291
msgid "If the annotation string is given, the patchA is set to the bbox patch of the text by default."
msgstr ""

#: ../../tutorials/text/annotations.rst:298
msgid "As with `~.Axes.text`, a box around the text can be drawn using the *bbox* argument."
msgstr ""

#: ../../tutorials/text/annotations.rst:305
msgid "By default, the starting point is set to the center of the text extent.  This can be adjusted with ``relpos`` key value. The values are normalized to the extent of the text. For example, (0, 0) means lower-left corner and (1, 1) means top-right."
msgstr ""

#: ../../tutorials/text/annotations.rst:315
msgid "Placing Artist at the anchored location of the Axes"
msgstr ""

#: ../../tutorials/text/annotations.rst:317
msgid "There are classes of artists that can be placed at an anchored location in the Axes.  A common example is the legend.  This type of artist can be created by using the `.OffsetBox` class. A few predefined classes are available in :mod:`matplotlib.offsetbox` and in :mod:`mpl_toolkits.axes_grid1.anchored_artists`."
msgstr ""

#: ../../tutorials/text/annotations.rst:347
#: ../../tutorials/text/annotations.rst:403
#: ../../tutorials/text/annotations.rst:449
msgid "Out:"
msgstr ""

#: ../../tutorials/text/annotations.rst:358
msgid "The *loc* keyword has same meaning as in the legend command."
msgstr ""

#: ../../tutorials/text/annotations.rst:360
msgid "A simple application is when the size of the artist (or collection of artists) is known in pixel size during the time of creation. For example, If you want to draw a circle with fixed size of 20 pixel x 20 pixel (radius = 10 pixel), you can utilize ``AnchoredDrawingArea``. The instance is created with a size of the drawing area (in pixels), and arbitrary artists can added to the drawing area. Note that the extents of the artists that are added to the drawing area are not related to the placement of the drawing area itself. Only the initial size matters."
msgstr ""

#: ../../tutorials/text/annotations.rst:370
msgid "The artists that are added to the drawing area should not have a transform set (it will be overridden) and the dimensions of those artists are interpreted as a pixel coordinate, i.e., the radius of the circles in above example are 10 pixels and 5 pixels, respectively."
msgstr ""

#: ../../tutorials/text/annotations.rst:414
msgid "Sometimes, you want your artists to scale with the data coordinate (or coordinates other than canvas pixels). You can use ``AnchoredAuxTransformBox`` class. This is similar to ``AnchoredDrawingArea`` except that the extent of the artist is determined during the drawing time respecting the specified transform."
msgstr ""

#: ../../tutorials/text/annotations.rst:420
msgid "The ellipse in the example below will have width and height corresponding to 0.1 and 0.4 in data coordinates and will be automatically scaled when the view limits of the axes change."
msgstr ""

#: ../../tutorials/text/annotations.rst:460
msgid "As in the legend, the bbox_to_anchor argument can be set.  Using the HPacker and VPacker, you can have an arrangement(?) of artist as in the legend (as a matter of fact, this is how the legend is created)."
msgstr ""

#: ../../tutorials/text/annotations.rst:468
msgid "Note that unlike the legend, the ``bbox_transform`` is set to IdentityTransform by default."
msgstr ""

#: ../../tutorials/text/annotations.rst:472
msgid "Using Complex Coordinates with Annotations"
msgstr ""

#: ../../tutorials/text/annotations.rst:474
msgid "The Annotation in matplotlib supports several types of coordinates as described in :ref:`annotations-tutorial`. For an advanced user who wants more control, it supports a few other options."
msgstr ""

#: ../../tutorials/text/annotations.rst:478
msgid "A `.Transform` instance.  For example, ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:482
msgid "is identical to ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:486
msgid "This allows annotating a point in another axes::"
msgstr ""

#: ../../tutorials/text/annotations.rst:493
msgid "An `.Artist` instance. The *xy* value (or *xytext*) is interpreted as a fractional coordinate of the bbox (return value of *get_window_extent*) of the artist::"
msgstr ""

#: ../../tutorials/text/annotations.rst:510
msgid "Note that you must ensure that the extent of the coordinate artist (*an1* in above example) is determined before *an2* gets drawn. Usually, this means that *an2* needs to be drawn after *an1*."
msgstr ""

#: ../../tutorials/text/annotations.rst:514
msgid "A callable object that takes the renderer instance as single argument, and returns either a `.Transform` or a `.BboxBase`.  The return value is then handled as in (1), for transforms, or in (2), for bboxes.  For example, ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:521
msgid "is identical to::"
msgstr ""

#: ../../tutorials/text/annotations.rst:526
msgid "A pair of coordinate specifications -- the first for the x-coordinate, and the second is for the y-coordinate; e.g. ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:531
msgid "Here, 0.5 is in data coordinates, and 1 is in normalized axes coordinates. Each of the coordinate specifications can also be an artist or a transform. For example,"
msgstr ""

#: ../../tutorials/text/annotations.rst:539
msgid "Sometimes, you want your annotation with some \"offset points\", not from the annotated point but from some other point.  `.text.OffsetFrom` is a helper for such cases."
msgstr ""

#: ../../tutorials/text/annotations.rst:547
msgid "You may take a look at this example :doc:`/gallery/text_labels_and_annotations/annotation_demo`."
msgstr ""

#: ../../tutorials/text/annotations.rst:551
msgid "Using ConnectionPatch"
msgstr ""

#: ../../tutorials/text/annotations.rst:553
msgid "ConnectionPatch is like an annotation without text. While `~.Axes.annotate` is sufficient in most situations, ConnectionPatch is useful when you want to connect points in different axes. ::"
msgstr ""

#: ../../tutorials/text/annotations.rst:563
msgid "The above code connects point *xy* in the data coordinates of ``ax1`` to point *xy* in the data coordinates of ``ax2``. Here is a simple example."
msgstr ""

#: ../../tutorials/text/annotations.rst:570
msgid "Here, we added the ConnectionPatch to the *figure* (with `~.Figure.add_artist`) rather than to either axes: this ensures that it is drawn on top of both axes, and is also necessary if using :doc:`constrained_layout </tutorials/intermediate/constrainedlayout_guide>` for positioning the axes."
msgstr ""

#: ../../tutorials/text/annotations.rst:576
msgid "Advanced Topics"
msgstr ""

#: ../../tutorials/text/annotations.rst:579
msgid "Zoom effect between Axes"
msgstr ""

#: ../../tutorials/text/annotations.rst:581
msgid "``mpl_toolkits.axes_grid1.inset_locator`` defines some patch classes useful for interconnecting two axes. Understanding the code requires some knowledge of Matplotlib's transform system."
msgstr ""

#: ../../tutorials/text/annotations.rst:590
msgid "Define Custom BoxStyle"
msgstr ""

#: ../../tutorials/text/annotations.rst:592
msgid "You can use a custom box style. The value for the ``boxstyle`` can be a callable object in the following forms.::"
msgstr ""

#: ../../tutorials/text/annotations.rst:608
msgid "Here is a complete example."
msgstr ""

#: ../../tutorials/text/annotations.rst:614
msgid "Similarly, you can define a custom ConnectionStyle and a custom ArrowStyle. See the source code of ``lib/matplotlib/patches.py`` and check how each style class is defined."
msgstr ""

#: ../../tutorials/text/annotations.rst:631
msgid ":download:`Download Python source code: annotations.py <annotations.py>`"
msgstr ""

#: ../../tutorials/text/annotations.rst:637
msgid ":download:`Download Jupyter notebook: annotations.ipynb <annotations.ipynb>`"
msgstr ""

#: ../../tutorials/text/annotations.rst:644
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

