msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-06-27 12:22\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/gallery/images_contours_and_fields/colormap_normalizations_symlognorm.po\n"
"X-Crowdin-File-ID: 2284\n"
"Language: es_ES\n"

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:13
msgid "Click :ref:`here <sphx_glr_download_gallery_images_contours_and_fields_colormap_normalizations_symlognorm.py>` to download the full example code"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:23
msgid "Colormap Normalizations SymLogNorm"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:25
msgid "Demonstration of using norm to map colormaps onto data in non-linear ways."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:31
msgid "Synthetic dataset consisting of two humps, one negative and one positive, the positive with 8-times the amplitude. Linearly, the negative hump is almost invisible, and it is very difficult to see any detail of its profile. With the logarithmic scaling applied to both positive and negative values, it is much easier to see the shape of each hump."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:38
msgid "See `~.colors.SymLogNorm`."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:90
msgid "Out:"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:101
msgid "In order to find the best visualization for any particular dataset, it may be necessary to experiment with multiple different color scales. As well as the `~.colors.SymLogNorm` scaling, there is also the option of using `~.colors.AsinhNorm` (experimental), which has a smoother transition between the linear and logarithmic regions of the transformation applied to the data values, \"Z\". In the plots below, it may be possible to see contour-like artifacts around each hump despite there being no sharp features in the dataset itself. The ``asinh`` scaling shows a smoother shading of each hump."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:152
msgid "**Total running time of the script:** ( 0 minutes  2.309 seconds)"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:167
msgid ":download:`Download Python source code: colormap_normalizations_symlognorm.py <colormap_normalizations_symlognorm.py>`"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:173
msgid ":download:`Download Jupyter notebook: colormap_normalizations_symlognorm.ipynb <colormap_normalizations_symlognorm.ipynb>`"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations_symlognorm.rst:180
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"

