msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-06-27 12:22\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/gallery/images_contours_and_fields/colormap_normalizations.po\n"
"X-Crowdin-File-ID: 2282\n"
"Language: es_ES\n"

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:13
msgid "Click :ref:`here <sphx_glr_download_gallery_images_contours_and_fields_colormap_normalizations.py>` to download the full example code"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:23
msgid "Colormap Normalizations"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:25
msgid "Demonstration of using norm to map colormaps onto data in non-linear ways."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:47
msgid "Lognorm: Instead of pcolor log10(Z1) you can have colorbars that have the exponential labels using a norm."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:88
#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:130
#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:181
#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:245
msgid "Out:"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:99
msgid "PowerNorm: Here a power-law trend in X partially obscures a rectified sine wave in Y. We can remove the power law using a PowerNorm."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:141
msgid "SymLogNorm: two humps, one negative and one positive, The positive with 5-times the amplitude. Linearly, you cannot see detail in the negative hump.  Here we logarithmically scale the positive and negative data separately."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:146
msgid "Note that colorbar labels do not come out looking very good."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:192
msgid "Custom Norm: An example with a customized normalization.  This one uses the example above, and normalizes the negative data differently from the positive."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:256
msgid "BoundaryNorm: For this one you provide the boundaries for your colors, and the Norm puts the first color in between the first pair, the second color between the second pair, etc."
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:301
msgid "**Total running time of the script:** ( 0 minutes  2.791 seconds)"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:316
msgid ":download:`Download Python source code: colormap_normalizations.py <colormap_normalizations.py>`"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:322
msgid ":download:`Download Jupyter notebook: colormap_normalizations.ipynb <colormap_normalizations.ipynb>`"
msgstr ""

#: ../../gallery/images_contours_and_fields/colormap_normalizations.rst:329
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"

