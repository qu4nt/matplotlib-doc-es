msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-06-08 03:41\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/gallery/ticks/ticks_too_many.po\n"
"X-Crowdin-File-ID: 3050\n"
"Language: es_ES\n"

#: ../../gallery/ticks/ticks_too_many.rst:13
msgid "Click :ref:`here <sphx_glr_download_gallery_ticks_ticks_too_many.py>` to download the full example code"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:23
msgid "Fixing too many ticks"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:25
msgid "One common cause for unexpected tick behavior is passing a list of strings instead of numbers or datetime objects. This can easily happen without notice when reading in a comma-delimited text file. Matplotlib treats lists of strings as *categorical* variables (:doc:`/gallery/lines_bars_and_markers/categorical_variables`), and by default puts one tick per category, and plots them in the order in which they are supplied.  If this is not desired, the solution is to convert the strings to a numeric type as in the following examples."
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:37
msgid "Example 1: Strings can lead to an unexpected order of number ticks"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:72
#: ../../gallery/ticks/ticks_too_many.rst:116
msgid "Out:"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:84
msgid "Example 2: Strings can lead to very many ticks"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:85
msgid "If *x* has 100 elements, all strings, then we would have 100 (unreadable) ticks, and again the solution is to convert the strings to floats:"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:128
msgid "Example 3: Strings can lead to an unexpected order of datetime ticks"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:129
msgid "A common case is when dates are read from a CSV file, they need to be converted from strings to datetime objects to get the proper date locators and formatters."
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:167
msgid "**Total running time of the script:** ( 0 minutes  2.247 seconds)"
msgstr ""

#: ../../gallery/ticks/ticks_too_many.rst:182
msgid ":download:`Download Python source code: ticks_too_many.py <ticks_too_many.py>`"
msgstr ":download:`Descarga el c√≥digo fuente de Python: ticks_too_many.py <ticks_too_many.py>`"

#: ../../gallery/ticks/ticks_too_many.rst:188
msgid ":download:`Download Jupyter notebook: ticks_too_many.ipynb <ticks_too_many.ipynb>`"
msgstr ":download:`Descarga el cuaderno Jupyter: ticks_too_many.ipynb <ticks_too_many.ipynb>`"

#: ../../gallery/ticks/ticks_too_many.rst:195
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

