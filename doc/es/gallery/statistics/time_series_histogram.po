msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:30\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/gallery/statistics/time_series_histogram.po\n"
"X-Crowdin-File-ID: 2834\n"
"Language: es_ES\n"

#: ../../gallery/statistics/time_series_histogram.rst:13
msgid "Click :ref:`here <sphx_glr_download_gallery_statistics_time_series_histogram.py>` to download the full example code"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:23
msgid "Time Series Histogram"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:25
msgid "This example demonstrates how to efficiently visualize large numbers of time series in a way that could potentially reveal hidden substructure and patterns that are not immediately obvious, and display them in a visually appealing way."
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:29
msgid "In this example, we generate multiple sinusoidal \"signal\" series that are buried under a larger number of random walk \"noise/background\" series. For an unbiased Gaussian random walk with standard deviation of σ, the RMS deviation from the origin after n steps is σ*sqrt(n). So in order to keep the sinusoids visible on the same scale as the random walks, we scale the amplitude by the random walk RMS. In addition, we also introduce a small random offset ``phi`` to shift the sines left/right, and some additive random noise to shift individual data points up/down to make the signal a bit more \"realistic\" (you wouldn't expect a perfect sine wave to appear in your data)."
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:39
msgid "The first plot shows the typical way of visualizing multiple time series by overlaying them on top of each other with ``plt.plot`` and a small value of ``alpha``. The second and third plots show how to reinterpret the data as a 2d histogram, with optional interpolation between data points, by using ``np.histogram2d`` and ``plt.pcolormesh``."
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:132
msgid "Out:"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:144
msgid "References"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:146
msgid "The use of the following functions, methods, classes and modules is shown in this example:"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:149
msgid "`matplotlib.axes.Axes.pcolormesh` / `matplotlib.pyplot.pcolormesh`"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:150
msgid "`matplotlib.figure.Figure.colorbar`"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:155
msgid "**Total running time of the script:** ( 0 minutes  2.983 seconds)"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:170
msgid ":download:`Download Python source code: time_series_histogram.py <time_series_histogram.py>`"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:176
msgid ":download:`Download Jupyter notebook: time_series_histogram.ipynb <time_series_histogram.ipynb>`"
msgstr ""

#: ../../gallery/statistics/time_series_histogram.rst:183
msgid "Keywords: matplotlib code example, codex, python plot, pyplot `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

