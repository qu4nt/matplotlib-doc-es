msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-19 18:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/users/prev_whats_new/whats_new_3.4.0.po\n"
"X-Crowdin-File-ID: 3470\n"
"Language: es_ES\n"

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:5
msgid "What's new in Matplotlib 3.4.0 (Mar 26, 2021)"
msgstr "Novedades de Matplotlib 3.4.0 (26 de marzo de 2021)"

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "For a list of all of the issues and pull requests since the last revision, see the :ref:`github-stats`."
msgstr "Para ver una lista de todas las incidencias y pull requests desde la última revisión, consulta la :ref:`github-stats`."

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:11
msgid "Table of Contents"
msgstr "Tabla de Contenidos"

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:17
msgid "Figure and Axes creation / management"
msgstr "Creación y gestión de figuras y ejes"

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:20
msgid "New subfigure functionality"
msgstr "Nueva funcionalidad de subfigura"

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:22
msgid "New `.figure.Figure.add_subfigure` and `.figure.Figure.subfigures` functionalities allow creating virtual figures within figures. Similar nesting was previously done with nested gridspecs (see :doc:`/gallery/subplots_axes_and_figures/gridspec_nested`). However, this did not allow localized figure artists (e.g., a colorbar or suptitle) that only pertained to each subgridspec."
msgstr "Las nuevas funcionalidades `.figure.Figure.add_subfigure` y `.figure.Figure.subfigures` permiten crear figuras virtuales dentro de las figuras. Anteriormente se realizaba un anidamiento similar con gridspecs anidados ( ver :doc:`/gallery/subplots_axes_and_figures/gridspec_nested`). Sin embargo, esto no permitía localizar a los artists de las figuras (por ejemplo, una barra de color o un subtítulo) que sólo pertenecían a cada subgridspec."

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:29
msgid "The new methods `.figure.Figure.add_subfigure` and `.figure.Figure.subfigures` are meant to rhyme with `.figure.Figure.add_subplot` and `.figure.Figure.subplots` and have most of the same arguments."
msgstr "Los nuevos métodos `.figure.Figure.add_subfigure` y `.figure.Figure.subfigures` están pensados para rimar con `.figure.Figure.add_subplot` y `.figure.Figure.subplots` y tienen la mayoría de los mismos argumentos."

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:33
msgid "See :doc:`/gallery/subplots_axes_and_figures/subfigures` for further details."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:37
msgid "The subfigure functionality is experimental API as of v3.4."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-1.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-1.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-1.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:75
msgid "Single-line string notation for ``subplot_mosaic``"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:77
msgid "`.Figure.subplot_mosaic` and `.pyplot.subplot_mosaic` now accept a single-line string, using semicolons to delimit rows. Namely, ::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:86
msgid "may be written as the shorter:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:9
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-2.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-2.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-2.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:94
msgid "Changes to behavior of Axes creation methods (``gca``, ``add_axes``, ``add_subplot``)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:96
msgid "The behavior of the functions to create new Axes (`.pyplot.axes`, `.pyplot.subplot`, `.figure.Figure.add_axes`, `.figure.Figure.add_subplot`) has changed. In the past, these functions would detect if you were attempting to create Axes with the same keyword arguments as already-existing Axes in the current Figure, and if so, they would return the existing Axes. Now, `.pyplot.axes`, `.figure.Figure.add_axes`, and `.figure.Figure.add_subplot` will always create new Axes. `.pyplot.subplot` will continue to reuse an existing Axes with a matching subplot spec and equal *kwargs*."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:105
msgid "Correspondingly, the behavior of the functions to get the current Axes (`.pyplot.gca`, `.figure.Figure.gca`) has changed. In the past, these functions accepted keyword arguments. If the keyword arguments matched an already-existing Axes, then that Axes would be returned, otherwise new Axes would be created with those keyword arguments. Now, the keyword arguments are only considered if there are no Axes at all in the current figure. In a future release, these functions will not accept keyword arguments at all."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:114
msgid "``add_subplot``/``add_axes`` gained an *axes_class* parameter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:116
msgid "In particular, ``mpl_toolkits`` Axes subclasses can now be idiomatically used using, e.g., ``fig.add_subplot(axes_class=mpl_toolkits.axislines.Axes)``"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:120
msgid "Subplot and subplot2grid can now work with constrained layout"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:122
msgid "``constrained_layout`` depends on a single `.GridSpec` for each logical layout on a figure. Previously, `.pyplot.subplot` and `.pyplot.subplot2grid` added a new ``GridSpec`` each time they were called and were therefore incompatible with ``constrained_layout``."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:127
msgid "Now ``subplot`` attempts to reuse the ``GridSpec`` if the number of rows and columns is the same as the top level GridSpec already in the figure, i.e., ``plt.subplot(2, 1, 2)`` will use the same GridSpec as ``plt.subplot(2, 1, 1)`` and the ``constrained_layout=True`` option to `~.figure.Figure` will work."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:132
msgid "In contrast, mixing *nrows* and *ncols* will *not* work with ``constrained_layout``: ``plt.subplot(2, 2, 1)`` followed by ``plt.subplots(2, 1, 2)`` will still produce two GridSpecs, and ``constrained_layout=True`` will give bad results. In order to get the desired effect, the second call can specify the cells the second Axes is meant to cover:  ``plt.subplots(2, 2, (2, 4))``, or the more Pythonic ``plt.subplot2grid((2, 2), (0, 1), rowspan=2)`` can be used."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:142
msgid "Plotting methods"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:145
msgid "``axline`` supports *transform* parameter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:147
msgid "`~.Axes.axline` now supports the *transform* parameter, which applies to the points *xy1*, *xy2*. The *slope* (if given) is always in data coordinates."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:150
msgid "For example, this can be used with ``ax.transAxes`` for drawing lines with a fixed slope. In the following plot, the line appears through the same point on both Axes, even though they show different data limits."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:13
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-3.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-3.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-3.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:164
msgid "New automatic labeling for bar charts"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:166
msgid "A new `.Axes.bar_label` method has been added for auto-labeling bar charts."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:171
msgid "Example of the new automatic labeling."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:174
msgid "A list of hatches can be specified to `~.axes.Axes.bar` and `~.axes.Axes.barh`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:176
msgid "Similar to some other rectangle properties, it is now possible to hand a list of hatch styles to `~.axes.Axes.bar` and `~.axes.Axes.barh` in order to create bars with different hatch styles, e.g."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-4.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-4.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-4.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:187
msgid "Setting ``BarContainer`` orientation"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:189
msgid "`.BarContainer` now accepts a new string argument *orientation*. It can be either ``'vertical'`` or ``'horizontal'``, default is ``None``."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:193
msgid "Contour plots now default to using ScalarFormatter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:195
#, python-format
msgid "Pass ``fmt=\"%1.3f\"`` to the contouring call to restore the old default label format."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:199
msgid "``Axes.errorbar`` cycles non-color properties correctly"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:201
msgid "Formerly, `.Axes.errorbar` incorrectly skipped the Axes property cycle if a color was explicitly specified, even if the property cycler was for other properties (such as line style). Now, `.Axes.errorbar` will advance the Axes property cycle as done for `.Axes.plot`, i.e., as long as all properties in the cycler are not explicitly passed."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:207
msgid "For example, the following will cycle through the line styles:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:17
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-5.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-5.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-5.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:223
msgid "``errorbar`` *errorevery* parameter matches *markevery*"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:225
msgid "Similar to the *markevery* parameter to `~.Axes.plot`, the *errorevery* parameter of `~.Axes.errorbar` now accept slices and NumPy fancy indexes (which must match the size of *x*)."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-6.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-6.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-6.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:244
msgid "``hexbin`` supports data reference for *C* parameter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:246
msgid "As with the *x* and *y* parameters, `.Axes.hexbin` now supports passing the *C* parameter using a data reference."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:16
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-7.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-7.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-7.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:262
msgid "Support callable for formatting of Sankey labels"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:264
msgid "The `format` parameter of `matplotlib.sankey.Sankey` can now accept callables."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:266
msgid "This allows the use of an arbitrary function to label flows, for example allowing the mapping of numbers to emoji."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-8.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-8.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-8.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:308
msgid "``Axes.spines`` access shortcuts"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:310
msgid "``Axes.spines`` is now a dedicated container class `.Spines` for a set of `.Spine`\\s instead of an ``OrderedDict``. On top of dict-like access, ``Axes.spines`` now also supports some ``pandas.Series``-like features."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:314
msgid "Accessing single elements by item or by attribute::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:319
msgid "Accessing a subset of items::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:323
msgid "Accessing all items simultaneously::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:328
msgid "New ``stairs`` method and ``StepPatch`` artist"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:330
msgid "`.pyplot.stairs` and the underlying artist `~.matplotlib.patches.StepPatch` provide a cleaner interface for plotting stepwise constant functions for the common case that you know the step edges. This supersedes many use cases of `.pyplot.step`, for instance when plotting the output of `numpy.histogram`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:335
msgid "For both the artist and the function, the x-like edges input is one element longer than the y-like values input"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-9.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-9.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-9.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:350
msgid "See :doc:`/gallery/lines_bars_and_markers/stairs_demo` for examples."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:353
msgid "Added *orientation* parameter for stem plots"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:355
msgid "By default, stem lines are vertical. They can be changed to horizontal using the *orientation* parameter of `.Axes.stem` or `.pyplot.stem`:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-10.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-10.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-10.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:367
msgid "Angles on Bracket arrow styles"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:369
msgid "Angles specified on the *Bracket* arrow styles (``]-[``, ``]-``, ``-[``, or ``|-|`` passed to *arrowstyle* parameter of `.FancyArrowPatch`) are now applied. Previously, the *angleA* and *angleB* options were allowed, but did nothing."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-11.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-11.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-11.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:392
msgid "``TickedStroke`` patheffect"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:394
msgid "The new `.TickedStroke` patheffect can be used to produce lines with a ticked style. This can be used to, e.g., distinguish the valid and invalid sides of the constraint boundaries in the solution space of optimizations."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:403
msgid "Colors and colormaps"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:406
msgid "Collection color specification and mapping"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:408
msgid "Reworking the handling of color mapping and the keyword arguments for *facecolor* and *edgecolor* has resulted in three behavior changes:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:411
msgid "Color mapping can be turned off by calling ``Collection.set_array(None)``. Previously, this would have no effect."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:413
msgid "When a mappable array is set, with ``facecolor='none'`` and ``edgecolor='face'``, both the faces and the edges are left uncolored. Previously the edges would be color-mapped."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:416
msgid "When a mappable array is set, with ``facecolor='none'`` and ``edgecolor='red'``, the edges are red. This addresses Issue #1302. Previously the edges would be color-mapped."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:421
msgid "Transparency (alpha) can be set as an array in collections"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:423
msgid "Previously, the alpha value controlling transparency in collections could be specified only as a scalar applied to all elements in the collection. For example, all the markers in a `~.Axes.scatter` plot, or all the quadrilaterals in a `~.Axes.pcolormesh` plot, would have the same alpha value."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:428
msgid "Now it is possible to supply alpha as an array with one value for each element (marker, quadrilateral, etc.) in a collection."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-12.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-12.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-12.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:454
msgid "pcolormesh has improved transparency handling by enabling snapping"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:456
msgid "Due to how the snapping keyword argument was getting passed to the Agg backend, previous versions of Matplotlib would appear to show lines between the grid edges of a mesh with transparency. This version now applies snapping by default. To restore the old behavior (e.g., for test images), you may set :rc:`pcolormesh.snap` to `False`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-13.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-13.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-13.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:473
msgid "Note that there are lines between the grid boundaries of the main plot which are not the same transparency. The colorbar also shows these lines when a transparency is added to the colormap because internally it uses pcolormesh to draw the colorbar. With snapping on by default (below), the lines at the grid boundaries disappear."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-14.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-14.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-14.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:489
msgid "IPython representations for Colormap objects"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:491
msgid "The `matplotlib.colors.Colormap` object now has image representations for IPython / Jupyter backends. Cells returning a colormap on the last line will display an image of the colormap."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:527
msgid "``Colormap.set_extremes`` and ``Colormap.with_extremes``"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:529
msgid "Because the `.Colormap.set_bad`, `.Colormap.set_under` and `.Colormap.set_over` methods modify the colormap in place, the user must be careful to first make a copy of the colormap if setting the extreme colors e.g. for a builtin colormap."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:533
msgid "The new ``Colormap.with_extremes(bad=..., under=..., over=...)`` can be used to first copy the colormap and set the extreme colors on that copy."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:536
msgid "The new `.Colormap.set_extremes` method is provided for API symmetry with `.Colormap.with_extremes`, but note that it suffers from the same issue as the earlier individual setters."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:541
msgid "Get under/over/bad colors of Colormap objects"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:543
msgid "`matplotlib.colors.Colormap` now has methods `~.colors.Colormap.get_under`, `~.colors.Colormap.get_over`, `~.colors.Colormap.get_bad` for the colors used for out-of-range and masked values."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:548
msgid "New ``cm.unregister_cmap`` function"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:550
msgid "`.cm.unregister_cmap` allows users to remove a colormap that they have previously registered."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:554
msgid "New ``CenteredNorm`` for symmetrical data around a center"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:556
msgid "In cases where data is symmetrical around a center, for example, positive and negative anomalies around a center zero, `~.matplotlib.colors.CenteredNorm` is a new norm that automatically creates a symmetrical mapping around the center. This norm is well suited to be combined with a divergent colormap which uses an unsaturated color in its center."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-15.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-15.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-15.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:581
msgid "If the center of symmetry is different from 0, it can be set with the *vcenter* argument. To manually set the range of `~.matplotlib.colors.CenteredNorm`, use the *halfrange* argument."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:585
#: ../../users/prev_whats_new/whats_new_3.4.0.rst:620
msgid "See :doc:`/tutorials/colors/colormapnorms` for an example and more details about data normalization."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:589
msgid "New ``FuncNorm`` for arbitrary normalizations"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:591
msgid "The `.FuncNorm` allows for arbitrary normalization using functions for the forward and inverse."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-16.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-16.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-16.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:624
msgid "GridSpec-based colorbars can now be positioned above or to the left of the main axes"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:626
msgid "... by passing ``location=\"top\"`` or ``location=\"left\"`` to the ``colorbar()`` call."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:631
msgid "Titles, ticks, and labels"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:634
msgid "supxlabel and supylabel"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:636
msgid "It is possible to add x- and y-labels to a whole figure, analogous to `.FigureBase.suptitle` using the new `.FigureBase.supxlabel` and `.FigureBase.supylabel` methods."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-17.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-17.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-17.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:654
msgid "Shared-axes ``subplots`` tick label visibility is now correct for top or left labels"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:656
msgid "When calling ``subplots(..., sharex=True, sharey=True)``, Matplotlib automatically hides x tick labels for Axes not in the first column and y tick labels for Axes not in the last row. This behavior is incorrect if rcParams specify that Axes should be labeled on the top (``rcParams[\"xtick.labeltop\"] = True``) or on the right (``rcParams[\"ytick.labelright\"] = True``)."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:662
msgid "Cases such as the following are now handled correctly (adjusting visibility as needed on the first row and last column of Axes):"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:14
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-18.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-18.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-18.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:676
msgid "An iterable object with labels can be passed to `.Axes.plot`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:678
msgid "When plotting multiple datasets by passing 2D data as *y* value to `~.Axes.plot`, labels for the datasets can be passed as a list, the length matching the number of columns in *y*."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:16
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-19.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-19.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-19.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:696
msgid "Fonts and Text"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:699
msgid "Text transform can rotate text direction"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:701
msgid "The new `.Text` parameter ``transform_rotates_text`` now sets whether rotations of the transform affect the text direction."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:707
msgid "Example of the new *transform_rotates_text* parameter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:710
msgid "``matplotlib.mathtext`` now supports *overset* and *underset* LaTeX symbols"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:712
msgid "`.mathtext` now supports *overset* and *underset*, called as ``\\overset{annotation}{body}`` or ``\\underset{annotation}{body}``, where *annotation* is the text \"above\" or \"below\" the *body*."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-20.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-20.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-20.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:722
msgid "*math_fontfamily* parameter to change ``Text`` font family"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:724
msgid "The new *math_fontfamily* parameter may be used to change the family of fonts for each individual text element in a plot. If no parameter is set, the global value :rc:`mathtext.fontset` will be used."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:732
msgid "``TextArea``/``AnchoredText`` support *horizontalalignment*"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:734
msgid "The horizontal alignment of text in a `.TextArea` or `.AnchoredText` may now be specified, which is mostly effective for multiline text:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-21.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-21.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-21.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:756
msgid "PDF supports URLs on ``Text`` artists"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:758
msgid "URLs on `.text.Text` artists (i.e., from `.Artist.set_url`) will now be saved in PDF files."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:763
msgid "rcParams improvements"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:766
msgid "New rcParams for dates: set converter and whether to use interval_multiples"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:768
msgid "The new :rc:`date.converter` allows toggling between `matplotlib.dates.DateConverter` and `matplotlib.dates.ConciseDateConverter` using the strings 'auto' and 'concise' respectively."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:772
msgid "The new :rc:`date.interval_multiples` allows toggling between the dates locator trying to pick ticks at set intervals (i.e., day 1 and 15 of the month), versus evenly spaced ticks that start wherever the timeseries starts:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:19
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-22.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-22.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-22.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:792
msgid "Date formatters now respect *usetex* rcParam"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:794
msgid "The `.AutoDateFormatter` and `.ConciseDateFormatter` now respect :rc:`text.usetex`, and will thus use fonts consistent with TeX rendering of the default (non-date) formatter. TeX rendering may also be enabled/disabled by passing the *usetex* parameter when creating the formatter instance."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:799
msgid "In the following plot, both the x-axis (dates) and y-axis (numbers) now use the same (TeX) font:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-23.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-23.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-23.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:819
msgid "Setting *image.cmap* to a ``Colormap``"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:821
msgid "It is now possible to set :rc:`image.cmap` to a `.Colormap` instance, such as a colormap created with the new `~.Colormap.set_extremes` above. (This can only be done from Python code, not from the :file:`matplotlibrc` file.)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:826
msgid "Tick and tick label colors can be set independently using rcParams"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:828
msgid "Previously, :rc:`xtick.color` defined both the tick color and the label color. The label color can now be set independently using :rc:`xtick.labelcolor`. It defaults to ``'inherit'`` which will take the value from :rc:`xtick.color`. The same holds for ``ytick.[label]color``. For instance, to set the ticks to light grey and the tick labels to black, one can use the following code in a script::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:841
msgid "Or by adding the following lines to the :ref:`matplotlibrc <customizing-with-matplotlibrc-files>` file, or a Matplotlib style file:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:853
msgid "3D Axes improvements"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:856
msgid "Errorbar method in 3D Axes"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:858
msgid "The errorbar function `.Axes.errorbar` is ported into the 3D Axes framework in its entirety, supporting features such as custom styling for error lines and cap marks, control over errorbar spacing, upper and lower limit marks."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:866
msgid "Stem plots in 3D Axes"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:868
msgid "Stem plots are now supported on 3D Axes. Much like 2D stems, `~.axes3d.Axes3D.stem3D` supports plotting the stems in various orientations:"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-24.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-24.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-24.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:888
msgid "See also the :doc:`/gallery/mplot3d/stem3d_demo` demo."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:891
msgid "3D Collection properties are now modifiable"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:893
msgid "Previously, properties of a 3D Collection that were used for 3D effects (e.g., colors were modified to produce depth shading) could not be changed after it was created."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:897
msgid "Now it is possible to modify all properties of 3D Collections at any time."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:900
msgid "Panning in 3D Axes"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:902
msgid "Click and drag with the middle mouse button to pan 3D Axes."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:906
msgid "Interactive tool improvements"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:909
msgid "New ``RangeSlider`` widget"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:911
msgid "`.widgets.RangeSlider` allows for creating a slider that defines a range rather than a single value."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-4-0-25.py>`__, `png <../../users/prev_whats_new/whats_new_3-4-0-25.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-4-0-25.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:924
msgid "Sliders can now snap to arbitrary values"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:926
msgid "The `~matplotlib.widgets.Slider` UI widget now accepts arrays for *valstep*. This generalizes the previous behavior by allowing the slider to snap to arbitrary values."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:931
msgid "Pausing and Resuming Animations"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:933
msgid "The `.animation.Animation.pause` and `.animation.Animation.resume` methods allow you to pause and resume animations. These methods can be used as callbacks for event listeners on UI elements so that your plots can have some playback control UI."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:940
msgid "Sphinx extensions"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:943
msgid "``plot_directive`` *caption* option"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:945
msgid "Captions were previously supported when using the ``plot_directive`` directive with an external source file by specifying content::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:952
msgid "The ``:caption:`` option allows specifying the caption for both external::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:957
msgid "and inline plots::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:966
msgid "Backend-specific improvements"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:969
msgid "Consecutive rasterized draws now merged"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:971
msgid "Elements of a vector output can be individually set to rasterized, using the *rasterized* keyword argument, or `~.artist.Artist.set_rasterized()`. This can be useful to reduce file sizes. For figures with multiple raster elements they are now automatically merged into a smaller number of bitmaps where this will not effect the visual output. For cases with many elements this can result in significantly smaller file sizes."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:978
msgid "To ensure this happens do not place vector elements between raster ones."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:980
msgid "To inhibit this merging set ``Figure.suppressComposite`` to True."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:983
msgid "Support raw/rgba frame format in ``FFMpegFileWriter``"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:985
msgid "When using `.FFMpegFileWriter`, the  *frame_format* may now be set to ``\"raw\"`` or ``\"rgba\"``, which may be slightly faster than an image format, as no encoding/decoding need take place between Matplotlib and FFmpeg."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:990
msgid "nbAgg/WebAgg support middle-click and double-click"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:992
msgid "Double click events are now supported by the nbAgg and WebAgg backends. Formerly, WebAgg would report middle-click events as right clicks, but now reports the correct button type."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:997
msgid "nbAgg support binary communication"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:999
msgid "If the web browser and notebook support binary websockets, nbAgg will now use them for slightly improved transfer of figure display."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1003
msgid "Indexed color for PNG images in PDF files when possible"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1005
msgid "When PNG images have 256 colors or fewer, they are converted to indexed color before saving them in a PDF. This can result in a significant reduction in file size in some cases. This is particularly true for raster data that uses a colormap but no interpolation, such as Healpy mollview plots. Currently, this is only done for RGB images."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1012
msgid "Improved font subsettings in PDF/PS"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1014
msgid "Font subsetting in PDF and PostScript has been re-written from the embedded ``ttconv`` C code to Python. Some composite characters and outlines may have changed slightly. This fixes ttc subsetting in PDF, and adds support for subsetting of type 3 OTF fonts, resulting in smaller files (much smaller when using CJK fonts), and avoids running into issues with type 42 embedding and certain PDF readers such as Acrobat Reader."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1022
msgid "Kerning added to strings in PDFs"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1024
msgid "As with text produced in the Agg backend (see :ref:`the previous what's new entry <whats-new-3-2-0-kerning>` for examples), PDFs now include kerning in text strings."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1029
msgid "Fully-fractional HiDPI in QtAgg"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1031
msgid "Fully-fractional HiDPI (that is, HiDPI ratios that are not whole integers) was added in Qt 5.14, and is now supported by the QtAgg backend when using this version of Qt or newer."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1036
msgid "wxAgg supports fullscreen toggle"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.4.0.rst:1038
msgid "The wxAgg backend supports toggling fullscreen using the :kbd:`f` shortcut, or the manager function `.FigureManagerBase.full_screen_toggle`."
msgstr ""

