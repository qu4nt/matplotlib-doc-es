msgid ""
msgstr ""
"Project-Id-Version: matplotlib\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: 2022-03-02 01:35\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: matplotlib\n"
"X-Crowdin-Project-ID: 502106\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[qu4nt.matplotlib-doc-es] main/doc/en/users/prev_whats_new/whats_new_3.1.0.po\n"
"X-Crowdin-File-ID: 3464\n"
"Language: es_ES\n"

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:4
msgid "What's new in Matplotlib 3.1 (May 18, 2019)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:6
msgid "For a list of all of the issues and pull requests since the last revision, see the :ref:`github-stats`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:10
msgid "Table of Contents"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:16
msgid "New Features"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:19
msgid "`~.dates.ConciseDateFormatter`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:21
msgid "The automatic date formatter used by default can be quite verbose.  A new formatter can be accessed that tries to make the tick labels appropriately concise."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-1-0-1.py>`__, `png <../../users/prev_whats_new/whats_new_3-1-0-1.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-1-0-1.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:58
msgid "Secondary x/y Axis support"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:60
msgid "A new method provides the ability to add a second axis to an existing axes via `.Axes.secondary_xaxis` and `.Axes.secondary_yaxis`.  See :doc:`/gallery/subplots_axes_and_figures/secondary_axis` for examples."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-1-0-2.py>`__, `png <../../users/prev_whats_new/whats_new_3-1-0-2.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-1-0-2.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:74
msgid "`~.scale.FuncScale` for arbitrary axes scales"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:76
msgid "A new `~.scale.FuncScale` class was added (and `~.scale.FuncTransform`) to allow the user to have arbitrary scale transformations without having to write a new subclass of `~.scale.ScaleBase`.  This can be accessed by::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:82
msgid "where ``forward`` and ``inverse`` are callables that return the scale transform and its inverse.  See the last example in :doc:`/gallery/scales/scales`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:88
msgid "Legend for scatter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:90
msgid "A new method for creating legends for scatter plots has been introduced.  Previously, in order to obtain a legend for a :meth:`~.axes.Axes.scatter` plot, one could either plot several scatters, each with an individual label, or create proxy artists to show in the legend manually.  Now, :class:`~.collections.PathCollection` provides a method :meth:`~.collections.PathCollection.legend_elements` to obtain the handles and labels for a scatter plot in an automated way. This makes creating a legend for a scatter plot as easy as"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-1-0-3.py>`__, `png <../../users/prev_whats_new/whats_new_3-1-0-3.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-1-0-3.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:105
msgid "An example can be found in :ref:`automatedlegendcreation`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:109
msgid "Matplotlib no longer requires framework app build on MacOSX backend"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:111
msgid "Previous versions of matplotlib required a Framework build of python to work. The app type was updated to no longer require this, so the MacOSX backend should work with non-framework python."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:116
msgid "This also adds support for the MacOSX backend for PyPy3."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:120
msgid "Figure, FigureCanvas, and Backends"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:123
msgid "Figure.frameon is now a direct proxy for the Figure patch visibility state"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:124
msgid "Accessing ``Figure.frameon`` (including via ``get_frameon`` and ``set_frameon`` now directly forwards to the visibility of the underlying Rectangle artist (``Figure.patch.get_frameon``, ``Figure.patch.set_frameon``)."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:130
msgid "*pil_kwargs* argument added to savefig"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:132
msgid "Matplotlib uses Pillow to handle saving to the JPEG and TIFF formats.  The `~.Figure.savefig()` function gained a *pil_kwargs* keyword argument, which can be used to forward arguments to Pillow's `PIL.Image.Image.save`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:136
msgid "The *pil_kwargs* argument can also be used when saving to PNG.  In that case, Matplotlib also uses Pillow's `PIL.Image.Image.save` instead of going through its own builtin PNG support."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:142
msgid "Add ``inaxes`` method to `.FigureCanvasBase`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:144
msgid "The `.FigureCanvasBase` class has now an `~.FigureCanvasBase.inaxes` method to check whether a point is in an axes and returns the topmost axes, else None."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:149
msgid "cairo backend defaults to pycairo instead of cairocffi"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:151
msgid "This leads to faster import/runtime performance in some cases. The backend will fall back to cairocffi in case pycairo isn't available."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:156
msgid "Axes and Artists"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:159
msgid "axes_grid1 and axisartist Axes no longer draw spines twice"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:161
msgid "Previously, spines of `.axes_grid1` and `.axisartist` Axes would be drawn twice, leading to a \"bold\" appearance.  This is no longer the case."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:166
msgid "Return type of ArtistInspector.get_aliases changed"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:167
msgid "`.ArtistInspector.get_aliases` previously returned the set of aliases as ``{fullname: {alias1: None, alias2: None, ...}}``.  The dict-to-None mapping was used to simulate a set in earlier versions of Python.  It has now been replaced by a set, i.e. ``{fullname: {alias1, alias2, ...}}``."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:172
msgid "This value is also stored in ``ArtistInspector.aliasd``, which has likewise changed."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:177
msgid "`.ConnectionPatch` accepts arbitrary transforms"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:179
msgid "Alternatively to strings like ``\"data\"`` or ``\"axes fraction\"``, `.ConnectionPatch` now accepts any `~matplotlib.transforms.Transform` as input for the *coordsA* and *coordsB* arguments. This allows to draw lines between points defined in different user defined coordinate systems. Also see the :doc:`Connect Simple01 example </gallery/userdemo/connect_simple01>`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:187
msgid "mplot3d Line3D now allows {set,get}_data_3d"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:189
msgid "Lines created with the 3d projection in mplot3d can now access the data using `~.mplot3d.art3d.Line3D.get_data_3d()` which returns a tuple of array_likes containing the (x, y, z) data. The equivalent `~.mplot3d.art3d.Line3D.set_data_3d` can be used to modify the data of an existing Line3D."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:197
msgid "``Axes3D.voxels`` now shades the resulting voxels"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:199
msgid "The `.Axes3D.voxels` method now takes a *shade* parameter that defaults to `True`. This shades faces based on their orientation, behaving just like the matching parameters to :meth:`~mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf` and :meth:`~mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d`.  The plot below shows how this affects the output."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:7
msgid "(`Source code <../../users/prev_whats_new/whats_new_3-1-0-4.py>`__, `png <../../users/prev_whats_new/whats_new_3-1-0-4.png>`__, `pdf <../../users/prev_whats_new/whats_new_3-1-0-4.pdf>`__)"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:239
msgid "Axis and Ticks"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:242
msgid "Added `.Axis.get_inverted` and `.Axis.set_inverted`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:243
msgid "The `.Axis.get_inverted` and `.Axis.set_inverted` methods query and set whether the axis uses \"inverted\" orientation (i.e. increasing to the left for the x-axis and to the bottom for the y-axis)."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:247
msgid "They perform tasks similar to `.Axes.xaxis_inverted`, `.Axes.yaxis_inverted`, `.Axes.invert_xaxis`, and `.Axes.invert_yaxis`, with the specific difference that `.Axis.set_inverted` makes it easier to set the inversion of an axis regardless of whether it had previously been inverted before."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:253
msgid "Adjust default minor tick spacing"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:255
msgid "Default minor tick spacing was changed from 0.625 to 0.5 for major ticks spaced 2.5 units apart."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:260
msgid "`.EngFormatter` now accepts *usetex*, *useMathText* as keyword only arguments"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:262
msgid "A public API has been added to `.EngFormatter` to control how the numbers in the ticklabels will be rendered. By default, *useMathText* evaluates to :rc:`axes.formatter.use_mathtext'` and *usetex* evaluates to :rc:`'text.usetex'`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:267
msgid "If either is `True` then the numbers will be encapsulated by ``$`` signs.  When using ``TeX`` this implies that the numbers will be shown in TeX's math font. When using mathtext, the ``$`` signs around numbers will ensure Unicode rendering (as implied by mathtext). This will make sure that the minus signs in the ticks are rendered as the Unicode minus (U+2212) when using mathtext (without relying on the `~.Formatter.fix_minus` method)."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:278
msgid "Animation and Interactivity"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:281
msgid "Support for forward/backward mouse buttons"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:283
msgid "Figure managers now support a ``button_press`` event for mouse buttons, similar to the ``key_press`` events. This allows binding actions to mouse buttons (see `.MouseButton`) The first application of this mechanism is support of forward/backward mouse buttons in figures created with the Qt5 backend."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:291
msgid "*progress_callback* argument to `~.Animation.save()`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:293
msgid "The method `.Animation.save` gained an optional *progress_callback* argument to notify the saving progress."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:298
msgid "Add ``cache_frame_data`` keyword-only argument into `.animation.FuncAnimation`"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:300
msgid "`.matplotlib.animation.FuncAnimation` has been caching frame data by default; however, this caching is not ideal in certain cases e.g. When `.FuncAnimation` needs to be only drawn(not saved) interactively and memory required by frame data is quite large. By adding *cache_frame_data* keyword-only argument, users can now disable this caching; thereby, this new argument provides a fix for issue :ghissue:`8528`."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:310
msgid "Endless Looping GIFs with PillowWriter"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:312
msgid "We acknowledge that most people want to watch a GIF more than once. Saving an animation as a GIF with PillowWriter now produces an endless looping GIF."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:318
msgid "Adjusted `.matplotlib.widgets.Slider` to have vertical orientation"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:320
msgid "The :class:`matplotlib.widgets.Slider` widget now takes an optional argument *orientation* which indicates the direction (``'horizontal'`` or ``'vertical'``) that the slider should take."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:325
msgid "Improved formatting of image values under cursor when a colorbar is present"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:327
msgid "When a colorbar is present, its formatter is now used to format the image values under the mouse cursor in the status bar.  For example, for an image displaying the values 10,000 and 10,001, the statusbar will now (using default settings) display the values as ``10000`` and ``10001``), whereas both values were previously displayed as ``1e+04``."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:334
msgid "MouseEvent button attribute is now an IntEnum"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:336
msgid "The ``button`` attribute of `~.MouseEvent` instances can take the values None, 1 (left button), 2 (middle button), 3 (right button), \"up\" (scroll), and \"down\" (scroll).  For better legibility, the 1, 2, and 3 values are now represented using the `enum.IntEnum` class `matplotlib.backend_bases.MouseButton`, with the values `.MouseButton.LEFT` (``== 1``), `.MouseButton.MIDDLE` (``== 2``), and `.MouseButton.RIGHT` (``== 3``)."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:345
msgid "Configuration, Install, and Development"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:348
msgid "The MATPLOTLIBRC environment variable can now point to any \"file\" path"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:349
msgid "This includes device files; in particular, on Unix systems, one can set ``MATPLOTLIBRC`` to ``/dev/null`` to ignore the user's matplotlibrc file and fall back to Matplotlib's defaults."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:353
msgid "As a reminder, if ``MATPLOTLIBRC`` points to a directory, Matplotlib will try to load the matplotlibrc file from ``$MATPLOTLIBRC/matplotlibrc``."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:358
msgid "Allow LaTeX code ``pgf.preamble`` and ``text.latex.preamble`` in MATPLOTLIBRC file"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:360
msgid "Previously, the rc file keys :rc:`pgf.preamble` and :rc:`text.latex.preamble` were parsed using commas as separators. This would break valid LaTeX code, such as::"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:366
msgid "The parsing has been modified to pass the complete line to the LaTeX system, keeping all commas. Passing a list of strings from within a Python script still works as it used to."
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:373
msgid "New logging API"
msgstr ""

#: ../../users/prev_whats_new/whats_new_3.1.0.rst:375
msgid "`matplotlib.set_loglevel` / `.pyplot.set_loglevel` can be called to display more (or less) detailed logging output."
msgstr ""

