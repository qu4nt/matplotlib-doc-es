# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../tutorials/intermediate/imshow_extent.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_tutorials_intermediate_imshow_extent.py>` to download "
"the full example code"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:22
msgid "*origin* and *extent* in `~.Axes.imshow`"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:24
msgid ""
":meth:`~.Axes.imshow` allows you to render an image (either a 2D array "
"which will be color-mapped (based on *norm* and *cmap*) or a 3D RGB(A) "
"array which will be used as-is) to a rectangular region in data space.  "
"The orientation of the image in the final rendering is controlled by the "
"*origin* and *extent* keyword arguments (and attributes on the resulting "
"`.AxesImage` instance) and the data limits of the axes."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:31
msgid ""
"The *extent* keyword arguments controls the bounding box in data "
"coordinates that the image will fill specified as ``(left, right, bottom,"
" top)`` in **data coordinates**, the *origin* keyword argument controls "
"how the image fills that bounding box, and the orientation in the final "
"rendered image is also affected by the axes limits."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:37
msgid ""
"Most of the code below is used for adding labels and informative text to "
"the plots. The described effects of *origin* and *extent* can be seen in "
"the plots without the need to follow all code details."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:41
msgid ""
"For a quick understanding, you may want to skip the code details below "
"and directly continue with the discussion of the results."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:197
msgid "Default extent"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:199
msgid "First, let's have a look at the default ``extent=None``"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:219
msgid "Out:"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:230
msgid ""
"Generally, for an array of shape (M, N), the first index runs along the "
"vertical, the second index runs along the horizontal. The pixel centers "
"are at integer positions ranging from 0 to ``N' = N - 1`` horizontally "
"and from 0 to ``M' = M - 1`` vertically. *origin* determines how the data"
" is filled in the bounding box."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:236
msgid "For ``origin='lower'``:"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:238
msgid "[0, 0] is at (left, bottom)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:239
msgid "[M', 0] is at (left, top)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:240
msgid "[0, N'] is at (right, bottom)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:241
msgid "[M', N'] is at (right, top)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:243
msgid "``origin='upper'`` reverses the vertical axes direction and filling:"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:245
msgid "[0, 0] is at (left, top)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:246
msgid "[M', 0] is at (left, bottom)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:247
msgid "[0, N'] is at (right, top)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:248
msgid "[M', N'] is at (right, bottom)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:250
msgid ""
"In summary, the position of the [0, 0] index as well as the extent are "
"influenced by *origin*:"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:254
msgid "origin"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:254
msgid "[0, 0] position"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:254
msgid "extent"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:256
msgid "upper"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:256
msgid "top left"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:256
msgid "``(-0.5, numcols-0.5, numrows-0.5, -0.5)``"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:257
msgid "lower"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:257
msgid "bottom left"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:257
msgid "``(-0.5, numcols-0.5, -0.5, numrows-0.5)``"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:260
msgid ""
"The default value of *origin* is set by :rc:`image.origin` which defaults"
" to ``'upper'`` to match the matrix indexing conventions in math and "
"computer graphics image indexing conventions."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:266
msgid "Explicit extent"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:268
msgid ""
"By setting *extent* we define the coordinates of the image area. The "
"underlying image data is interpolated/resampled to fill that area."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:271
msgid ""
"If the axes is set to autoscale, then the view limits of the axes are set"
" to match the *extent* which ensures that the coordinate set by ``(left, "
"bottom)`` is at the bottom left of the axes!  However, this may invert "
"the axis so they do not increase in the 'natural' direction."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:307
msgid "Explicit extent and axes limits"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:309
msgid ""
"If we fix the axes limits by explicitly setting `~.axes.Axes.set_xlim` / "
"`~.axes.Axes.set_ylim`, we force a certain size and orientation of the "
"axes. This can decouple the 'left-right' and 'top-bottom' sense of the "
"image from the orientation on the screen."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:314
msgid ""
"In the example below we have chosen the limits slightly larger than the "
"extent (note the white areas within the Axes)."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:317
msgid ""
"While we keep the extents as in the examples before, the coordinate (0, "
"0) is now explicitly put at the bottom left and values increase to up and"
" to the right (from the viewer's point of view). We can see that:"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:322
msgid ""
"The coordinate ``(left, bottom)`` anchors the image which then fills the "
"box going towards the ``(right, top)`` point in data space."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:324
msgid "The first column is always closest to the 'left'."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:325
msgid "*origin* controls if the first row is closest to 'top' or 'bottom'."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:326
msgid "The image may be inverted along either direction."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:327
msgid ""
"The 'left-right' and 'top-bottom' sense of the image may be uncoupled "
"from the orientation on the screen."
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:354
msgid "**Total running time of the script:** ( 0 minutes  3.394 seconds)"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:369
msgid ""
":download:`Download Python source code: imshow_extent.py "
"<imshow_extent.py>`"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:375
msgid ""
":download:`Download Jupyter notebook: imshow_extent.ipynb "
"<imshow_extent.ipynb>`"
msgstr ""

#: ../../tutorials/intermediate/imshow_extent.rst:382
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

