# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.pyplot.barbs.rst:2
msgid "matplotlib.pyplot.barbs"
msgstr ""

#: matplotlib.pyplot.barbs:2 of
msgid "Plot a 2D field of barbs."
msgstr ""

#: matplotlib.pyplot.barbs:4 of
msgid "Call signature::"
msgstr ""

#: matplotlib.pyplot.barbs:8 of
msgid ""
"Where *X*, *Y* define the barb locations, *U*, *V* define the barb "
"directions, and *C* optionally sets the color."
msgstr ""

#: matplotlib.pyplot.barbs:11 of
msgid ""
"All arguments may be 1D or 2D. *U*, *V*, *C* may be masked arrays, but "
"masked *X*, *Y* are not supported at present."
msgstr ""

#: matplotlib.pyplot.barbs:14 of
msgid ""
"Barbs are traditionally used in meteorology as a way to plot the speed "
"and direction of wind observations, but can technically be used to plot "
"any two dimensional vector quantity.  As opposed to arrows, which give "
"vector magnitude by the length of the arrow, the barbs give more "
"quantitative information about the vector magnitude by putting slanted "
"lines or a triangle for various increments in magnitude, as show "
"schematically below::"
msgstr ""

#: matplotlib.pyplot.barbs:28 of
msgid ""
"The largest increment is given by a triangle (or \"flag\"). After those "
"come full lines (barbs). The smallest increment is a half line.  There is"
" only, of course, ever at most 1 half line.  If the magnitude is small "
"and only needs a single half-line and no full lines or triangles, the "
"half-line is offset from the end of the barb so that it can be easily "
"distinguished from barbs with a single full line.  The magnitude for the "
"barb shown above would nominally be 65, using the standard increments of "
"50, 10, and 5."
msgstr ""

#: matplotlib.pyplot.barbs:37 of
msgid "See also https://en.wikipedia.org/wiki/Wind_barb."
msgstr ""

#: matplotlib.pyplot.barbs of
msgid "Parameters"
msgstr ""

#: matplotlib.pyplot.barbs:50 of
msgid "**X, Y**"
msgstr ""

#: of
msgid "1D or 2D array-like, optional"
msgstr ""

#: matplotlib.pyplot.barbs:42 of
msgid ""
"The x and y coordinates of the barb locations. See *pivot* for how the "
"barbs are drawn to the x, y positions."
msgstr ""

#: matplotlib.pyplot.barbs:45 of
msgid ""
"If not given, they will be generated as a uniform integer meshgrid based "
"on the dimensions of *U* and *V*."
msgstr ""

#: matplotlib.pyplot.barbs:48 of
msgid ""
"If *X* and *Y* are 1D but *U*, *V* are 2D, *X*, *Y* are expanded to 2D "
"using ``X, Y = np.meshgrid(X, Y)``. In this case ``len(X)`` and "
"``len(Y)`` must match the column and row dimensions of *U* and *V*."
msgstr ""

#: matplotlib.pyplot.barbs:53 of
msgid "**U, V**"
msgstr ""

#: of
msgid "1D or 2D array-like"
msgstr ""

#: matplotlib.pyplot.barbs:53 of
msgid "The x and y components of the barb shaft."
msgstr ""

#: matplotlib.pyplot.barbs:60 of
msgid "**C**"
msgstr ""

#: matplotlib.pyplot.barbs:56 of
msgid ""
"Numeric data that defines the barb colors by colormapping via *norm* and "
"*cmap*."
msgstr ""

#: matplotlib.pyplot.barbs:59 of
msgid ""
"This does not support explicit colors. If you want to set colors "
"directly, use *barbcolor* instead."
msgstr ""

#: matplotlib.pyplot.barbs:64 of
msgid "**length**"
msgstr ""

#: of
msgid "float, default: 7"
msgstr ""

#: matplotlib.pyplot.barbs:63 of
msgid ""
"Length of the barb in points; the other parts of the barb are scaled "
"against this."
msgstr ""

#: matplotlib.pyplot.barbs:69 of
msgid "**pivot**"
msgstr ""

#: of
msgid "{'tip', 'middle'} or float, default: 'tip'"
msgstr ""

#: matplotlib.pyplot.barbs:67 of
msgid ""
"The part of the arrow that is anchored to the *X*, *Y* grid. The barb "
"rotates about this point. This can also be a number, which shifts the "
"start of the barb that many points away from grid point."
msgstr ""

#: matplotlib.pyplot.barbs:74 of
msgid "**barbcolor**"
msgstr ""

#: of
msgid "color or color sequence"
msgstr ""

#: matplotlib.pyplot.barbs:72 of
msgid ""
"The color of all parts of the barb except for the flags.  This parameter "
"is analogous to the *edgecolor* parameter for polygons, which can be used"
" instead. However this parameter will override facecolor."
msgstr ""

#: matplotlib.pyplot.barbs:81 of
msgid "**flagcolor**"
msgstr ""

#: matplotlib.pyplot.barbs:77 of
msgid ""
"The color of any flags on the barb.  This parameter is analogous to the "
"*facecolor* parameter for polygons, which can be used instead. However, "
"this parameter will override facecolor.  If this is not set (and *C* has "
"not either) then *flagcolor* will be set to match *barbcolor* so that the"
" barb has a uniform color. If *C* has been set, *flagcolor* has no "
"effect."
msgstr ""

#: matplotlib.pyplot.barbs:91 of
msgid "**sizes**"
msgstr ""

#: of
msgid "dict, optional"
msgstr ""

#: matplotlib.pyplot.barbs:84 of
msgid ""
"A dictionary of coefficients specifying the ratio of a given feature to "
"the length of the barb. Only those values one wishes to override need to "
"be included.  These features include:"
msgstr ""

#: matplotlib.pyplot.barbs:88 of
msgid "'spacing' - space between features (flags, full/half barbs)"
msgstr ""

#: matplotlib.pyplot.barbs:89 of
msgid "'height' - height (distance from shaft to top) of a flag or full barb"
msgstr ""

#: matplotlib.pyplot.barbs:90 of
msgid "'width' - width of a flag, twice the width of a full barb"
msgstr ""

#: matplotlib.pyplot.barbs:91 of
msgid "'emptybarb' - radius of the circle used for low magnitudes"
msgstr ""

#: matplotlib.pyplot.barbs:95 of
msgid "**fill_empty**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.pyplot.barbs:94 of
msgid ""
"Whether the empty barbs (circles) that are drawn should be filled with "
"the flag color.  If they are not filled, the center is transparent."
msgstr ""

#: matplotlib.pyplot.barbs:101 of
msgid "**rounding**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: matplotlib.pyplot.barbs:98 of
msgid ""
"Whether the vector magnitude should be rounded when allocating barb "
"components.  If True, the magnitude is rounded to the nearest multiple of"
" the half-barb increment.  If False, the magnitude is simply truncated to"
" the next lowest multiple."
msgstr ""

#: matplotlib.pyplot.barbs:110 of
msgid "**barb_increments**"
msgstr ""

#: matplotlib.pyplot.barbs:104 of
msgid ""
"A dictionary of increments specifying values to associate with different "
"parts of the barb. Only those values one wishes to override need to be "
"included."
msgstr ""

#: matplotlib.pyplot.barbs:108 of
msgid "'half' - half barbs (Default is 5)"
msgstr ""

#: matplotlib.pyplot.barbs:109 of
msgid "'full' - full barbs (Default is 10)"
msgstr ""

#: matplotlib.pyplot.barbs:110 of
msgid "'flag' - flags (default is 50)"
msgstr ""

#: matplotlib.pyplot.barbs:119 of
msgid "**flip_barb**"
msgstr ""

#: of
msgid "bool or array-like of bool, default: False"
msgstr ""

#: matplotlib.pyplot.barbs:113 of
msgid ""
"Whether the lines and flags should point opposite to normal. Normal "
"behavior is for the barbs and lines to point right (comes from wind barbs"
" having these features point towards low pressure in the Northern "
"Hemisphere)."
msgstr ""

#: matplotlib.pyplot.barbs:118 of
msgid ""
"A single value is applied to all barbs. Individual barbs can be flipped "
"by passing a bool array of the same size as *U* and *V*."
msgstr ""

#: matplotlib.pyplot.barbs of
msgid "Returns"
msgstr ""

#: matplotlib.pyplot.barbs:126 of
msgid "**barbs** : `~matplotlib.quiver.Barbs`"
msgstr ""

#: matplotlib.pyplot.barbs:125 of
msgid "Barbs"
msgstr ""

#: matplotlib.pyplot.barbs of
msgid "Other Parameters"
msgstr ""

#: matplotlib.pyplot.barbs:132 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: matplotlib.pyplot.barbs:131 of
msgid ""
"If given, all parameters also accept a string ``s``, which is interpreted"
" as ``data[s]`` (unless this raises an exception)."
msgstr ""

#: matplotlib.pyplot.barbs:193 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.pyplot.barbs:135 of
msgid ""
"The barbs can further be customized using `.PolyCollection` keyword "
"arguments:"
msgstr ""

#: matplotlib.pyplot.barbs:142 of
msgid "Property"
msgstr ""

#: matplotlib.pyplot.barbs:142 of
msgid "Description"
msgstr ""

#: matplotlib.pyplot.barbs:144 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.pyplot.barbs:144 of
msgid ""
"a filter function, which takes a (m, n, 3) float array and a dpi value, "
"and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.pyplot.barbs:145 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ""

#: matplotlib.pyplot.barbs:145 of
msgid "array-like or scalar or None"
msgstr ""

#: matplotlib.pyplot.barbs:146 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.pyplot.barbs:146 matplotlib.pyplot.barbs:152
#: matplotlib.pyplot.barbs:161 matplotlib.pyplot.barbs:173
#: matplotlib.pyplot.barbs:182 of
msgid "bool"
msgstr ""

#: matplotlib.pyplot.barbs:147 of
msgid ""
":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` "
"or aa or antialiaseds"
msgstr ""

#: matplotlib.pyplot.barbs:147 of
msgid "bool or list of bools"
msgstr ""

#: matplotlib.pyplot.barbs:148 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ""

#: matplotlib.pyplot.barbs:148 of
msgid "array-like or None"
msgstr ""

#: matplotlib.pyplot.barbs:149 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ""

#: matplotlib.pyplot.barbs:149 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr ""

#: matplotlib.pyplot.barbs:150 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ""

#: matplotlib.pyplot.barbs:150 of
msgid "(vmin: float, vmax: float)"
msgstr ""

#: matplotlib.pyplot.barbs:151 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.pyplot.barbs:151 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.pyplot.barbs:152 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.pyplot.barbs:153 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.pyplot.barbs:153 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.pyplot.barbs:154 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ""

#: matplotlib.pyplot.barbs:154 of
msgid "`.Colormap` or str or None"
msgstr ""

#: matplotlib.pyplot.barbs:155 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ""

#: matplotlib.pyplot.barbs:155 of
msgid "color or list of rgba tuples"
msgstr ""

#: matplotlib.pyplot.barbs:156 of
msgid ""
":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec"
" or edgecolors"
msgstr ""

#: matplotlib.pyplot.barbs:156 of
msgid "color or list of colors or 'face'"
msgstr ""

#: matplotlib.pyplot.barbs:157 of
msgid ""
":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or "
"facecolors or fc"
msgstr ""

#: matplotlib.pyplot.barbs:157 of
msgid "color or list of colors"
msgstr ""

#: matplotlib.pyplot.barbs:158 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.pyplot.barbs:158 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.pyplot.barbs:159 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.pyplot.barbs:159 matplotlib.pyplot.barbs:178 of
msgid "str"
msgstr ""

#: matplotlib.pyplot.barbs:160 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ""

#: matplotlib.pyplot.barbs:160 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr ""

#: matplotlib.pyplot.barbs:161 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.pyplot.barbs:162 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ""

#: matplotlib.pyplot.barbs:162 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr ""

#: matplotlib.pyplot.barbs:163 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.pyplot.barbs:163 of
msgid "object"
msgstr ""

#: matplotlib.pyplot.barbs:164 of
msgid ""
":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or "
"dashes or linestyles or ls"
msgstr ""

#: matplotlib.pyplot.barbs:164 of
msgid "str or tuple or list thereof"
msgstr ""

#: matplotlib.pyplot.barbs:165 of
msgid ""
":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or "
"linewidths or lw"
msgstr ""

#: matplotlib.pyplot.barbs:165 of
msgid "float or list of floats"
msgstr ""

#: matplotlib.pyplot.barbs:166 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ""

#: matplotlib.pyplot.barbs:166 of
msgid "`.Normalize` or None"
msgstr ""

#: matplotlib.pyplot.barbs:167 of
msgid ""
":meth:`offset_transform "
"<matplotlib.collections.Collection.set_offset_transform>`"
msgstr ""

#: matplotlib.pyplot.barbs:167 matplotlib.pyplot.barbs:177 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.pyplot.barbs:168 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ""

#: matplotlib.pyplot.barbs:168 of
msgid "(N, 2) or (2,) array-like"
msgstr ""

#: matplotlib.pyplot.barbs:169 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.pyplot.barbs:169 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.pyplot.barbs:170 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.pyplot.barbs:170 matplotlib.pyplot.barbs:180 of
msgid "list of array-like"
msgstr ""

#: matplotlib.pyplot.barbs:171 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.pyplot.barbs:171 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.pyplot.barbs:172 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ""

#: matplotlib.pyplot.barbs:172 matplotlib.pyplot.barbs:183 of
msgid "float"
msgstr ""

#: matplotlib.pyplot.barbs:173 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.pyplot.barbs:174 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ""

#: matplotlib.pyplot.barbs:174 of
msgid "ndarray or None"
msgstr ""

#: matplotlib.pyplot.barbs:175 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.pyplot.barbs:175 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.pyplot.barbs:176 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.pyplot.barbs:176 of
msgid "bool or None"
msgstr ""

#: matplotlib.pyplot.barbs:177 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.pyplot.barbs:178 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.pyplot.barbs:179 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ""

#: matplotlib.pyplot.barbs:179 of
msgid "list of str or None"
msgstr ""

#: matplotlib.pyplot.barbs:180 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.pyplot.barbs:181 of
msgid ""
":meth:`verts_and_codes "
"<matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ""

#: matplotlib.pyplot.barbs:181 of
msgid "unknown"
msgstr ""

#: matplotlib.pyplot.barbs:182 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.pyplot.barbs:183 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

