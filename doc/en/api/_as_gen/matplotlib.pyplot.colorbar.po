# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.rst:2
msgid "matplotlib.pyplot.colorbar"
msgstr ""

#: matplotlib.pyplot.colorbar:2 of
msgid "Add a colorbar to a plot."
msgstr ""

#: matplotlib.pyplot.colorbar of
msgid "Parameters"
msgstr ""

#: matplotlib.pyplot.colorbar:17 of
msgid "**mappable**"
msgstr ""

#: matplotlib.pyplot.colorbar:8 of
msgid ""
"The `matplotlib.cm.ScalarMappable` (i.e., `~matplotlib.image.AxesImage`, "
"`~matplotlib.contour.ContourSet`, etc.) described by this colorbar. This "
"argument is mandatory for the `.Figure.colorbar` method but optional for "
"the `.pyplot.colorbar` function, which sets the default to the current "
"image."
msgstr ""

#: matplotlib.pyplot.colorbar:14 of
msgid ""
"Note that one can create a `.ScalarMappable` \"on-the-fly\" to generate "
"colorbars not attached to a previously drawn artist, e.g. ::"
msgstr ""

#: matplotlib.pyplot.colorbar:20 of
msgid "**cax** : `~matplotlib.axes.Axes`, optional"
msgstr ""

#: matplotlib.pyplot.colorbar:19 of
msgid "Axes, optional"
msgstr ""

#: matplotlib.pyplot.colorbar:20 of
msgid "Axes into which the colorbar will be drawn."
msgstr ""

#: matplotlib.pyplot.colorbar:24 of
msgid "**ax** : `~matplotlib.axes.Axes`, list of Axes, optional"
msgstr ""

#: matplotlib.pyplot.colorbar:23 of
msgid "Axes, list of Axes, optional"
msgstr ""

#: matplotlib.pyplot.colorbar:23 of
msgid ""
"One or more parent axes from which space for a new colorbar axes will be "
"stolen, if *cax* is None.  This has no effect if *cax* is set."
msgstr ""

#: matplotlib.pyplot.colorbar:29 of
msgid "**use_gridspec**"
msgstr ""

#: of
msgid "bool, optional"
msgstr ""

#: matplotlib.pyplot.colorbar:27 of
msgid ""
"If *cax* is ``None``, a new *cax* is created as an instance of Axes.  If "
"*ax* is an instance of Subplot and *use_gridspec* is ``True``, *cax* is "
"created as an instance of Subplot using the :mod:`.gridspec` module."
msgstr ""

#: matplotlib.pyplot.colorbar of
msgid "Returns"
msgstr ""

#: matplotlib.pyplot.colorbar:41 of
msgid "**colorbar** : `~matplotlib.colorbar.Colorbar`"
msgstr ""

#: matplotlib.pyplot.colorbar:40 of
msgid "Colorbar"
msgstr ""

#: matplotlib.pyplot.colorbar:44 of
msgid "Notes"
msgstr ""

#: matplotlib.pyplot.colorbar:45 of
msgid "Additional keyword arguments are of two kinds:"
msgstr ""

#: matplotlib.pyplot.colorbar:47 of
msgid "axes properties:"
msgstr ""

#: matplotlib.pyplot.colorbar:54 of
msgid "location"
msgstr ""

#: of
msgid "None or {'left', 'right', 'top', 'bottom'}"
msgstr ""

#: matplotlib.pyplot.colorbar:50 of
msgid ""
"The location, relative to the parent axes, where the colorbar axes is "
"created.  It also determines the *orientation* of the colorbar (colorbars"
" on the left and right are vertical, colorbars at the top and bottom are "
"horizontal).  If None, the location will come from the *orientation* if "
"it is set (vertical colorbars on the right, horizontal ones at the "
"bottom), or default to 'right' if *orientation* is unset."
msgstr ""

#: matplotlib.pyplot.colorbar:58 of
msgid "orientation"
msgstr ""

#: of
msgid "None or {'vertical', 'horizontal'}"
msgstr ""

#: matplotlib.pyplot.colorbar:57 of
msgid ""
"The orientation of the colorbar.  It is preferable to set the *location* "
"of the colorbar, as that also determines the *orientation*; passing "
"incompatible values for *location* and *orientation* raises an exception."
msgstr ""

#: matplotlib.pyplot.colorbar:60 of
msgid "fraction"
msgstr ""

#: of
msgid "float, default: 0.15"
msgstr ""

#: matplotlib.pyplot.colorbar:61 of
msgid "Fraction of original axes to use for colorbar."
msgstr ""

#: matplotlib.pyplot.colorbar:62 of
msgid "shrink"
msgstr ""

#: of
msgid "float, default: 1.0"
msgstr ""

#: matplotlib.pyplot.colorbar:63 of
msgid "Fraction by which to multiply the size of the colorbar."
msgstr ""

#: matplotlib.pyplot.colorbar:65 of
msgid "aspect"
msgstr ""

#: of
msgid "float, default: 20"
msgstr ""

#: matplotlib.pyplot.colorbar:65 of
msgid "Ratio of long to short dimensions."
msgstr ""

#: matplotlib.pyplot.colorbar:67 of
msgid "pad"
msgstr ""

#: of
msgid "float, default: 0.05 if vertical, 0.15 if horizontal"
msgstr ""

#: matplotlib.pyplot.colorbar:68 of
msgid "Fraction of original axes between colorbar and new image axes."
msgstr ""

#: matplotlib.pyplot.colorbar:70 of
msgid "anchor"
msgstr ""

#: of
msgid "(float, float), optional"
msgstr ""

#: matplotlib.pyplot.colorbar:70 of
msgid ""
"The anchor point of the colorbar axes. Defaults to (0.0, 0.5) if "
"vertical; (0.5, 1.0) if horizontal."
msgstr ""

#: matplotlib.pyplot.colorbar:75 of
msgid "panchor : (float, float), or *False*, optional"
msgstr ""

#: of
msgid "(float, float), or"
msgstr ""

#: matplotlib.pyplot.colorbar:73 of
msgid ""
"The anchor point of the colorbar parent axes. If *False*, the parent "
"axes' anchor will be unchanged. Defaults to (1.0, 0.5) if vertical; (0.5,"
" 0.0) if horizontal."
msgstr ""

#: matplotlib.pyplot.colorbar:77 of
msgid "colorbar properties:"
msgstr ""

#: matplotlib.pyplot.colorbar:80 matplotlib.pyplot.colorbar:128 of
msgid "Property"
msgstr ""

#: matplotlib.pyplot.colorbar:80 matplotlib.pyplot.colorbar:128 of
msgid "Description"
msgstr ""

#: matplotlib.pyplot.colorbar:82 of
msgid "*extend*"
msgstr ""

#: matplotlib.pyplot.colorbar:82 of
msgid ""
"{'neither', 'both', 'min', 'max'} If not 'neither', make pointed end(s) "
"for out-of- range values.  These are set for a given colormap using the "
"colormap set_under and set_over methods."
msgstr ""

#: matplotlib.pyplot.colorbar:86 of
msgid "*extendfrac*"
msgstr ""

#: matplotlib.pyplot.colorbar:86 of
#, python-format
msgid ""
"{*None*, 'auto', length, lengths} If set to *None*, both the minimum and "
"maximum triangular colorbar extensions with have a length of 5% of the "
"interior colorbar length (this is the default setting). If set to 'auto',"
" makes the triangular colorbar extensions the same lengths as the "
"interior boxes (when *spacing* is set to 'uniform') or the same lengths "
"as the respective adjacent interior boxes (when *spacing* is set to "
"'proportional'). If a scalar, indicates the length of both the minimum "
"and maximum triangular colorbar extensions as a fraction of the interior "
"colorbar length. A two-element sequence of fractions may also be given, "
"indicating the lengths of the minimum and maximum colorbar extensions "
"respectively as a fraction of the interior colorbar length."
msgstr ""

#: matplotlib.pyplot.colorbar:102 of
msgid "*extendrect*"
msgstr ""

#: matplotlib.pyplot.colorbar:102 of
msgid ""
"bool If *False* the minimum and maximum colorbar extensions will be "
"triangular (the default). If *True* the extensions will be rectangular."
msgstr ""

#: matplotlib.pyplot.colorbar:106 of
msgid "*spacing*"
msgstr ""

#: matplotlib.pyplot.colorbar:106 of
msgid ""
"{'uniform', 'proportional'} Uniform spacing gives each discrete color the"
" same space; proportional makes the space proportional to the data "
"interval."
msgstr ""

#: matplotlib.pyplot.colorbar:110 of
msgid "*ticks*"
msgstr ""

#: matplotlib.pyplot.colorbar:110 of
msgid ""
"*None* or list of ticks or Locator If None, ticks are determined "
"automatically from the input."
msgstr ""

#: matplotlib.pyplot.colorbar:113 of
msgid "*format*"
msgstr ""

#: matplotlib.pyplot.colorbar:113 of
#, python-format
msgid ""
"None or str or Formatter If None, `~.ticker.ScalarFormatter` is used. If "
"a format string is given, e.g., '%.3f', that is used. An alternative "
"`~.ticker.Formatter` may be given instead."
msgstr ""

#: matplotlib.pyplot.colorbar:117 of
msgid "*drawedges*"
msgstr ""

#: matplotlib.pyplot.colorbar:117 of
msgid "bool Whether to draw lines at color boundaries."
msgstr ""

#: matplotlib.pyplot.colorbar:119 of
msgid "*label*"
msgstr ""

#: matplotlib.pyplot.colorbar:119 of
msgid "str The label on the colorbar's long axis."
msgstr ""

#: matplotlib.pyplot.colorbar:123 of
msgid ""
"The following will probably be useful only in the context of indexed "
"colors (that is, when the mappable has norm=NoNorm()), or other unusual "
"circumstances."
msgstr ""

#: matplotlib.pyplot.colorbar:130 of
msgid "*boundaries*"
msgstr ""

#: matplotlib.pyplot.colorbar:130 of
msgid "None or a sequence"
msgstr ""

#: matplotlib.pyplot.colorbar:131 of
msgid "*values*"
msgstr ""

#: matplotlib.pyplot.colorbar:131 of
msgid ""
"None or a sequence which must be of length 1 less than the sequence of "
"*boundaries*. For each region delimited by adjacent entries in "
"*boundaries*, the colormapped to the corresponding value in values will "
"be used."
msgstr ""

#: matplotlib.pyplot.colorbar:138 of
msgid ""
"If *mappable* is a `~.contour.ContourSet`, its *extend* kwarg is included"
" automatically."
msgstr ""

#: matplotlib.pyplot.colorbar:141 of
msgid ""
"The *shrink* kwarg provides a simple way to scale the colorbar with "
"respect to the axes. Note that if *cax* is specified, it determines the "
"size of the colorbar and *shrink* and *aspect* kwargs are ignored."
msgstr ""

#: matplotlib.pyplot.colorbar:145 of
msgid ""
"For more precise control, you can manually specify the positions of the "
"axes objects in which the mappable and the colorbar are drawn.  In this "
"case, do not use any of the axes properties kwargs."
msgstr ""

#: matplotlib.pyplot.colorbar:149 of
msgid ""
"It is known that some vector graphics viewers (svg and pdf) renders white"
" gaps between segments of the colorbar.  This is due to bugs in the "
"viewers, not Matplotlib.  As a workaround, the colorbar can be rendered "
"with overlapping segments::"
msgstr ""

#: matplotlib.pyplot.colorbar:158 of
msgid ""
"However this has negative consequences in other circumstances, e.g. with "
"semi-transparent images (alpha < 1) and colorbar extensions; therefore, "
"this workaround is not used by default (see issue #1188)."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.pyplot.colorbar.examples:2
msgid "Examples using ``matplotlib.pyplot.colorbar``"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:10
msgid "Ellipse Collection"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:10
#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:18
msgid ":ref:`sphx_glr_gallery_shapes_and_collections_ellipse_collection.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:29
msgid "Axes Divider"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:29
#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:37
msgid ":ref:`sphx_glr_gallery_axes_grid1_demo_axes_divider.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:48
msgid "Simple Colorbar"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:48
#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:56
msgid ":ref:`sphx_glr_gallery_axes_grid1_simple_colorbar.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:67
msgid "Image tutorial"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:67
#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:75
msgid ":ref:`sphx_glr_tutorials_introductory_images.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:86
msgid "Tight Layout guide"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:86
#: ../../api/_as_gen/matplotlib.pyplot.colorbar.examples:94
msgid ":ref:`sphx_glr_tutorials_intermediate_tight_layout_guide.py`"
msgstr ""

