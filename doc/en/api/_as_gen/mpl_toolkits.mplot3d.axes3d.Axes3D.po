# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/mpl_toolkits.mplot3d.axes3d.Axes3D.rst:2
msgid "mpl\\_toolkits.mplot3d.axes3d.Axes3D"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:1 of
msgid "Bases: :py:class:`matplotlib.axes._axes.Axes`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:2 of
msgid "3D axes object."
msgstr ""

#: matplotlib.axes._axes.Axes.text mpl_toolkits.mplot3d.axes3d.Axes3D
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf
#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw
#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels
#: mpl_toolkits.mplot3d.axes3d.Axes3D.mouse_init
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe
#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscale_on
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscalez_on
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_frame_on
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_proj_type
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xmargin
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ymargin
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf
#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim
#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels
#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_date of
msgid "Parameters"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:29 of
msgid "**fig**"
msgstr ""

#: of
msgid "Figure"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:29 of
msgid "The parent figure."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:32 of
msgid "**rect**"
msgstr ""

#: of
msgid "(float, float, float, float)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:32 of
msgid "The ``(left, bottom, width, height)`` axes position."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:35
#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:16 of
msgid "**azim**"
msgstr ""

#: of
msgid "float, default: -60"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:35 of
msgid "Azimuthal viewing angle."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:38
#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:11 of
msgid "**elev**"
msgstr ""

#: of
msgid "float, default: 30"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:38 of
msgid "Elevation viewing angle."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:41 of
msgid "**sharez**"
msgstr ""

#: of
msgid "Axes3D, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:41 of
msgid "Other axes to share z-limits with."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:44
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_proj_type:21 of
msgid "**proj_type**"
msgstr ""

#: matplotlib.artist.Axes3D.set:39 mpl_toolkits.mplot3d.axes3d.Axes3D:101 of
msgid "{'persp', 'ortho'}"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:44 of
msgid "The projection type, default 'persp'."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:54 of
msgid "**computed_zorder**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:47 of
msgid ""
"If True, the draw order is computed based on the average position of the "
"`.Artist`\\s along the view direction. Set to False if you want to "
"manually control the order in which Artists are drawn on top of each "
"other using their *zorder* attribute. This can be used for fine-tuning if"
" the automatic order does not produce the desired result. Note however, "
"that a manual zorder will only be correct for a limited view angle. If "
"the figure is rotated by the user, it will look wrong from certain "
"angles."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:63 of
msgid "**auto_add_to_figure**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:57 of
msgid ""
"Prior to Matplotlib 3.4 Axes3D would add themselves to their host Figure "
"on init.  Other Axes class do not do this."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:61 of
msgid ""
"This behavior is deprecated in 3.4, the default will change to False in "
"3.5.  The keyword will be undocumented and a non-False value will be an "
"error in 3.6."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:146
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:25
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:53
#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:109
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:34
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:79
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:61
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:48
#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:51
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:49
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale:26
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale:26
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale:26
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:47 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:66 of
msgid "Other optional keyword arguments:"
msgstr ""

#: matplotlib.artist.Axes3D.set:10 matplotlib.axes._axes.Axes.text:36
#: mpl_toolkits.mplot3d.axes3d.Axes3D:72 of
msgid "Property"
msgstr ""

#: matplotlib.artist.Axes3D.set:10 matplotlib.axes._axes.Axes.text:36
#: mpl_toolkits.mplot3d.axes3d.Axes3D:72 of
msgid "Description"
msgstr ""

#: matplotlib.artist.Axes3D.set:12 mpl_toolkits.mplot3d.axes3d.Axes3D:74 of
msgid ":meth:`adjustable <matplotlib.axes.Axes.set_adjustable>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:12 mpl_toolkits.mplot3d.axes3d.Axes3D:74 of
msgid "{'box', 'datalim'}"
msgstr ""

#: matplotlib.artist.Axes3D.set:13 matplotlib.axes._axes.Axes.text:38
#: mpl_toolkits.mplot3d.axes3d.Axes3D:75 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:13 matplotlib.axes._axes.Axes.text:38
#: mpl_toolkits.mplot3d.axes3d.Axes3D:75 of
msgid ""
"a filter function, which takes a (m, n, 3) float array and a dpi value, "
"and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.artist.Axes3D.set:14 matplotlib.axes._axes.Axes.text:39
#: mpl_toolkits.mplot3d.axes3d.Axes3D:76 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:14 matplotlib.axes._axes.Axes.text:39
#: mpl_toolkits.mplot3d.axes3d.Axes3D:76 of
msgid "scalar or None"
msgstr ""

#: matplotlib.artist.Axes3D.set:15 mpl_toolkits.mplot3d.axes3d.Axes3D:77 of
msgid ":meth:`anchor <matplotlib.axes.Axes.set_anchor>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:15 mpl_toolkits.mplot3d.axes3d.Axes3D:77 of
msgid "(float, float) or {'C', 'SW', 'S', 'SE', 'E', 'NE', ...}"
msgstr ""

#: matplotlib.artist.Axes3D.set:16 matplotlib.axes._axes.Axes.text:40
#: mpl_toolkits.mplot3d.axes3d.Axes3D:78 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:16 matplotlib.artist.Axes3D.set:19
#: matplotlib.artist.Axes3D.set:20 matplotlib.artist.Axes3D.set:21
#: matplotlib.artist.Axes3D.set:26 matplotlib.artist.Axes3D.set:30
#: matplotlib.artist.Axes3D.set:32 matplotlib.artist.Axes3D.set:34
#: matplotlib.artist.Axes3D.set:42 matplotlib.artist.Axes3D.set:48
#: matplotlib.axes._axes.Axes.text:40 matplotlib.axes._axes.Axes.text:57
#: matplotlib.axes._axes.Axes.text:62 matplotlib.axes._axes.Axes.text:66
#: matplotlib.axes._axes.Axes.text:73 matplotlib.axes._axes.Axes.text:77
#: matplotlib.axes._axes.Axes.text:78 mpl_toolkits.mplot3d.axes3d.Axes3D:78
#: mpl_toolkits.mplot3d.axes3d.Axes3D:81 mpl_toolkits.mplot3d.axes3d.Axes3D:82
#: mpl_toolkits.mplot3d.axes3d.Axes3D:83 mpl_toolkits.mplot3d.axes3d.Axes3D:88
#: mpl_toolkits.mplot3d.axes3d.Axes3D:92 mpl_toolkits.mplot3d.axes3d.Axes3D:94
#: mpl_toolkits.mplot3d.axes3d.Axes3D:96 mpl_toolkits.mplot3d.axes3d.Axes3D:104
#: mpl_toolkits.mplot3d.axes3d.Axes3D:110 of
msgid "bool"
msgstr ""

#: matplotlib.artist.Axes3D.set:17 mpl_toolkits.mplot3d.axes3d.Axes3D:79 of
msgid ":meth:`aspect <mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:17 mpl_toolkits.mplot3d.axes3d.Axes3D:79 of
msgid "{'auto'}"
msgstr ""

#: matplotlib.artist.Axes3D.set:18 mpl_toolkits.mplot3d.axes3d.Axes3D:80 of
msgid ":meth:`autoscale_on <matplotlib.axes.Axes.set_autoscale_on>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:18 matplotlib.artist.Axes3D.set:35
#: matplotlib.artist.Axes3D.set:40 matplotlib.artist.Axes3D.set:45
#: matplotlib.artist.Axes3D.set:49 matplotlib.artist.Axes3D.set:52
#: matplotlib.artist.Axes3D.set:53 matplotlib.artist.Axes3D.set:55
#: matplotlib.artist.Axes3D.set:56 matplotlib.artist.Axes3D.set:57
#: matplotlib.artist.Axes3D.set:60 matplotlib.artist.Axes3D.set:61
#: matplotlib.artist.Axes3D.set:63 matplotlib.artist.Axes3D.set:64
#: matplotlib.artist.Axes3D.set:65 matplotlib.artist.Axes3D.set:66
#: matplotlib.artist.Axes3D.set:67 matplotlib.artist.Axes3D.set:68
#: matplotlib.artist.Axes3D.set:71 matplotlib.artist.Axes3D.set:72
#: matplotlib.axes._axes.Axes.text:43 matplotlib.axes._axes.Axes.text:44
#: matplotlib.axes._axes.Axes.text:45 mpl_toolkits.mplot3d.axes3d.Axes3D:80
#: mpl_toolkits.mplot3d.axes3d.Axes3D:97 mpl_toolkits.mplot3d.axes3d.Axes3D:102
#: mpl_toolkits.mplot3d.axes3d.Axes3D:107
#: mpl_toolkits.mplot3d.axes3d.Axes3D:111
#: mpl_toolkits.mplot3d.axes3d.Axes3D:113
#: mpl_toolkits.mplot3d.axes3d.Axes3D:114
#: mpl_toolkits.mplot3d.axes3d.Axes3D:116
#: mpl_toolkits.mplot3d.axes3d.Axes3D:117
#: mpl_toolkits.mplot3d.axes3d.Axes3D:118
#: mpl_toolkits.mplot3d.axes3d.Axes3D:120
#: mpl_toolkits.mplot3d.axes3d.Axes3D:121
#: mpl_toolkits.mplot3d.axes3d.Axes3D:123
#: mpl_toolkits.mplot3d.axes3d.Axes3D:124
#: mpl_toolkits.mplot3d.axes3d.Axes3D:125
#: mpl_toolkits.mplot3d.axes3d.Axes3D:126
#: mpl_toolkits.mplot3d.axes3d.Axes3D:127
#: mpl_toolkits.mplot3d.axes3d.Axes3D:128
#: mpl_toolkits.mplot3d.axes3d.Axes3D:131
#: mpl_toolkits.mplot3d.axes3d.Axes3D:132 of
msgid "unknown"
msgstr ""

#: matplotlib.artist.Axes3D.set:19 mpl_toolkits.mplot3d.axes3d.Axes3D:81 of
msgid ":meth:`autoscalex_on <matplotlib.axes.Axes.set_autoscalex_on>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:20 mpl_toolkits.mplot3d.axes3d.Axes3D:82 of
msgid ":meth:`autoscaley_on <matplotlib.axes.Axes.set_autoscaley_on>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:21 mpl_toolkits.mplot3d.axes3d.Axes3D:83 of
msgid ""
":meth:`autoscalez_on "
"<mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscalez_on>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:22 mpl_toolkits.mplot3d.axes3d.Axes3D:84 of
msgid ":meth:`axes_locator <matplotlib.axes.Axes.set_axes_locator>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:22 mpl_toolkits.mplot3d.axes3d.Axes3D:84 of
msgid "Callable[[Axes, Renderer], Bbox]"
msgstr ""

#: matplotlib.artist.Axes3D.set:23 mpl_toolkits.mplot3d.axes3d.Axes3D:85 of
msgid ":meth:`axisbelow <matplotlib.axes.Axes.set_axisbelow>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:23 mpl_toolkits.mplot3d.axes3d.Axes3D:85 of
msgid "bool or 'line'"
msgstr ""

#: matplotlib.artist.Axes3D.set:24 mpl_toolkits.mplot3d.axes3d.Axes3D:86 of
msgid ":meth:`box_aspect <mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:24 mpl_toolkits.mplot3d.axes3d.Axes3D:86 of
msgid "3-tuple of floats or None"
msgstr ""

#: matplotlib.artist.Axes3D.set:25 matplotlib.axes._axes.Axes.text:43
#: mpl_toolkits.mplot3d.axes3d.Axes3D:87 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:25 mpl_toolkits.mplot3d.axes3d.Axes3D:87 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.artist.Axes3D.set:26 matplotlib.axes._axes.Axes.text:44
#: mpl_toolkits.mplot3d.axes3d.Axes3D:88 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:27 matplotlib.axes._axes.Axes.text:45
#: mpl_toolkits.mplot3d.axes3d.Axes3D:89 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:27 mpl_toolkits.mplot3d.axes3d.Axes3D:89 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.artist.Axes3D.set:28 mpl_toolkits.mplot3d.axes3d.Axes3D:90 of
msgid ":meth:`facecolor <matplotlib.axes.Axes.set_facecolor>` or fc"
msgstr ""

#: matplotlib.artist.Axes3D.set:28 matplotlib.axes._axes.Axes.text:41
#: matplotlib.axes._axes.Axes.text:46 mpl_toolkits.mplot3d.axes3d.Axes3D:90 of
msgid "color"
msgstr ""

#: matplotlib.artist.Axes3D.set:29 matplotlib.axes._axes.Axes.text:47
#: mpl_toolkits.mplot3d.axes3d.Axes3D:91 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:29 matplotlib.axes._axes.Axes.text:47
#: mpl_toolkits.mplot3d.axes3d.Axes3D:91 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.artist.Axes3D.set:30 mpl_toolkits.mplot3d.axes3d.Axes3D:92 of
msgid ":meth:`frame_on <mpl_toolkits.mplot3d.axes3d.Axes3D.set_frame_on>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:31 matplotlib.axes._axes.Axes.text:55
#: mpl_toolkits.mplot3d.axes3d.Axes3D:93 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:31 matplotlib.artist.Axes3D.set:47
#: matplotlib.artist.Axes3D.set:50 matplotlib.artist.Axes3D.set:58
#: matplotlib.axes._axes.Axes.text:55 matplotlib.axes._axes.Axes.text:60
#: matplotlib.axes._axes.Axes.text:74 mpl_toolkits.mplot3d.axes3d.Axes3D:93
#: mpl_toolkits.mplot3d.axes3d.Axes3D:109
#: mpl_toolkits.mplot3d.axes3d.Axes3D:112
#: mpl_toolkits.mplot3d.axes3d.Axes3D:119 of
msgid "str"
msgstr ""

#: matplotlib.artist.Axes3D.set:32 matplotlib.axes._axes.Axes.text:57
#: mpl_toolkits.mplot3d.axes3d.Axes3D:94 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:33 matplotlib.axes._axes.Axes.text:58
#: mpl_toolkits.mplot3d.axes3d.Axes3D:95 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:33 matplotlib.axes._axes.Axes.text:58
#: matplotlib.axes._axes.Axes.text:71 mpl_toolkits.mplot3d.axes3d.Axes3D:95 of
msgid "object"
msgstr ""

#: matplotlib.artist.Axes3D.set:34 mpl_toolkits.mplot3d.axes3d.Axes3D:96 of
msgid ":meth:`navigate <matplotlib.axes.Axes.set_navigate>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:35 mpl_toolkits.mplot3d.axes3d.Axes3D:97 of
msgid ":meth:`navigate_mode <matplotlib.axes.Axes.set_navigate_mode>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:36 matplotlib.axes._axes.Axes.text:63
#: mpl_toolkits.mplot3d.axes3d.Axes3D:98 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:36 matplotlib.axes._axes.Axes.text:63
#: mpl_toolkits.mplot3d.axes3d.Axes3D:98 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.artist.Axes3D.set:37 matplotlib.axes._axes.Axes.text:64
#: mpl_toolkits.mplot3d.axes3d.Axes3D:99 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:37 matplotlib.axes._axes.Axes.text:64
#: mpl_toolkits.mplot3d.axes3d.Axes3D:99 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.artist.Axes3D.set:38 mpl_toolkits.mplot3d.axes3d.Axes3D:100 of
msgid ":meth:`position <matplotlib.axes.Axes.set_position>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:38 mpl_toolkits.mplot3d.axes3d.Axes3D:100 of
msgid "[left, bottom, width, height] or `~matplotlib.transforms.Bbox`"
msgstr ""

#: matplotlib.artist.Axes3D.set:39 mpl_toolkits.mplot3d.axes3d.Axes3D:101 of
msgid ":meth:`proj_type <mpl_toolkits.mplot3d.axes3d.Axes3D.set_proj_type>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:40 mpl_toolkits.mplot3d.axes3d.Axes3D:102 of
msgid ":meth:`prop_cycle <matplotlib.axes.Axes.set_prop_cycle>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:41 mpl_toolkits.mplot3d.axes3d.Axes3D:103 of
msgid ""
":meth:`rasterization_zorder "
"<matplotlib.axes.Axes.set_rasterization_zorder>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:41 mpl_toolkits.mplot3d.axes3d.Axes3D:103 of
msgid "float or None"
msgstr ""

#: matplotlib.artist.Axes3D.set:42 matplotlib.axes._axes.Axes.text:66
#: mpl_toolkits.mplot3d.axes3d.Axes3D:104 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:43 matplotlib.axes._axes.Axes.text:69
#: mpl_toolkits.mplot3d.axes3d.Axes3D:105 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:43 matplotlib.axes._axes.Axes.text:69
#: mpl_toolkits.mplot3d.axes3d.Axes3D:105 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.artist.Axes3D.set:44 matplotlib.axes._axes.Axes.text:70
#: mpl_toolkits.mplot3d.axes3d.Axes3D:106 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:44 matplotlib.axes._axes.Axes.text:70
#: matplotlib.axes._axes.Axes.text:75 mpl_toolkits.mplot3d.axes3d.Axes3D:106 of
msgid "bool or None"
msgstr ""

#: matplotlib.artist.Axes3D.set:45 mpl_toolkits.mplot3d.axes3d.Axes3D:107 of
msgid ":meth:`title <matplotlib.axes.Axes.set_title>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:46 matplotlib.axes._axes.Axes.text:72
#: mpl_toolkits.mplot3d.axes3d.Axes3D:108 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:46 matplotlib.axes._axes.Axes.text:72
#: mpl_toolkits.mplot3d.axes3d.Axes3D:108 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.artist.Axes3D.set:47 matplotlib.axes._axes.Axes.text:74
#: mpl_toolkits.mplot3d.axes3d.Axes3D:109 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:48 matplotlib.axes._axes.Axes.text:77
#: mpl_toolkits.mplot3d.axes3d.Axes3D:110 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:49 mpl_toolkits.mplot3d.axes3d.Axes3D:111 of
msgid ":meth:`xbound <matplotlib.axes.Axes.set_xbound>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:50 mpl_toolkits.mplot3d.axes3d.Axes3D:112 of
msgid ":meth:`xlabel <matplotlib.axes.Axes.set_xlabel>`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:113 of
msgid ":meth:`xlim3d <mpl_toolkits.mplot3d.axes3d.Axes3D.set_xlim3d>` or xlim"
msgstr ""

#: matplotlib.artist.Axes3D.set:53 mpl_toolkits.mplot3d.axes3d.Axes3D:114 of
msgid ":meth:`xmargin <matplotlib.axes.Axes.set_xmargin>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:54 mpl_toolkits.mplot3d.axes3d.Axes3D:115 of
msgid ":meth:`xscale <mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:54 matplotlib.artist.Axes3D.set:62
#: matplotlib.artist.Axes3D.set:70 mpl_toolkits.mplot3d.axes3d.Axes3D:115
#: mpl_toolkits.mplot3d.axes3d.Axes3D:122
#: mpl_toolkits.mplot3d.axes3d.Axes3D:130 of
msgid "{\"linear\"}"
msgstr ""

#: matplotlib.artist.Axes3D.set:55 mpl_toolkits.mplot3d.axes3d.Axes3D:116 of
msgid ":meth:`xticklabels <matplotlib.axes.Axes.set_xticklabels>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:56 mpl_toolkits.mplot3d.axes3d.Axes3D:117 of
msgid ":meth:`xticks <matplotlib.axes.Axes.set_xticks>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:57 mpl_toolkits.mplot3d.axes3d.Axes3D:118 of
msgid ":meth:`ybound <matplotlib.axes.Axes.set_ybound>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:58 mpl_toolkits.mplot3d.axes3d.Axes3D:119 of
msgid ":meth:`ylabel <matplotlib.axes.Axes.set_ylabel>`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:120 of
msgid ":meth:`ylim3d <mpl_toolkits.mplot3d.axes3d.Axes3D.set_ylim3d>` or ylim"
msgstr ""

#: matplotlib.artist.Axes3D.set:61 mpl_toolkits.mplot3d.axes3d.Axes3D:121 of
msgid ":meth:`ymargin <matplotlib.axes.Axes.set_ymargin>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:62 mpl_toolkits.mplot3d.axes3d.Axes3D:122 of
msgid ":meth:`yscale <mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:63 mpl_toolkits.mplot3d.axes3d.Axes3D:123 of
msgid ":meth:`yticklabels <matplotlib.axes.Axes.set_yticklabels>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:64 mpl_toolkits.mplot3d.axes3d.Axes3D:124 of
msgid ":meth:`yticks <matplotlib.axes.Axes.set_yticks>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:65 mpl_toolkits.mplot3d.axes3d.Axes3D:125 of
msgid ":meth:`zbound <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zbound>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:66 mpl_toolkits.mplot3d.axes3d.Axes3D:126 of
msgid ":meth:`zlabel <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlabel>`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D:127 of
msgid ":meth:`zlim3d <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlim3d>` or zlim"
msgstr ""

#: matplotlib.artist.Axes3D.set:68 mpl_toolkits.mplot3d.axes3d.Axes3D:128 of
msgid ":meth:`zmargin <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zmargin>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:69 matplotlib.axes._axes.Axes.text:81
#: mpl_toolkits.mplot3d.axes3d.Axes3D:129 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:69 matplotlib.axes._axes.Axes.text:79
#: matplotlib.axes._axes.Axes.text:80 matplotlib.axes._axes.Axes.text:81
#: mpl_toolkits.mplot3d.axes3d.Axes3D:129 of
msgid "float"
msgstr ""

#: matplotlib.artist.Axes3D.set:70 mpl_toolkits.mplot3d.axes3d.Axes3D:130 of
msgid ":meth:`zscale <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:71 mpl_toolkits.mplot3d.axes3d.Axes3D:131 of
msgid ":meth:`zticklabels <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:72 mpl_toolkits.mplot3d.axes3d.Axes3D:132 of
msgid ":meth:`zticks <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks>`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.add_collection3d:2 of
msgid "Add a 3D collection object to the plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.add_collection3d:4 of
msgid ""
"2D collection types are converted to a 3D version by modifying the object"
" and adding z coordinate information."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.add_collection3d:7 of
msgid "Supported are:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.add_collection3d:9 of
msgid "PolyCollection"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.add_collection3d:10 of
msgid "LineCollection"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.add_collection3d:11 of
msgid "PatchCollection"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:2 of
msgid "Adjust the Axes for a specified data aspect ratio."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:4 of
msgid ""
"Depending on `.get_adjustable` this will modify either the Axes box "
"(position) or the view limits. In the former case, "
"`~matplotlib.axes.Axes.get_anchor` will affect the position."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:19 of
msgid ":obj:`matplotlib.axes.Axes.set_aspect`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:20 of
msgid "For a description of aspect ratio handling."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:21 of
msgid ":obj:`matplotlib.axes.Axes.set_adjustable`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:22 of
msgid "Set how the Axes adjusts to achieve the required aspect ratio."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:23 of
msgid ":obj:`matplotlib.axes.Axes.set_anchor`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:24 of
msgid "Set the position in case of extra space."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw:21
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:31
#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_date:19 of
msgid "Notes"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.apply_aspect:29 of
msgid ""
"This is called automatically when each Axes is drawn.  You may need to "
"call it yourself if you need to update the Axes position and/or view "
"limits before the Figure is drawn."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.autoscale:2 of
msgid ""
"Convenience method for simple axis view autoscaling. See "
":meth:`matplotlib.axes.Axes.autoscale` for full explanation. Note that "
"this function behaves the same, but for all three axes.  Therefore, 'z' "
"can be passed for *axis*, and 'both' applies to all three axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.autoscale_view:2 of
msgid ""
"Autoscale the view limits using the data limits. See "
":meth:`matplotlib.axes.Axes.autoscale_view` for documentation. Note that "
"this function applies to the 3D axes, and as such adds the *scalez* to "
"the function arguments."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:2 of
msgid "Add 2D bar(s)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:8 of
msgid "**left**"
msgstr ""

#: of
msgid "1D array-like"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:8 of
msgid "The x coordinates of the left sides of the bars."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:11 of
msgid "**height**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:11 of
msgid "The height of the bars."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:15
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:15
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:12 of
msgid "**zs**"
msgstr ""

#: of
msgid "float or 1D array-like"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:14 of
msgid ""
"Z coordinate of bars; if a single value is specified, it will be used for"
" all bars."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:18
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:18
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:18
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:19
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:21
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:15 of
msgid "**zdir**"
msgstr ""

#: of
msgid "{'x', 'y', 'z'}, default: 'z'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:18
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:18 of
msgid "When plotting 2D data, the direction to use as z ('x', 'y' or 'z')."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:22
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:49
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:26
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:20
#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:99
#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:34
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:46
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:52
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:29
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:23 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:21
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:48
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:25
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:19
#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:33
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:51
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:22 of
msgid ""
"If given, all parameters also accept a string ``s``, which is interpreted"
" as ``data[s]`` (unless this raises an exception)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:25 of
msgid "Other arguments are forwarded to `matplotlib.axes.Axes.bar`."
msgstr ""

#: matplotlib.axes._axes.Axes.text mpl_toolkits.mplot3d.axes3d.Axes3D.bar
#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf
#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d
#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels of
msgid "Returns"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar:42 of
msgid "mpl_toolkits.mplot3d.art3d.Patch3DCollection"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:2 of
msgid "Generate a 3D barplot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:4 of
msgid ""
"This method creates three dimensional barplot where the width, depth, "
"height, and color of the bars can all be uniquely set."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:10
#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:11
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:15
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:22 of
msgid "**x, y, z**"
msgstr ""

#: of
msgid "array-like"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:10 of
msgid "The coordinates of the anchor point of the bars."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:13 of
msgid "**dx, dy, dz**"
msgstr ""

#: of
msgid "float or array-like"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:13 of
msgid "The width, depth, and height of the bars, respectively."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:35
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:44
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:31 of
msgid "**color**"
msgstr ""

#: of
msgid "sequence of colors, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:16 of
msgid ""
"The color of the bars can be specified globally or individually. This "
"parameter can be:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:19 of
msgid "A single color, to color all bars the same color."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:20 of
msgid "An array of colors of length N bars, to color each bar independently."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:22 of
msgid "An array of colors of length 6, to color the faces of the bars similarly."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:24 of
msgid "An array of colors of length 6 * N bars, to color each face independently."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:27 of
msgid ""
"When coloring the faces of the boxes specifically, this is the order of "
"the coloring:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:30 of
msgid "-Z (bottom of box)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:31 of
msgid "+Z (top of box)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:32 of
msgid "-Y"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:33 of
msgid "+Y"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:34 of
msgid "-X"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:35 of
msgid "+X"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:38 of
msgid "**zsort**"
msgstr ""

#: of
msgid "str, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:38 of
msgid "The z-axis sorting scheme passed onto `~.art3d.Poly3DCollection`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:42
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:60
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:44
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:40 of
msgid "**shade**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:41 of
msgid ""
"When true, this shades the dark sides of the bars (relative to the plot's"
" source of light)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:45
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:63
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:47
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:43 of
msgid "**lightsource** : `~matplotlib.colors.LightSource`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:44
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:62
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:46
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:42 of
msgid "LightSource"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:45
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:63
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:47
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:43 of
msgid "The lightsource to use when *shade* is True."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:52 of
msgid ""
"Any additional keyword arguments are passed onto "
"`~.art3d.Poly3DCollection`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:71 of
msgid "**collection** : `~.art3d.Poly3DCollection`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:70 of
msgid "Poly3DCollection"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d:58 of
msgid "A collection of three dimensional polygons representing the bars."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.can_pan:2 of
msgid "Return whether this axes supports the pan/zoom button functionality."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.can_pan:4 of
msgid "3D axes objects do not use the pan/zoom button."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.can_zoom:2 of
msgid "Return whether this axes supports the zoom box button functionality."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.can_zoom:4 of
msgid "3D axes objects do not use the zoom box button."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.cla:2 of
msgid "Clear the Axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.clabel:2 of
msgid "Currently not implemented for 3D axes, and returns *None*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:2
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:2 of
msgid "Create a 3D contour plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:9
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:9
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:14
#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:13
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:12 of
msgid "**X, Y, Z**"
msgstr ""

#: of
msgid "array-like,"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:8 of
msgid ""
"Input data. See `~matplotlib.axes.Axes.contour` for acceptable data "
"shapes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:15 of
msgid "**extend3d**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:15 of
msgid "Whether to extend contour in 3D."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:15
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:18 of
msgid "**stride**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:15
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:18 of
msgid "Step size for extending contour."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:18
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:21
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:15 of
msgid "The direction to use."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:22
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:16
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:25
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:19 of
msgid "**offset**"
msgstr ""

#: of
msgid "float, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:21
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:15
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:24
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:18 of
msgid ""
"If specified, plot a projection of the contour lines at this position in "
"a plane normal to zdir."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:29
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:23
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:32
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:27 of
msgid "**\\*args, **kwargs**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:29 of
msgid "Other arguments are forwarded to `matplotlib.axes.Axes.contour`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contour:46
#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:40 of
msgid "matplotlib.contour.QuadContourSet"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:2
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:2 of
msgid "Create a 3D filled contour plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:8 of
msgid ""
"Input data. See `~matplotlib.axes.Axes.contourf` for acceptable data "
"shapes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.contourf:23 of
msgid "Other arguments are forwarded to `matplotlib.axes.Axes.contourf`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.convert_zunits:2 of
msgid ""
"For artists in an axes, if the zaxis has units support, convert *z* using"
" zaxis unit type"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.disable_mouse_rotation:2 of
msgid "Disable mouse buttons for 3D rotation and zooming."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw:4 of
msgid ""
"This has no effect if the artist is not visible (`.Artist.get_visible` "
"returns False)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw:17 of
msgid "RendererBase subclass."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:2 of
msgid "Plot lines and/or markers with errorbars around them."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:4 of
msgid ""
"*x*/*y*/*z* define the data locations, and *xerr*/*yerr*/*zerr* define "
"the errorbar sizes. By default, this draws the data markers/lines as well"
" the errorbars. Use fmt='none' to draw errorbars only."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:11
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:8 of
msgid "The data positions."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:23 of
msgid "**xerr, yerr, zerr**"
msgstr ""

#: of
msgid "float or array-like, shape (N,) or (2, N), optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:14 of
msgid "The errorbar sizes:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:16 of
msgid "scalar: Symmetric +/- values for all data points."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:17 of
msgid "shape(N,): Symmetric +/-values for each data point."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:18 of
msgid ""
"shape(2, N): Separate - and + values for each bar. First row contains the"
" lower errors, the second row contains the upper errors."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:21 of
msgid "*None*: No errorbar."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:23 of
msgid "Note that all error arrays should have *positive* values."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:30 of
msgid "**fmt**"
msgstr ""

#: of
msgid "str, default: ''"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:26 of
msgid "The format for the data points / data lines. See `.plot` for details."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:29 of
msgid "Use 'none' (case insensitive) to plot errorbars without any data markers."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:34 of
msgid "**ecolor**"
msgstr ""

#: of
msgid "color, default: None"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:33 of
msgid ""
"The color of the errorbar lines.  If None, use the color of the line "
"connecting the markers."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:38 of
msgid "**elinewidth**"
msgstr ""

#: of
msgid "float, default: None"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:37 of
msgid ""
"The linewidth of the errorbar lines. If None, the linewidth of the "
"current style is used."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:41 of
msgid "**capsize** : float, default: :rc:`errorbar.capsize`"
msgstr ""

#: of
msgid "float, default:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:41 of
msgid "The length of the error bar caps in points."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:49 of
msgid "**capthick**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:44 of
msgid ""
"An alias to the keyword argument *markeredgewidth* (a.k.a. *mew*). This "
"setting is a more sensible name for the property that controls the "
"thickness of the error bar cap in points. For backwards compatibility, if"
" *mew* or *markeredgewidth* are given, then they will over-ride "
"*capthick*. This may change in future releases."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:53 of
msgid "**barsabove**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:52 of
msgid "If True, will plot the errorbars above the plot symbols. Default is below."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:63 of
msgid "**xlolims, ylolims, zlolims**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:56 of
msgid ""
"These arguments can be used to indicate that a value gives only lower "
"limits. In that case a caret symbol is used to indicate this. "
"*lims*-arguments may be scalars, or array-likes of the same length as the"
" errors. To use limits with inverted axes, `~.Axes.set_xlim` or "
"`~.Axes.set_ylim` must be called before :meth:`errorbar`. Note the tricky"
" parameter names: setting e.g. *ylolims* to True means that the y-value "
"is a *lower* limit of the True value, so, only an *upward*-pointing arrow"
" will be drawn!"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:66 of
msgid "**xuplims, yuplims, zuplims**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:66 of
msgid "Same as above, but for controlling the upper limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:75 of
msgid "**errorevery**"
msgstr ""

#: of
msgid "int or (int, int), default: 1"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:69 of
msgid ""
"draws error bars on a subset of the data. *errorevery* =N draws error "
"bars on the points (x[::N], y[::N], z[::N]). *errorevery* =(start, N) "
"draws error bars on the points (x[start::N], y[start::N], z[start::N]). "
"e.g. errorevery=(6, 3) adds error bars to the data at (x[6], x[9], x[12],"
" x[15], ...). Used to avoid overlapping error bars when two series share "
"x-axis values."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:81 of
msgid "**errlines**"
msgstr ""

#: of
msgid "list"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:80 of
msgid ""
"List of `~mpl_toolkits.mplot3d.art3d.Line3DCollection` instances each "
"containing an errorbar line."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:85 of
msgid "**caplines**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:84 of
msgid ""
"List of `~mpl_toolkits.mplot3d.art3d.Line3D` instances each containing a "
"capline object."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:91 of
msgid "**limmarks**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:88 of
msgid ""
"List of `~mpl_toolkits.mplot3d.art3d.Line3D` instances each containing a "
"marker with an upper or lower limit."
msgstr ""

#: matplotlib.axes._axes.Axes.text mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels of
msgid "Other Parameters"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:96
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:43 of
msgid ""
"If given, the following parameters also accept a string ``s``, which is "
"interpreted as ``data[s]`` (unless this raises an exception):"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:99 of
msgid "*x*, *y*, *z*, *xerr*, *yerr*, *zerr*"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:102 of
msgid ""
"All other keyword arguments for styling errorbar lines are passed "
"`~mpl_toolkits.mplot3d.art3d.Line3DCollection`."
msgstr ""

#: matplotlib.axes._axes.Axes.text:91
#: mpl_toolkits.mplot3d.axes3d.Axes3D.errorbar:112
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:64
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:70
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:68 of
msgid "Examples"
msgstr ""

#: ../../gallery/mplot3d/errorbar3d.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/errorbar3d.py>`__, `png "
"<../../gallery/mplot3d/errorbar3d.png>`__, `pdf "
"<../../gallery/mplot3d/errorbar3d.pdf>`__)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.format_coord:2 of
msgid ""
"Given the 2D view coordinates attempt to guess a 3D coordinate. Looks for"
" the nearest edge to the point and then assumes that the point is at the "
"same z location as the nearest point on the edge."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.format_zdata:2 of
msgid ""
"Return *z* string formatted.  This function will use the "
":attr:`fmt_zdata` attribute if it is callable, else will fall back on the"
" zaxis major formatter"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_autoscale_on:2 of
msgid "Return True if each axis is autoscaled, False otherwise."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_autoscalez_on:2 of
msgid "Return whether the z-axis is autoscaled."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_frame_on:2 of
msgid "Get whether the 3D axes panels are drawn."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_proj:2 of
msgid "Create the projection matrix from the current viewing position."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:2 of
msgid ""
"Return the tight bounding box of the axes, including axis and their "
"decorators (xlabel, title, etc)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:5 of
msgid ""
"Artists that have ``artist.set_in_layout(False)`` are not included in the"
" bbox."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:12 of
msgid "**renderer** : `.RendererBase` subclass"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:11 of
msgid "RendererBase subclass"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:11 of
msgid ""
"renderer that will be used to draw the figures (i.e. "
"``fig.canvas.get_renderer()``)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:17 of
msgid "**bbox_extra_artists** : list of `.Artist` or ``None``"
msgstr ""

#: of
msgid "list of"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:15 of
msgid ""
"List of artists to include in the tight bounding box.  If ``None`` "
"(default), then all artist children of the Axes are included in the tight"
" bounding box."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:24 of
msgid "**call_axes_locator**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:20 of
msgid ""
"If *call_axes_locator* is ``False``, it does not call the "
"``_axes_locator`` attribute, which is necessary to get the correct "
"bounding box. ``call_axes_locator=False`` can be used if the caller is "
"only interested in the relative size of the tightbbox compared to the "
"Axes bbox."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:28 of
msgid "**for_layout_only**"
msgstr ""

#: of
msgid "default: False"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:27 of
msgid ""
"The bounding box will *not* include the x-extent of the title and the "
"xlabel, or the y-extent of the ylabel."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:39 of
msgid "`.BboxBase`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:33 of
msgid "Bounding box in figure pixel coordinates."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:44 of
msgid ":obj:`matplotlib.axes.Axes.get_window_extent`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:46 of
msgid ":obj:`matplotlib.axis.Axis.get_tightbbox`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_tightbbox:48 of
msgid ":obj:`matplotlib.spines.Spine.get_window_extent`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_w_lims:2 of
msgid "Get 3D world limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:2 of
msgid "Alias for `get_xlim3d`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:2 of
msgid "Return the x-axis view limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:15 of
msgid "**left, right**"
msgstr ""

#: matplotlib.axes._axes.Axes.text:65 of
msgid "(float, float)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:9 of
msgid "The current x-axis limits in data coordinates."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:20 of
msgid ":obj:`set_xlim`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:22 of
msgid ":obj:`set_xbound`, :obj:`get_xbound`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:24 of
msgid ":obj:`invert_xaxis`, :obj:`xaxis_inverted`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_xlim3d:29 of
msgid ""
"The x-axis may be inverted, in which case the *left* value will be "
"greater than the *right* value."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:2 of
msgid "Alias for `get_ylim3d`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:2 of
msgid "Return the y-axis view limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:15 of
msgid "**bottom, top**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:9 of
msgid "The current y-axis limits in data coordinates."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:20 of
msgid ":obj:`set_ylim`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:22 of
msgid ":obj:`set_ybound`, :obj:`get_ybound`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:24 of
msgid ":obj:`invert_yaxis`, :obj:`yaxis_inverted`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_ylim3d:29 of
msgid ""
"The y-axis may be inverted, in which case the *bottom* value will be "
"greater than the *top* value."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zaxis:2 of
msgid "Return the ``ZAxis`` (`~.axis3d.Axis`) instance."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zbound:2 of
msgid "Return the lower and upper z-axis bounds, in increasing order."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zgridlines:2 of
msgid "Return the zaxis' grid lines as a list of `.Line2D`\\s."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zlabel:2 of
msgid "Get the z-label text string."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zlim3d:2 of
msgid "Alias for `get_zlim3d`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zlim3d:2 of
msgid "Get 3D z limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zmajorticklabels:2 of
msgid "Return the zaxis' major tick labels, as a list of `~.text.Text`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zminorticklabels:2 of
msgid "Return the zaxis' minor tick labels, as a list of `~.text.Text`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:2 of
msgid "Get the zaxis' tick labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:8
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:24
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:16 of
msgid "**minor**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:8 of
msgid "Whether to return the minor or the major ticklabels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:13 of
msgid "**which**"
msgstr ""

#: of
msgid "None, ('minor', 'major', 'both')"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:11 of
msgid "Overrides *minor*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:13 of
msgid "Selects which ticklabels to return"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:25 of
msgid "list of `~matplotlib.text.Text`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:29 of
msgid ""
"The tick label strings are not populated until a ``draw`` method has been"
" called."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklabels:32 of
msgid "See also: `~.pyplot.draw` and `~.FigureCanvasBase.draw`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticklines:2 of
msgid "Return the zaxis' tick lines as a list of `.Line2D`\\s."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.get_zticks:2 of
msgid "Return the zaxis' tick locations in data coordinates."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.grid:2 of
msgid "Set / unset 3D grid."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.grid:6 of
msgid ""
"Currently, this function does not behave the same as "
":meth:`matplotlib.axes.Axes.grid`, but it is intended to eventually "
"support that behavior."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.invert_zaxis:2 of
msgid "Invert the z-axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.locator_params:2 of
msgid "Convenience method for controlling tick locators."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.locator_params:4 of
msgid ""
"See :meth:`matplotlib.axes.Axes.locator_params` for full documentation.  "
"Note that this is for Axes3D objects, therefore, setting *axis* to 'both'"
" will result in the parameters being set for all three axes.  Also, "
"*axis* can also take a value of 'z' to apply parameters to the z axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.margins:2 of
msgid "Convenience method to set or retrieve autoscaling margins."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.margins:4 of
msgid "Call signatures::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.margins:8 of
msgid "returns xmargin, ymargin, zmargin"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.margins:20 of
msgid ""
"All forms above set the xmargin, ymargin and zmargin parameters. All "
"keyword parameters are optional.  A single positional argument specifies "
"xmargin, ymargin and zmargin. Passing both positional and keyword "
"arguments for xmargin, ymargin, and/or zmargin is invalid."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.margins:26 of
msgid ""
"The *tight* parameter is passed to :meth:`autoscale_view`, which is "
"executed after a margin is changed; the default here is *True*, on the "
"assumption that when margins are specified, no additional padding to "
"match tick marks is usually desired.  Setting *tight* to *None* will "
"preserve the previous setting."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.margins:33 of
msgid ""
"Specifying any margin changes only the autoscaling; for example, if "
"*xmargin* is not None, then *xmargin* times the X data interval will be "
"added to each end of that interval before it is used in autoscaling."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.mouse_init:2 of
msgid "Set the mouse buttons for 3D rotation and zooming."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.mouse_init:8 of
msgid "**rotate_btn**"
msgstr ""

#: of
msgid "int or list of int, default: 1"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.mouse_init:8 of
msgid "The mouse button or buttons to use for 3D rotation of the axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.mouse_init:24 of
msgid "**zoom_btn**"
msgstr ""

#: of
msgid "int or list of int, default: 3"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.mouse_init:11 of
msgid "The mouse button or buttons to use to zoom the 3D axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:2 of
msgid "Plot 2D or 3D data."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:8 of
msgid "**xs**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:8 of
msgid "x coordinates of vertices."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:11 of
msgid "**ys**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:11 of
msgid "y coordinates of vertices."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:14 of
msgid ""
"z coordinates of vertices; either one for all points or one for each "
"point."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot:21 of
msgid "Other arguments are forwarded to `matplotlib.axes.Axes.plot`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:2 of
msgid "Create a surface plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:4 of
msgid ""
"By default it will be colored in shades of a solid color, but it also "
"supports colormapping by supplying the *cmap* argument."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:9
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:6 of
msgid ""
"The *rcount* and *ccount* kwargs, which both default to 50, determine the"
" maximum number of samples used in each direction.  If the input data is "
"larger, it will be downsampled (by slicing) to these numbers of points."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:16 of
msgid ""
"To maximize rendering speed consider setting *rstride* and *cstride* to "
"divisors of the number of rows minus 1 and columns minus 1 respectively. "
"For example, given 51 rows rstride can be any of the divisors of 50."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:21 of
msgid ""
"Similarly, a setting of *rstride* and *cstride* equal to 1 (or *rcount* "
"and *ccount* equal the number of rows and columns) can use the optimized "
"path."
msgstr ""

#: of
msgid "2D arrays"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:28
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:14 of
msgid "Data values."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:33
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:21 of
msgid "**rcount, ccount**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:31 of
msgid ""
"Maximum number of samples used in each direction.  If the input data is "
"larger, it will be downsampled (by slicing) to these numbers of points.  "
"Defaults to 50."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:41
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:32 of
msgid "**rstride, cstride**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:36 of
msgid ""
"Downsampling stride in each direction.  These arguments are mutually "
"exclusive with *rcount* and *ccount*.  If only one of *rstride* or "
"*cstride* is set, the other defaults to 10."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:40 of
msgid ""
"'classic' mode uses a default of ``rstride = cstride = 10`` instead of "
"the new default of ``rcount = ccount = 50``."
msgstr ""

#: of
msgid "color-like"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:44
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:31 of
msgid "Color of the surface patches."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:47
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:34 of
msgid "**cmap**"
msgstr ""

#: of
msgid "Colormap"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:47 of
msgid "Colormap of the surface patches."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:50 of
msgid "**facecolors**"
msgstr ""

#: of
msgid "array-like of colors."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:50 of
msgid "Colors of each individual patch."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:53
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:37 of
msgid "**norm**"
msgstr ""

#: of
msgid "Normalize"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:53 of
msgid "Normalization for the colormap."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:56
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:40 of
msgid "**vmin, vmax**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:56 of
msgid "Bounds for the normalization."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:59
#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:43
#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:39 of
msgid ""
"Whether to shade the facecolors.  Shading is always disabled when *cmap* "
"is specified."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_surface:66 of
msgid "Other arguments are forwarded to `.Poly3DCollection`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:2 of
msgid "Plot a triangulated surface."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:4 of
msgid "The (optional) triangulation can be specified in one of two ways; either::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:9 of
msgid "where triangulation is a `~matplotlib.tri.Triangulation` object, or::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:15 of
msgid ""
"in which case a Triangulation object will be created.  See "
"`.Triangulation` for a explanation of these possibilities."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:18 of
msgid "The remaining arguments are::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:22 of
msgid ""
"where *Z* is the array of values to contour, one per point in the "
"triangulation."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:28 of
msgid "Data values as 1D arrays."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:34 of
msgid "A colormap for the surface patches."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:37 of
msgid "An instance of Normalize to map values to colors."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:40 of
msgid "Minimum and maximum value to map."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_trisurf:50 of
msgid ""
"All other arguments are passed on to "
":class:`~mpl_toolkits.mplot3d.art3d.Poly3DCollection`"
msgstr ""

#: ../../gallery/mplot3d/trisurf3d.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/trisurf3d.py>`__, `png "
"<../../gallery/mplot3d/trisurf3d.png>`__, `pdf "
"<../../gallery/mplot3d/trisurf3d.pdf>`__)"
msgstr ""

#: ../../gallery/mplot3d/trisurf3d_2.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/trisurf3d_2.py>`__, `png "
"<../../gallery/mplot3d/trisurf3d_2.png>`__, `pdf "
"<../../gallery/mplot3d/trisurf3d_2.pdf>`__)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:2 of
msgid "Plot a 3D wireframe."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:17 of
msgid ""
"Maximum number of samples used in each direction.  If the input data is "
"larger, it will be downsampled (by slicing) to these numbers of points.  "
"Setting a count to zero causes the data to be not sampled in the "
"corresponding direction, producing a 3D line plot rather than a wireframe"
" plot.  Defaults to 50."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:24 of
msgid ""
"Downsampling stride in each direction.  These arguments are mutually "
"exclusive with *rcount* and *ccount*.  If only one of *rstride* or "
"*cstride* is set, the other defaults to 1.  Setting a stride to zero "
"causes the data to be not sampled in the corresponding direction, "
"producing a 3D line plot rather than a wireframe plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:31 of
msgid ""
"'classic' mode uses a default of ``rstride = cstride = 1`` instead of the"
" new default of ``rcount = ccount = 50``."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.plot_wireframe:35 of
msgid "Other arguments are forwarded to `.Line3DCollection`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:2 of
msgid "Plot a 3D field of arrows."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:4 of
msgid ""
"The arguments could be array-like or scalars, so long as they they can be"
" broadcast together. The arguments can also be masked arrays. If an "
"element in any of argument is masked, then that corresponding quiver "
"element will not be plotted."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:12 of
msgid ""
"The x, y and z coordinates of the arrow locations (default is tail of "
"arrow; see *pivot* kwarg)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:16 of
msgid "**U, V, W**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:16 of
msgid "The x, y and z components of the arrow vectors."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:19 of
msgid "**length**"
msgstr ""

#: of
msgid "float, default: 1"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:19 of
msgid "The length of each quiver."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:22 of
msgid "**arrow_length_ratio**"
msgstr ""

#: of
msgid "float, default: 0.3"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:22 of
msgid "The ratio of the arrow head with respect to the quiver."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:26 of
msgid "**pivot**"
msgstr ""

#: of
msgid "{'tail', 'middle', 'tip'}, default: 'tail'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:25 of
msgid ""
"The part of the arrow that is at the grid point; the arrow rotates about "
"this point, hence the name *pivot*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:30 of
msgid "**normalize**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:29 of
msgid ""
"Whether all arrows are normalized to have the same length, or keep the "
"lengths defined by *u*, *v*, and *w*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.quiver:37 of
msgid ""
"Any additional keyword arguments are delegated to "
":class:`~matplotlib.collections.LineCollection`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:2 of
msgid "Create a scatter plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:8 of
msgid "**xs, ys**"
msgstr ""

#: of
msgid "float or array-like, default: 0"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:11 of
msgid ""
"The z-positions. Either an array of the same length as *xs* and *ys* or a"
" single value to place all points in the same plane."
msgstr ""

#: of
msgid "{'x', 'y', 'z', '-x', '-y', '-z'}, default: 'z'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:15 of
msgid ""
"The axis direction for the *zs*. This is useful when plotting 2D data on "
"a 3D Axes. The data must be passed as *xs*, *ys*. Setting *zdir* to 'y' "
"then plots the data to the x-z-plane."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:19 of
msgid "See also :doc:`/gallery/mplot3d/2dcollections3d`."
msgstr ""

#: matplotlib.axes._axes.Axes.text:14
#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:24 of
msgid "**s**"
msgstr ""

#: of
msgid "float or array-like, default: 20"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:22 of
msgid ""
"The marker size in points**2. Either an array of the same length as *xs* "
"and *ys* or a single value to make all markers the same size."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:35 of
msgid "**c**"
msgstr ""

#: of
msgid "color, sequence, or sequence of colors, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:27 of
msgid "The marker color. Possible values:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:29 of
msgid "A single color format string."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:30 of
msgid "A sequence of colors of length n."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:31 of
msgid "A sequence of n numbers to be mapped to colors using *cmap* and *norm*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:33 of
msgid "A 2D array in which the rows are RGB or RGBA."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:35 of
msgid "For more details see the *c* argument of `~.axes.Axes.scatter`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:40 of
msgid "**depthshade**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:38 of
msgid ""
"Whether to shade the scatter markers to give the appearance of depth. "
"Each call to ``scatter()`` will perform its depthshading independently."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:46 of
msgid ""
"*xs*, *ys*, *zs*, *s*, *edgecolors*, *c*, *facecolor*, *facecolors*, "
"*color*"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:49 of
msgid "All other arguments are passed on to `~.axes.Axes.scatter`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:66 of
msgid "**paths** : `~matplotlib.collections.PathCollection`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.scatter:65 of
msgid "PathCollection"
msgstr ""

#: matplotlib.artist.Axes3D.set:2 of
msgid "Set multiple properties at once."
msgstr ""

#: matplotlib.artist.Axes3D.set:4 of
msgid "Supported properties are"
msgstr ""

#: matplotlib.artist.Axes3D.set:51 of
msgid ":meth:`xlim <matplotlib.axes.Axes.set_xlim>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:51 matplotlib.artist.Axes3D.set:59 of
msgid "(bottom: float, top: float)"
msgstr ""

#: matplotlib.artist.Axes3D.set:52 of
msgid ":meth:`xlim3d <mpl_toolkits.mplot3d.axes3d.Axes3D.set_xlim3d>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:59 of
msgid ":meth:`ylim <matplotlib.axes.Axes.set_ylim>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:60 of
msgid ":meth:`ylim3d <mpl_toolkits.mplot3d.axes3d.Axes3D.set_ylim3d>`"
msgstr ""

#: matplotlib.artist.Axes3D.set:67 of
msgid ":meth:`zlim3d <mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlim3d>`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:2 of
msgid "Set the aspect ratios."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:4 of
msgid ""
"Axes 3D does not current support any aspect but 'auto' which fills the "
"axes with the data limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:7 of
msgid ""
"To simulate having equal aspect in data space, set the ratio of your data"
" limits to match the value of `.get_box_aspect`. To control box aspect "
"ratios use `~.Axes3D.set_box_aspect`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:20
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:21 of
msgid "**aspect**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:14 of
msgid "Possible values:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:17
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:35 of
msgid "value"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:17
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:35 of
msgid "description"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:19 of
msgid "'auto'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:19 of
msgid "automatic; fill the position rectangle with data."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:27 of
msgid "**adjustable**"
msgstr ""

#: of
msgid "None"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:23 of
msgid "Currently ignored by Axes3D"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:25 of
msgid ""
"If not *None*, this defines which parameter will be adjusted to meet the "
"required aspect. See `.set_adjustable` for further details."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:44 of
msgid "**anchor**"
msgstr ""

#: of
msgid "None or str or 2-tuple of float, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:30 of
msgid ""
"If not *None*, this defines where the Axes will be drawn if there is "
"extra space due to aspect constraints. The most common way to to specify "
"the anchor are abbreviations of cardinal directions:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:37 of
msgid "'C'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:37 of
msgid "centered"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:38 of
msgid "'SW'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:38 of
msgid "lower left corner"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:39 of
msgid "'S'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:39 of
msgid "middle of bottom edge"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:40 of
msgid "'SE'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:40 of
msgid "lower right corner"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:41 of
msgid "etc."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:44 of
msgid "See `~.Axes.set_anchor` for further details."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:54 of
msgid "**share**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:47 of
msgid "If ``True``, apply the settings to all shared Axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_aspect:59 of
msgid ":obj:`mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscale_on:2 of
msgid ""
"Set whether autoscaling is applied to each axis on the next draw or call "
"to `.Axes.autoscale_view`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscale_on:22
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscalez_on:22
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_frame_on:21 of
msgid "**b**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_autoscalez_on:2 of
msgid ""
"Set whether the z-axis is autoscaled on the next draw or call to "
"`.Axes.autoscale_view`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_axis_off:2 of
msgid "Turn the x- and y-axis off."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_axis_off:4
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_axis_on:4 of
msgid "This affects the axis lines, ticks, ticklabels, grid and axis labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_axis_on:2 of
msgid "Turn the x- and y-axis on."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:2 of
msgid "Set the axes box aspect."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:4 of
msgid ""
"The box aspect is the ratio of height to width in display units for each "
"face of the box when viewed perpendicular to that face.  This is not to "
"be confused with the data aspect (which for Axes3D is always 'auto').  "
"The default ratios are 4:4:3 (x:y:z)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:10 of
msgid ""
"To simulate having equal aspect in data space, set the box aspect to "
"match your data range in each dimension."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:13 of
msgid "*zoom* controls the overall size of the Axes3D in the figure."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:18 of
msgid ""
"Changes the physical dimensions of the Axes3D, such that the ratio of the"
" axis lengths in display units is x:y:z."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:21 of
msgid "If None, defaults to 4:4:3"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:37 of
msgid "**zoom**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_box_aspect:24 of
msgid "Control overall size of the Axes3D in the figure."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_frame_on:2 of
msgid "Set whether the 3D axes panels are drawn."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_proj_type:2 of
msgid "Set the projection type."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:2 of
msgid "Set a title for the Axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:4 of
msgid ""
"Set one of the three available Axes titles. The available titles are "
"positioned above the Axes in the center, flush with the left edge, and "
"flush with the right edge."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:11
#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:45 of
msgid "**label**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:11 of
msgid "Text to use for the title"
msgstr ""

#: matplotlib.axes._axes.Axes.text:18
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:21
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:21 of
msgid "**fontdict**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:14 of
msgid ""
"A dictionary controlling the appearance of the title text, the default "
"*fontdict* is::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:24 of
msgid "**loc** : {'center', 'left', 'right'}, default: :rc:`axes.titlelocation`"
msgstr ""

#: of
msgid "{'center', 'left', 'right'}, default:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:24 of
msgid "Which title to set."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:29 of
msgid "**y** : float, default: :rc:`axes.titley`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:27 of
msgid ""
"Vertical Axes loation for the title (1.0 is the top).  If None (the "
"default), y is determined automatically to avoid decorators on the Axes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:32 of
msgid "**pad** : float, default: :rc:`axes.titlepad`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:32 of
msgid "The offset of the title from the top of the Axes, in points."
msgstr ""

#: matplotlib.axes._axes.Axes.text:25
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:39 of
msgid "`.Text`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:37 of
msgid "The matplotlib text instance representing the title"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:54 of
msgid "**\\*\\*kwargs** : `.Text` properties"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:53 of
msgid "Text properties"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_title:44 of
msgid ""
"Other keyword arguments are text properties, see `.Text` for a list of "
"valid text properties."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xlim3d:2 of
msgid "Alias for `set_xlim3d`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xlim3d:2 of
msgid "Set 3D x limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xlim3d:4 of
msgid "See :meth:`matplotlib.axes.Axes.set_xlim` for full documentation."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xmargin:2 of
msgid "Set padding of X data limits prior to autoscaling."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xmargin:4
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ymargin:4 of
msgid ""
"*m* times the data interval will be added to each end of that interval "
"before it is used in autoscaling. For example, if your data is in the "
"range [0, 2], a factor of ``m = 0.1`` will result in a range [-0.2, 2.2]."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xmargin:9
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ymargin:9 of
msgid ""
"Negative values -0.5 < m < 0 will result in clipping of the data range. "
"I.e. for a data range [0, 2], a factor of ``m = -0.1`` will result in a "
"range [0.2, 1.8]."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xmargin:29
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ymargin:29 of
msgid "**m**"
msgstr ""

#: of
msgid "float greater than -0.5"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale:2 of
msgid "Set the x-axis scale."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale:9
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale:9
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale:9 of
msgid "**value**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale:8
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale:8
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale:8 of
msgid ""
"The axis scale type to apply.  3D axes currently only support linear "
"scales; other scales yield nonsensical results."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_xscale:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale:12 of
msgid ""
"Keyword arguments are nominally forwarded to the scale class, but none of"
" them is applicable for linear scales."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ylim3d:2 of
msgid "Alias for `set_ylim3d`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ylim3d:2 of
msgid "Set 3D y limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ylim3d:4 of
msgid "See :meth:`matplotlib.axes.Axes.set_ylim` for full documentation."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_ymargin:2 of
msgid "Set padding of Y data limits prior to autoscaling."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_yscale:2 of
msgid "Set the y-axis scale."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zbound:2 of
msgid "Set the lower and upper numerical bounds of the z-axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zbound:4 of
msgid ""
"This method will honor axes inversion regardless of parameter order. It "
"will not change the autoscaling setting (`.get_autoscalez_on()`)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlabel:2 of
msgid "Set zlabel.  See doc for `.set_ylabel` for description."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlim3d:2 of
msgid "Alias for `set_zlim3d`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlim3d:2 of
msgid "Set 3D z limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zlim3d:4 of
msgid "See :meth:`matplotlib.axes.Axes.set_ylim` for full documentation"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zmargin:2 of
msgid "Set padding of Z data limits prior to autoscaling."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zmargin:4 of
msgid ""
"*m* times the data interval will be added to each end of that interval "
"before it is used in autoscaling."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zmargin:7 of
msgid "accepts: float in range 0 to 1"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zscale:2 of
msgid "Set the z-axis scale."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:2 of
msgid "Set the zaxis' labels with list of string labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:5 of
msgid ""
"This method should only be used after fixing the tick positions using "
"`.Axes3D.set_zticks`. Otherwise, the labels may end up in unexpected "
"positions."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:12
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:13 of
msgid "**labels**"
msgstr ""

#: of
msgid "list of str"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:12 of
msgid "The label texts."
msgstr ""

#: of
msgid "dict, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:15 of
msgid ""
"A dictionary controlling the appearance of the ticklabels. The default "
"*fontdict* is::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:24 of
msgid "Whether to set the minor ticklabels rather than the major ones."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:31 of
msgid "list of `.Text`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:29 of
msgid "The labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:45 of
msgid "**\\*\\*kwargs** : `~.text.Text` properties."
msgstr ""

#: matplotlib.axes._axes.Axes.text:87
#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticklabels:44 of
msgid "Text properties."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:2 of
msgid "Set the zaxis' tick locations and optionally labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:4 of
msgid ""
"If necessary, the view limits of the Axis are expanded so that all given "
"ticks are visible."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:10 of
msgid "**ticks**"
msgstr ""

#: of
msgid "list of floats"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:10 of
msgid "List of tick locations."
msgstr ""

#: of
msgid "list of str, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:13 of
msgid "List of tick labels. If not set, the labels show the data value."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:16 of
msgid "If ``False``, set the major ticks; if ``True``, the minor ticks."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:19 of
msgid ""
"`.Text` properties for the labels. These take effect only if you pass "
"*labels*. In other cases, please use `~.Axes.tick_params`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.set_zticks:32 of
msgid ""
"The mandatory expansion of the view limits is an intentional design "
"choice to prevent the surprise of a non-visible tick. If you need other "
"limits, you should set the limits explicitly after setting the ticks."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:2 of
msgid "Create a 3D stem plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:4 of
msgid ""
"A stem plot draws lines perpendicular to a baseline, and places markers "
"at the heads. By default, the baseline is defined by *x* and *y*, and "
"stems are drawn vertically from *bottom* to *z*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:11 of
msgid ""
"The positions of the heads of the stems. The stems are drawn along the "
"*orientation*-direction from the baseline at *bottom* (in the "
"*orientation*-coordinate) to the heads. By default, the *x* and *y* "
"positions are used for the baseline and *z* for the head position, but "
"this can be changed by *orientation*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:33 of
msgid "**linefmt**"
msgstr ""

#: of
msgid "str, default: 'C0-'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:18 of
msgid ""
"A string defining the properties of the vertical lines. Usually, this "
"will be a color or a color and a linestyle:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:22 of
msgid "Character"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:22 of
msgid "Line Style"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:24 of
msgid "``'-'``"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:24 of
msgid "solid line"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:25 of
msgid "``'--'``"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:25 of
msgid "dashed line"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:26 of
msgid "``'-.'``"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:26 of
msgid "dash-dot line"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:27 of
msgid "``':'``"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:27 of
msgid "dotted line"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:30 of
msgid ""
"Note: While it is technically possible to specify valid formats other "
"than color or color and linestyle (e.g. 'rx' or '-.'), this is beyond the"
" intention of the method and will most likely not result in a reasonable "
"plot."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:36 of
msgid "**markerfmt**"
msgstr ""

#: of
msgid "str, default: 'C0o'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:36 of
msgid "A string defining the properties of the markers at the stem heads."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:39 of
msgid "**basefmt**"
msgstr ""

#: of
msgid "str, default: 'C3-'"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:39 of
msgid "A format string defining the properties of the baseline."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:42 of
msgid "**bottom**"
msgstr ""

#: of
msgid "float, default: 0"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:42 of
msgid "The position of the baseline, in *orientation*-coordinates."
msgstr ""

#: of
msgid "str, default: None"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:45 of
msgid "The label to use for the stems in legends."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:48 of
msgid "**orientation**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:48 of
msgid "The direction along which stems are drawn."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:67 of
msgid "`.StemContainer`"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.stem:57 of
msgid ""
"The container may be treated like a tuple (*markerline*, *stemlines*, "
"*baseline*)"
msgstr ""

#: ../../gallery/mplot3d/stem3d_demo.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/stem3d_demo.py>`__, `png "
"<../../gallery/mplot3d/stem3d_demo_00_00.png>`__, `pdf "
"<../../gallery/mplot3d/stem3d_demo_00_00.pdf>`__)"
msgstr ""

#: ../../gallery/mplot3d/stem3d_demo.py:35
msgid ""
"(`png <../../gallery/mplot3d/stem3d_demo_01_00.png>`__, `pdf "
"<../../gallery/mplot3d/stem3d_demo_01_00.pdf>`__)"
msgstr ""

#: ../../gallery/mplot3d/stem3d_demo.py:63
msgid ""
"(`png <../../gallery/mplot3d/stem3d_demo_02_00.png>`__, `pdf "
"<../../gallery/mplot3d/stem3d_demo_02_00.pdf>`__)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.text:2 of
msgid ""
"Add text to the plot. kwargs will be passed on to Axes.text, except for "
"the *zdir* keyword, which sets the direction to be used as the z "
"direction."
msgstr ""

#: matplotlib.axes._axes.Axes.text:2 of
msgid "Add text to the Axes."
msgstr ""

#: matplotlib.axes._axes.Axes.text:4 of
msgid "Add the text *s* to the Axes at location *x*, *y* in data coordinates."
msgstr ""

#: matplotlib.axes._axes.Axes.text:11 of
msgid "**x, y**"
msgstr ""

#: matplotlib.axes._axes.Axes.text:9 of
msgid ""
"The position to place the text. By default, this is in data coordinates. "
"The coordinate system can be changed using the *transform* parameter."
msgstr ""

#: matplotlib.axes._axes.Axes.text:14 of
msgid "The text."
msgstr ""

#: of
msgid "dict, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.text:17 of
msgid ""
"A dictionary to override the default text properties. If fontdict is "
"None, the defaults are determined by `.rcParams`."
msgstr ""

#: matplotlib.axes._axes.Axes.text:23 of
msgid "The created `.Text` instance."
msgstr ""

#: matplotlib.axes._axes.Axes.text:88 of
msgid "**\\*\\*kwargs** : `~matplotlib.text.Text` properties."
msgstr ""

#: matplotlib.axes._axes.Axes.text:30 of
msgid "Other miscellaneous text parameters."
msgstr ""

#: matplotlib.axes._axes.Axes.text:41 of
msgid ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:42 of
msgid ":meth:`bbox <matplotlib.text.Text.set_bbox>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:42 of
msgid "dict with properties for `.patches.FancyBboxPatch`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:46 of
msgid ":meth:`color <matplotlib.text.Text.set_color>` or c"
msgstr ""

#: matplotlib.axes._axes.Axes.text:48 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` or family"
msgstr ""

#: matplotlib.axes._axes.Axes.text:48 of
msgid "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:49 of
msgid ""
":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` or font "
"or font_properties"
msgstr ""

#: matplotlib.axes._axes.Axes.text:49 of
msgid "`.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:50 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` or size"
msgstr ""

#: matplotlib.axes._axes.Axes.text:50 of
msgid ""
"float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', "
"'xx-large'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:51 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"
msgstr ""

#: matplotlib.axes._axes.Axes.text:51 of
msgid ""
"{a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', "
"'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', "
"'extra-expanded', 'ultra-expanded'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:52 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` or style"
msgstr ""

#: matplotlib.axes._axes.Axes.text:52 of
msgid "{'normal', 'italic', 'oblique'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:53 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` or variant"
msgstr ""

#: matplotlib.axes._axes.Axes.text:53 of
msgid "{'normal', 'small-caps'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:54 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"
msgstr ""

#: matplotlib.axes._axes.Axes.text:54 of
msgid ""
"{a numeric value in range 0-1000, 'ultralight', 'light', 'normal', "
"'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', "
"'bold', 'heavy', 'extra bold', 'black'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:56 of
msgid ""
":meth:`horizontalalignment "
"<matplotlib.text.Text.set_horizontalalignment>` or ha"
msgstr ""

#: matplotlib.axes._axes.Axes.text:56 of
msgid "{'center', 'right', 'left'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:59 of
msgid ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:59 of
msgid "float (multiple of font size)"
msgstr ""

#: matplotlib.axes._axes.Axes.text:60 of
msgid ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:61 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` or ma"
msgstr ""

#: matplotlib.axes._axes.Axes.text:61 of
msgid "{'left', 'right', 'center'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:62 of
msgid ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:65 of
msgid ":meth:`position <matplotlib.text.Text.set_position>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:67 of
msgid ":meth:`rotation <matplotlib.text.Text.set_rotation>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:67 of
msgid "float or {'vertical', 'horizontal'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:68 of
msgid ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:68 of
msgid "{None, 'default', 'anchor'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:71 of
msgid ":meth:`text <matplotlib.text.Text.set_text>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:73 of
msgid ""
":meth:`transform_rotates_text "
"<matplotlib.text.Text.set_transform_rotates_text>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:75 of
msgid ":meth:`usetex <matplotlib.text.Text.set_usetex>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:76 of
msgid ""
":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or"
" va"
msgstr ""

#: matplotlib.axes._axes.Axes.text:76 of
msgid "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
msgstr ""

#: matplotlib.axes._axes.Axes.text:78 of
msgid ":meth:`wrap <matplotlib.text.Text.set_wrap>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:79 of
msgid ":meth:`x <matplotlib.text.Text.set_x>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:80 of
msgid ":meth:`y <matplotlib.text.Text.set_y>`"
msgstr ""

#: matplotlib.axes._axes.Axes.text:92 of
msgid "Individual keyword arguments can be used to override any given parameter::"
msgstr ""

#: matplotlib.axes._axes.Axes.text:97 of
msgid ""
"The default transform specifies that text is in data coords, "
"alternatively, you can specify text in axis coords ((0, 0) is lower-left "
"and (1, 1) is upper-right).  The example below places text in the center "
"of the Axes::"
msgstr ""

#: matplotlib.axes._axes.Axes.text:105 of
msgid ""
"You can put a rectangular box around the text instance (e.g., to set a "
"background color) by using the keyword *bbox*.  *bbox* is a dictionary of"
" `~matplotlib.patches.Rectangle` properties.  For example::"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tick_params:2 of
msgid "Convenience method for changing the appearance of ticks and tick labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tick_params:5 of
msgid ""
"See :meth:`matplotlib.axes.Axes.tick_params` for more complete "
"documentation."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tick_params:8 of
msgid ""
"The only difference is that setting *axis* to 'both' will mean that the "
"settings are applied to all three axes. Also, the *axis* parameter also "
"accepts a value of 'z', which would mean to apply to only the z-axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tick_params:13 of
msgid ""
"Also, because of how Axes3D objects are drawn very differently from "
"regular 2D axes, some of these settings may have ambiguous meaning.  For "
"simplicity, the 'z' axis will accept settings as if it was like the 'y' "
"axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tick_params:19 of
msgid "Axes3D currently ignores some of these settings."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:5
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:5 of
msgid ""
"This method currently produces incorrect output due to a longstanding bug"
" in 3D PolyCollection rendering."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:11 of
msgid ""
"Input data. See `~matplotlib.axes.Axes.tricontour` for acceptable data "
"shapes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:32 of
msgid "Other arguments are forwarded to `matplotlib.axes.Axes.tricontour`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontour:49
#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:44 of
msgid "matplotlib.tri.tricontour.TriContourSet"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:11 of
msgid ""
"Input data. See `~matplotlib.axes.Axes.tricontourf` for acceptable data "
"shapes."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.tricontourf:26 of
msgid "Other arguments are forwarded to `matplotlib.axes.Axes.tricontourf`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim:2 of
msgid "Extend the `~.Axes.dataLim` Bbox to include the given points."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim:4 of
msgid ""
"If no data is set currently, the Bbox will ignore its limits and set the "
"bound to be the bounds of the xydata (*xys*). Otherwise, it will compute "
"the bounds of the union of its current data and the data in *xys*."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim:13 of
msgid "**xys**"
msgstr ""

#: of
msgid "2D array-like"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim:12 of
msgid ""
"The points to include in the data limits Bbox. This can be either a list "
"of (x, y) tuples or a Nx2 array."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim:29 of
msgid "**updatex, updatey**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.update_datalim:16 of
msgid "Whether to update the x/y limits."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:2 of
msgid "Set the elevation and azimuth of the axes in degrees (not radians)."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:4 of
msgid "This can be used to rotate the axes programmatically."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:9 of
msgid ""
"The elevation angle in the vertical plane in degrees. If None then the "
"initial value as specified in the `Axes3D` constructor is used."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:14 of
msgid ""
"The azimuth angle in the horizontal plane in degrees. If None then the "
"initial value as specified in the `Axes3D` constructor is used."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:32 of
msgid "**vertical_axis**"
msgstr ""

#: of
msgid "{\"z\", \"x\", \"y\"}, default: \"z\""
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.view_init:19 of
msgid "The axis to align vertically. *azim* rotates about this axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:2 of
msgid "Plot a set of filled voxels"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:4 of
msgid ""
"All voxels are plotted as 1x1x1 cubes on the axis, with ``filled[0, 0, "
"0]`` placed with its lower corner at the origin. Occluded faces are not "
"plotted."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:12 of
msgid "**filled**"
msgstr ""

#: of
msgid "3D np.array of bool"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:11 of
msgid "A 3D array of values, with truthy values indicating which voxels to fill"
msgstr ""

#: of
msgid "3D np.array, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:15 of
msgid ""
"The coordinates of the corners of the voxels. This should broadcast to a "
"shape one larger in every dimension than the shape of *filled*.  These "
"can be used to plot non-cubic voxels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:19 of
msgid ""
"If not specified, defaults to increasing integers along each axis, like "
"those returned by :func:`~numpy.indices`. As indicated by the ``/`` in "
"the function signature, these arguments can only be passed positionally."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:36 of
msgid "**facecolors, edgecolors**"
msgstr ""

#: of
msgid "array-like, optional"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:25 of
msgid ""
"The color to draw the faces and edges of the voxels. Can only be passed "
"as keyword arguments. These parameters can be:"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:29 of
msgid ""
"A single color value, to color all voxels the same color. This can be "
"either a string, or a 1D rgb/rgba array"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:31 of
msgid ""
"``None``, the default, to use a single color for the faces, and the style"
" default for the edges."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:33 of
msgid ""
"A 3D ndarray of color names, with each item the color for the "
"corresponding voxel. The size must match the voxels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:35 of
msgid "A 4D ndarray of rgb/rgba data, with the components along the last axis."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:46 of
msgid ""
"Additional keyword arguments to pass onto "
"`~mpl_toolkits.mplot3d.art3d.Poly3DCollection`."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:65 of
msgid "**faces**"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.voxels:52 of
msgid ""
"A dictionary indexed by coordinate, where ``faces[i, j, k]`` is a "
"`.Poly3DCollection` of the faces drawn for the voxel ``filled[i, j, k]``."
" If no faces were drawn for a given voxel, either because it was not "
"asked to be drawn, or it is fully occluded, then ``(i, j, k) not in "
"faces``."
msgstr ""

#: ../../gallery/mplot3d/voxels.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/voxels.py>`__, `png "
"<../../gallery/mplot3d/voxels.png>`__, `pdf "
"<../../gallery/mplot3d/voxels.pdf>`__)"
msgstr ""

#: ../../gallery/mplot3d/voxels_rgb.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/voxels_rgb.py>`__, `png "
"<../../gallery/mplot3d/voxels_rgb.png>`__, `pdf "
"<../../gallery/mplot3d/voxels_rgb.pdf>`__)"
msgstr ""

#: ../../gallery/mplot3d/voxels_torus.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/voxels_torus.py>`__, `png "
"<../../gallery/mplot3d/voxels_torus.png>`__, `pdf "
"<../../gallery/mplot3d/voxels_torus.pdf>`__)"
msgstr ""

#: ../../gallery/mplot3d/voxels_numpy_logo.py:7
msgid ""
"(`Source code <../../gallery/mplot3d/voxels_numpy_logo.py>`__, `png "
"<../../gallery/mplot3d/voxels_numpy_logo.png>`__, `pdf "
"<../../gallery/mplot3d/voxels_numpy_logo.pdf>`__)"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_date:2 of
msgid "Set up axis ticks and labels to treat data along the zaxis as dates."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_date:16 of
msgid "**tz** : str or `datetime.tzinfo`, default: :rc:`timezone`"
msgstr ""

#: of
msgid "str or"
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_date:8 of
msgid "The timezone used to create date labels."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_date:20 of
msgid ""
"This function is merely provided for completeness, but 3D axes do not "
"support dates for ticks, and so this may not work as expected."
msgstr ""

#: mpl_toolkits.mplot3d.axes3d.Axes3D.zaxis_inverted:2 of
msgid "Returns True if the z-axis is inverted."
msgstr ""

