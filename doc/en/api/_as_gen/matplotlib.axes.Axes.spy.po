# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.spy.rst:2
msgid "matplotlib.axes.Axes.spy"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:2 of
msgid "Plot the sparsity pattern of a 2D array."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:4 of
msgid "This visualizes the non-zero values of the array."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:6 of
msgid ""
"Two plotting styles are available: image and marker. Both are available "
"for full arrays, but only the marker style works for "
"`scipy.sparse.spmatrix` instances."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:10 of
msgid "**Image style**"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:12 of
msgid ""
"If *marker* and *markersize* are *None*, `~.Axes.imshow` is used. Any "
"extra remaining keyword arguments are passed to this method."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:15 of
msgid "**Marker style**"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:17 of
msgid ""
"If *Z* is a `scipy.sparse.spmatrix` or *marker* or *markersize* are "
"*None*, a `.Line2D` object will be returned with the value of marker "
"determining the marker type, and any remaining keyword arguments passed "
"to `~.Axes.plot`."
msgstr ""

#: matplotlib.axes._axes.Axes.spy of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:25 of
msgid "**Z**"
msgstr ""

#: of
msgid "(M, N) array-like"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:25 of
msgid "The array to be plotted."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:33 of
msgid "**precision**"
msgstr ""

#: of
msgid "float or 'present', default: 0"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:28 of
msgid ""
"If *precision* is 0, any non-zero value will be plotted. Otherwise, "
"values of :math:`|Z| > precision` will be plotted."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:31 of
msgid ""
"For `scipy.sparse.spmatrix` instances, you can also pass 'present'. In "
"this case any value present in the array will be plotted, even if it is "
"identically zero."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:47 of
msgid "**aspect**"
msgstr ""

#: of
msgid "{'equal', 'auto', None} or float, default: 'equal'"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:36 of
msgid ""
"The aspect ratio of the Axes.  This parameter is particularly relevant "
"for images since it determines whether data pixels are square."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:40 of
msgid ""
"This parameter is a shortcut for explicitly calling `.Axes.set_aspect`. "
"See there for further details."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:43 of
msgid "'equal': Ensures an aspect ratio of 1. Pixels will be square."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:44 of
msgid ""
"'auto': The Axes is kept fixed and the aspect is adjusted so that the "
"data fit in the Axes. In general, this will result in non-square pixels."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:47 of
msgid "*None*: Use :rc:`image.aspect`."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:52 of
msgid "**origin** : {'upper', 'lower'}, default: :rc:`image.origin`"
msgstr ""

#: of
msgid "{'upper', 'lower'}, default:"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:50 of
msgid ""
"Place the [0, 0] index of the array in the upper left or lower left "
"corner of the Axes. The convention 'upper' is typically used for matrices"
" and images."
msgstr ""

#: matplotlib.axes._axes.Axes.spy of
msgid "Returns"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:59 of
msgid "`~matplotlib.image.AxesImage` or `.Line2D`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:57 of
msgid "The return type depends on the plotting style (see above)."
msgstr ""

#: matplotlib.axes._axes.Axes.spy of
msgid "Other Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:133 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:64 of
msgid "The supported additional parameters depend on the plotting style."
msgstr ""

#: matplotlib.axes._axes.Axes.spy:66 of
msgid ""
"For the image style, you can pass the following additional parameters of "
"`~.Axes.imshow`:"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:69 of
msgid "*cmap*"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:70 of
msgid "*alpha*"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:71 of
msgid "*url*"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:72 of
msgid "any `.Artist` properties (passed on to the `.AxesImage`)"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:74 of
msgid ""
"For the marker style, you can pass any `.Line2D` property except for "
"*linestyle*:"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:81 of
msgid "Property"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:81 of
msgid "Description"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:83 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:83 of
msgid ""
"a filter function, which takes a (m, n, 3) float array and a dpi value, "
"and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:84 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:84 of
msgid "scalar or None"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:85 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:85 matplotlib.axes._axes.Axes.spy:86
#: matplotlib.axes._axes.Axes.spy:88 matplotlib.axes._axes.Axes.spy:99
#: matplotlib.axes._axes.Axes.spy:113 matplotlib.axes._axes.Axes.spy:120 of
msgid "bool"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:86 of
msgid ":meth:`antialiased <matplotlib.lines.Line2D.set_antialiased>` or aa"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:87 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:87 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:88 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:89 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:89 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:90 of
msgid ":meth:`color <matplotlib.lines.Line2D.set_color>` or c"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:90 matplotlib.axes._axes.Axes.spy:104
#: matplotlib.axes._axes.Axes.spy:106 matplotlib.axes._axes.Axes.spy:107 of
msgid "color"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:91 of
msgid ":meth:`dash_capstyle <matplotlib.lines.Line2D.set_dash_capstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:91 matplotlib.axes._axes.Axes.spy:116 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:92 of
msgid ":meth:`dash_joinstyle <matplotlib.lines.Line2D.set_dash_joinstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:92 matplotlib.axes._axes.Axes.spy:117 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:93 of
msgid ":meth:`dashes <matplotlib.lines.Line2D.set_dashes>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:93 of
msgid "sequence of floats (on/off ink in points) or (None, None)"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:94 of
msgid ":meth:`data <matplotlib.lines.Line2D.set_data>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:94 of
msgid "(2, N) array or two 1D arrays"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:95 of
msgid ":meth:`drawstyle <matplotlib.lines.Line2D.set_drawstyle>` or ds"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:95 of
msgid ""
"{'default', 'steps', 'steps-pre', 'steps-mid', 'steps-post'}, default: "
"'default'"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:96 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:96 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:97 of
msgid ":meth:`fillstyle <matplotlib.lines.Line2D.set_fillstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:97 of
msgid "{'full', 'left', 'right', 'bottom', 'top', 'none'}"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:98 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:98 matplotlib.axes._axes.Axes.spy:119 of
msgid "str"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:99 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:100 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:100 of
msgid "object"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:101 of
msgid ":meth:`linestyle <matplotlib.lines.Line2D.set_linestyle>` or ls"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:101 of
msgid "{'-', '--', '-.', ':', '', (offset, on-off-seq), ...}"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:102 of
msgid ":meth:`linewidth <matplotlib.lines.Line2D.set_linewidth>` or lw"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:102 matplotlib.axes._axes.Axes.spy:105
#: matplotlib.axes._axes.Axes.spy:108 matplotlib.axes._axes.Axes.spy:112
#: matplotlib.axes._axes.Axes.spy:123 of
msgid "float"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:103 of
msgid ":meth:`marker <matplotlib.lines.Line2D.set_marker>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:103 of
msgid "marker style string, `~.path.Path` or `~.markers.MarkerStyle`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:104 of
msgid ""
":meth:`markeredgecolor <matplotlib.lines.Line2D.set_markeredgecolor>` or "
"mec"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:105 of
msgid ""
":meth:`markeredgewidth <matplotlib.lines.Line2D.set_markeredgewidth>` or "
"mew"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:106 of
msgid ""
":meth:`markerfacecolor <matplotlib.lines.Line2D.set_markerfacecolor>` or "
"mfc"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:107 of
msgid ""
":meth:`markerfacecoloralt "
"<matplotlib.lines.Line2D.set_markerfacecoloralt>` or mfcalt"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:108 of
msgid ":meth:`markersize <matplotlib.lines.Line2D.set_markersize>` or ms"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:109 of
msgid ":meth:`markevery <matplotlib.lines.Line2D.set_markevery>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:109 of
msgid ""
"None or int or (int, int) or slice or list[int] or float or (float, "
"float) or list[bool]"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:110 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:110 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:111 of
msgid ":meth:`picker <matplotlib.lines.Line2D.set_picker>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:111 of
msgid "float or callable[[Artist, Event], tuple[bool, dict]]"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:112 of
msgid ":meth:`pickradius <matplotlib.lines.Line2D.set_pickradius>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:113 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:114 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:114 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:115 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:115 of
msgid "bool or None"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:116 of
msgid ":meth:`solid_capstyle <matplotlib.lines.Line2D.set_solid_capstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:117 of
msgid ":meth:`solid_joinstyle <matplotlib.lines.Line2D.set_solid_joinstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:118 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:118 of
msgid "unknown"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:119 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:120 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:121 of
msgid ":meth:`xdata <matplotlib.lines.Line2D.set_xdata>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:121 matplotlib.axes._axes.Axes.spy:122 of
msgid "1D array"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:122 of
msgid ":meth:`ydata <matplotlib.lines.Line2D.set_ydata>`"
msgstr ""

#: matplotlib.axes._axes.Axes.spy:123 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.spy.examples:2
msgid "Examples using ``matplotlib.axes.Axes.spy``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.spy.examples:10
msgid "Spy Demos"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.spy.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.spy.examples:18
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_spy_demos.py`"
msgstr ""

