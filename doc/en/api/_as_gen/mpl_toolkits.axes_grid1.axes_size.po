# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:2
msgid "mpl\\_toolkits.axes\\_grid1.axes\\_size"
msgstr ""

#: mpl_toolkits.axes_grid1.axes_size:1 of
msgid ""
"Provides classes of simple units that will be used with AxesDivider class"
" (or others) to determine the size of each axes. The unit classes define "
"`get_size` method that returns a tuple of two floats, meaning relative "
"and absolute sizes, respectively."
msgstr ""

#: mpl_toolkits.axes_grid1.axes_size:6 of
msgid ""
"Note that this class is nothing more than a simple tuple of two floats. "
"Take a look at the Divider class to see how these two values are used."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:14
msgid "Classes"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Add <mpl_toolkits.axes_grid1.axes_size.Add>`\\ \\(a\\, b\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`AddList <mpl_toolkits.axes_grid1.axes_size.AddList>`\\ "
"\\(add\\_list\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`AxesX <mpl_toolkits.axes_grid1.axes_size.AxesX>`\\ \\(axes\\[\\,"
" aspect\\, ref\\_ax\\]\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
"Scaled size whose relative part corresponds to the data width of the "
"*axes* multiplied by the *aspect*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`AxesY <mpl_toolkits.axes_grid1.axes_size.AxesY>`\\ \\(axes\\[\\,"
" aspect\\, ref\\_ax\\]\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
"Scaled size whose relative part corresponds to the data height of the "
"*axes* multiplied by the *aspect*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`Fixed <mpl_toolkits.axes_grid1.axes_size.Fixed>`\\ "
"\\(fixed\\_size\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Simple fixed size with absolute part = *fixed_size* and relative part = 0."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`Fraction <mpl_toolkits.axes_grid1.axes_size.Fraction>`\\ "
"\\(fraction\\, ref\\_size\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "An instance whose size is a *fraction* of the *ref_size*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`GetExtentHelper "
"<mpl_toolkits.axes_grid1.axes_size.GetExtentHelper>`\\ \\(ax\\, "
"direction\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`MaxExtent <mpl_toolkits.axes_grid1.axes_size.MaxExtent>`\\ "
"\\(artist\\_list\\, w\\_or\\_h\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
"Size whose absolute part is either the largest width or the largest "
"height of the given *artist_list*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`MaxHeight <mpl_toolkits.axes_grid1.axes_size.MaxHeight>`\\ "
"\\(artist\\_list\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Size whose absolute part is the largest height of the given *artist_list*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`MaxWidth <mpl_toolkits.axes_grid1.axes_size.MaxWidth>`\\ "
"\\(artist\\_list\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "Size whose absolute part is the largest width of the given *artist_list*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`Padded <mpl_toolkits.axes_grid1.axes_size.Padded>`\\ \\(size\\, "
"pad\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
"Return a instance where the absolute part of *size* is increase by the "
"amount of *pad*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ":py:obj:`Scalable <mpl_toolkits.axes_grid1.axes_size.Scalable>`\\"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid "alias of :py:class:`mpl_toolkits.axes_grid1.axes_size.Scaled`"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`Scaled <mpl_toolkits.axes_grid1.axes_size.Scaled>`\\ "
"\\(scalable\\_size\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
"Simple scaled(?) size with absolute part = 0 and relative part = "
"*scalable_size*."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:39:<autosummary>:1
msgid ""
":py:obj:`SizeFromFunc <mpl_toolkits.axes_grid1.axes_size.SizeFromFunc>`\\"
" \\(func\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:41
msgid "Functions"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:50:<autosummary>:1
msgid ""
":py:obj:`from_any <mpl_toolkits.axes_grid1.axes_size.from_any>`\\ "
"\\(size\\[\\, fraction\\_ref\\]\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axes_grid1.axes_size.rst:50:<autosummary>:1
msgid ""
"Create a Fixed unit when the first argument is a float, or a Fraction "
"unit if that is a string that ends with %."
msgstr ""

