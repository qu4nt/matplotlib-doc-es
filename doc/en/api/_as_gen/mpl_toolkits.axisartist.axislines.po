# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:2
msgid "mpl\\_toolkits.axisartist.axislines"
msgstr ""

#: mpl_toolkits.axisartist.axislines:1 of
msgid ""
"Axislines includes modified implementation of the Axes class. The biggest"
" difference is that the artists responsible for drawing the axis spine, "
"ticks, ticklabels and axis labels are separated out from Matplotlib's "
"Axis class. Originally, this change was motivated to support curvilinear "
"grid. Here are a few reasons that I came up with a new axes class:"
msgstr ""

#: mpl_toolkits.axisartist.axislines:7 of
msgid ""
"\"top\" and \"bottom\" x-axis (or \"left\" and \"right\" y-axis) can have"
" different ticks (tick locations and labels). This is not possible with "
"the current Matplotlib, although some twin axes trick can help."
msgstr ""

#: mpl_toolkits.axisartist.axislines:11 of
msgid "Curvilinear grid."
msgstr ""

#: mpl_toolkits.axisartist.axislines:13 of
msgid "angled ticks."
msgstr ""

#: mpl_toolkits.axisartist.axislines:15 of
msgid ""
"In the new axes class, xaxis and yaxis is set to not visible by default, "
"and new set of artist (AxisArtist) are defined to draw axis line, ticks, "
"ticklabels and axis label. Axes.axis attribute serves as a dictionary of "
"these artists, i.e., ax.axis[\"left\"] is a AxisArtist instance "
"responsible to draw left y-axis. The default Axes.axis contains "
"\"bottom\", \"left\", \"top\" and \"right\"."
msgstr ""

#: mpl_toolkits.axisartist.axislines:22 of
msgid ""
"AxisArtist can be considered as a container artist and has following "
"children artists which will draw ticks, labels, etc."
msgstr ""

#: mpl_toolkits.axisartist.axislines:25 of
msgid "line"
msgstr ""

#: mpl_toolkits.axisartist.axislines:26 of
msgid "major_ticks, major_ticklabels"
msgstr ""

#: mpl_toolkits.axisartist.axislines:27 of
msgid "minor_ticks, minor_ticklabels"
msgstr ""

#: mpl_toolkits.axisartist.axislines:28 of
msgid "offsetText"
msgstr ""

#: mpl_toolkits.axisartist.axislines:29 of
msgid "label"
msgstr ""

#: mpl_toolkits.axisartist.axislines:31 of
msgid ""
"Note that these are separate artists from `matplotlib.axis.Axis`, thus "
"most tick-related functions in Matplotlib won't work. For example, color "
"and markerwidth of the ``ax.axis[\"bottom\"].major_ticks`` will follow "
"those of Axes.xaxis unless explicitly specified."
msgstr ""

#: mpl_toolkits.axisartist.axislines:36 of
msgid ""
"In addition to AxisArtist, the Axes will have *gridlines* attribute, "
"which obviously draws grid lines. The gridlines needs to be separated "
"from the axis as some gridlines can never pass any axis."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:14
msgid "Classes"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
":py:obj:`Axes <mpl_toolkits.axisartist.axislines.Axes>`\\ "
"\\(\\*args\\[\\, grid\\_helper\\]\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid "Build an Axes in a figure."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
":py:obj:`AxesZero <mpl_toolkits.axisartist.axislines.AxesZero>`\\ "
"\\(\\*args\\[\\, grid\\_helper\\]\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
":py:obj:`AxisArtistHelper "
"<mpl_toolkits.axisartist.axislines.AxisArtistHelper>`\\ \\(\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
"AxisArtistHelper should define following method with given APIs. Note "
"that the first axes argument will be axes attribute of the caller "
"artist.::."
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
":py:obj:`AxisArtistHelperRectlinear "
"<mpl_toolkits.axisartist.axislines.AxisArtistHelperRectlinear>`\\ \\(\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
":py:obj:`GridHelperBase "
"<mpl_toolkits.axisartist.axislines.GridHelperBase>`\\ \\(\\)"
msgstr ""

#: ../../api/_as_gen/mpl_toolkits.axisartist.axislines.rst:31:<autosummary>:1
msgid ""
":py:obj:`GridHelperRectlinear "
"<mpl_toolkits.axisartist.axislines.GridHelperRectlinear>`\\ \\(axes\\)"
msgstr ""

