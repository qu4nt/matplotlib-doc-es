# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.set_aspect.rst:2
msgid "matplotlib.axes.Axes.set\\_aspect"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:2 of
msgid "Set the aspect ratio of the axes scaling, i.e. y/x-scale."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:15 of
msgid "**aspect**"
msgstr ""

#: of
msgid "{'auto', 'equal'} or float"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:8 of
msgid "Possible values:"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:10 of
msgid "'auto': fill the position rectangle with data."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:11 of
msgid "'equal': same as ``aspect=1``, i.e. same scaling for x and y."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:12 of
msgid ""
"*float*: The displayed size of 1 unit in y-data coordinates will be "
"*aspect* times the displayed size of 1 unit in x-data coordinates; e.g. "
"for ``aspect=2`` a square in data coordinates will be rendered with a "
"height of twice its width."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:20 of
msgid "**adjustable**"
msgstr ""

#: of
msgid "None or {'box', 'datalim'}, optional"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:18 of
msgid ""
"If not ``None``, this defines which parameter will be adjusted to meet "
"the required aspect. See `.set_adjustable` for further details."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:37 of
msgid "**anchor**"
msgstr ""

#: of
msgid "None or str or (float, float), optional"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:23 of
msgid ""
"If not ``None``, this defines where the Axes will be drawn if there is "
"extra space due to aspect constraints. The most common way to to specify "
"the anchor are abbreviations of cardinal directions:"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:28 of
msgid "value"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:28 of
msgid "description"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:30 of
msgid "'C'"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:30 of
msgid "centered"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:31 of
msgid "'SW'"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:31 of
msgid "lower left corner"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:32 of
msgid "'S'"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:32 of
msgid "middle of bottom edge"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:33 of
msgid "'SE'"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:33 of
msgid "lower right corner"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:34 of
msgid "etc."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:37 of
msgid "See `~.Axes.set_anchor` for further details."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:47 of
msgid "**share**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:40 of
msgid "If ``True``, apply the settings to all shared Axes."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:52 of
msgid ":obj:`matplotlib.axes.Axes.set_adjustable`"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:53 of
msgid "Set how the Axes adjusts to achieve the required aspect ratio."
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:54 of
msgid ":obj:`matplotlib.axes.Axes.set_anchor`"
msgstr ""

#: matplotlib.axes._base._AxesBase.set_aspect:55 of
msgid "Set the position in case of extra space."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.set_aspect.examples:2
msgid "Examples using ``matplotlib.axes.Axes.set_aspect``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.set_aspect.examples:10
msgid "The double pendulum problem"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.set_aspect.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.set_aspect.examples:18
msgid ":ref:`sphx_glr_gallery_animation_double_pendulum.py`"
msgstr ""

