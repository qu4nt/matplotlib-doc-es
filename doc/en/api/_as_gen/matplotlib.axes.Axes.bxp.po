# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.bxp.rst:2
msgid "matplotlib.axes.Axes.bxp"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:2 of
msgid "Drawing function for box and whisker plots."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:4 of
msgid ""
"Make a box and whisker plot for each column of *x* or each vector in "
"sequence *x*.  The box extends from the lower to upper quartile values of"
" the data, with a line at the median. The whiskers extend from the box to"
" show the range of the data.  Flier points are those past the end of the "
"whiskers."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:28 of
msgid "**bxpstats**"
msgstr ""

#: of
msgid "list of dicts"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:13 of
msgid ""
"A list of dictionaries containing stats for each boxplot. Required keys "
"are:"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:16 of
msgid "``med``: Median (scalar)."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:17 of
msgid "``q1``, ``q3``: First & third quartiles (scalars)."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:18 of
msgid "``whislo``, ``whishi``: Lower & upper whisker positions (scalars)."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:20 of
msgid "Optional keys are:"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:22 of
msgid "``mean``: Mean (scalar).  Needed if ``showmeans=True``."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:23 of
msgid ""
"``fliers``: Data beyond the whiskers (array-like). Needed if "
"``showfliers=True``."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:25 of
msgid ""
"``cilo``, ``cihi``: Lower & upper confidence intervals about the median. "
"Needed if ``shownotches=True``."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:27 of
msgid ""
"``label``: Name of the dataset (str).  If available, this will be used a "
"tick label for the boxplot"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:32 of
msgid "**positions**"
msgstr ""

#: of
msgid "array-like, default: [1, 2, ..., n]"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:31 of
msgid ""
"The positions of the boxes. The ticks and limits are automatically set to"
" match the positions."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:36 of
msgid "**widths**"
msgstr ""

#: of
msgid "float or array-like, default: None"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:35 of
msgid ""
"The widths of the boxes.  The default is ``clip(0.15*(distance between "
"extreme positions), 0.15, 0.5)``."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:40 of
msgid "**vert**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:39 of
msgid ""
"If `True` (default), makes the boxes vertical. If `False`, makes "
"horizontal boxes."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:44 of
msgid "**patch_artist**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:43 of
msgid ""
"If `False` produces boxes with the `.Line2D` artist. If `True` produces "
"boxes with the `~matplotlib.patches.Patch` artist."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:49 of
msgid "**shownotches, showmeans, showcaps, showbox, showfliers**"
msgstr ""

#: of
msgid "bool"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:47 of
msgid ""
"Whether to draw the CI notches, the mean value (both default to False), "
"the caps, the box, and the fliers (all three default to True)."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:53 of
msgid "**boxprops, whiskerprops, capprops, flierprops, medianprops, meanprops**"
msgstr ""

#: of
msgid "dict, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:52 of
msgid ""
"Artist properties for the boxes, whiskers, caps, fliers, medians, and "
"means."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:59 of
msgid "**meanline**"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:56 of
msgid ""
"If `True` (and *showmeans* is `True`), will try to render the mean as a "
"line spanning the full width of the box according to *meanprops*. Not "
"recommended if *shownotches* is also True. Otherwise, means will be shown"
" as points."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:63 of
msgid "**manage_ticks**"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:62 of
msgid ""
"If True, the tick locations and labels will be adjusted to match the "
"boxplot positions."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:66 of
msgid "**zorder** : float, default: ``Line2D.zorder = 2``"
msgstr ""

#: of
msgid "float, default:"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:66 of
msgid "The zorder of the resulting boxplot."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp of
msgid "Returns"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:90 of
msgid "dict"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:71 of
msgid ""
"A dictionary mapping each component of the boxplot to a list of the "
"`.Line2D` instances created. That dictionary has the following keys "
"(assuming vertical boxplots):"
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:75 of
msgid ""
"``boxes``: main bodies of the boxplot showing the quartiles, and the "
"median's confidence intervals if enabled."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:77 of
msgid "``medians``: horizontal lines at the median of each box."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:78 of
msgid "``whiskers``: vertical lines up to the last non-outlier data."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:79 of
msgid "``caps``: horizontal lines at the ends of the whiskers."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:80 of
msgid "``fliers``: points representing data beyond the whiskers (fliers)."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:81 of
msgid "``means``: points or lines representing the means."
msgstr ""

#: matplotlib.axes._axes.Axes.bxp:93 of
msgid "Examples"
msgstr ""

#: ../../gallery/statistics/bxp.py:7
msgid ""
"(`Source code <../../gallery/statistics/bxp.py>`__, `png "
"<../../gallery/statistics/bxp_00_00.png>`__, `pdf "
"<../../gallery/statistics/bxp_00_00.pdf>`__)"
msgstr ""

#: ../../gallery/statistics/bxp.py:35
msgid ""
"(`png <../../gallery/statistics/bxp_01_00.png>`__, `pdf "
"<../../gallery/statistics/bxp_01_00.pdf>`__)"
msgstr ""

