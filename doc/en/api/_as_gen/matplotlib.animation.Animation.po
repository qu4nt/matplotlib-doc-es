# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.animation.Animation.rst:2
msgid "matplotlib.animation.Animation"
msgstr ""

#: matplotlib.animation.Animation:2 of
msgid "A base class for Animations."
msgstr ""

#: matplotlib.animation.Animation:4 of
msgid ""
"This class is not usable as is, and should be subclassed to provide "
"needed behavior."
msgstr ""

#: matplotlib.animation.Animation:9 of
msgid ""
"You must store the created Animation in a variable that lives as long as "
"the animation should run. Otherwise, the Animation object will be "
"garbage-collected and the animation stops."
msgstr ""

#: matplotlib.animation.Animation matplotlib.animation.Animation.save
#: matplotlib.animation.Animation.to_html5_video
#: matplotlib.animation.Animation.to_jshtml of
msgid "Parameters"
msgstr ""

#: matplotlib.animation.Animation:16 of
msgid "**fig** : `~matplotlib.figure.Figure`"
msgstr ""

#: matplotlib.animation.Animation:15 of
msgid "Figure"
msgstr ""

#: matplotlib.animation.Animation:16 of
msgid "The figure object used to get needed events, such as draw or resize."
msgstr ""

#: matplotlib.animation.Animation:23 of
msgid "**event_source**"
msgstr ""

#: of
msgid "object, optional"
msgstr ""

#: matplotlib.animation.Animation:19 of
msgid ""
"A class that can run a callback when desired events are generated, as "
"well as be stopped and started."
msgstr ""

#: matplotlib.animation.Animation:22 of
msgid ""
"Examples include timers (see `TimedAnimation`) and file system "
"notifications."
msgstr ""

#: matplotlib.animation.Animation:33 of
msgid "**blit**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.animation.Animation:26 of
msgid "Whether blitting is used to optimize drawing."
msgstr ""

#: matplotlib.animation.Animation:38 of
msgid ":obj:`FuncAnimation`, :obj:`ArtistAnimation`"
msgstr ""

#: ../../api/_as_gen/matplotlib.animation.Animation.rst:13
msgid "Methods"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ""
":py:obj:`__init__ <matplotlib.animation.Animation.__init__>`\\ "
"\\(fig\\[\\, event\\_source\\, blit\\]\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ""
":py:obj:`new_frame_seq <matplotlib.animation.Animation.new_frame_seq>`\\ "
"\\(\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:2
#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid "Return a new sequence of frame information."
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ""
":py:obj:`new_saved_frame_seq "
"<matplotlib.animation.Animation.new_saved_frame_seq>`\\ \\(\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.new_saved_frame_seq:2 of
msgid "Return a new sequence of saved/cached frame information."
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`pause <matplotlib.animation.Animation.pause>`\\ \\(\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.pause:2 of
msgid "Pause the animation."
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ":py:obj:`resume <matplotlib.animation.Animation.resume>`\\ \\(\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.resume:2 of
msgid "Resume the animation."
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ""
":py:obj:`save <matplotlib.animation.Animation.save>`\\ \\(filename\\[\\, "
"writer\\, fps\\, dpi\\, codec\\, ...\\]\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.save:2 of
msgid "Save the animation as a movie file by drawing every frame."
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ""
":py:obj:`to_html5_video "
"<matplotlib.animation.Animation.to_html5_video>`\\ "
"\\(\\[embed\\_limit\\]\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.to_html5_video:2 of
msgid "Convert the animation to an HTML5 ``<video>`` tag."
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1 of
msgid ""
":py:obj:`to_jshtml <matplotlib.animation.Animation.to_jshtml>`\\ "
"\\(\\[fps\\, embed\\_frames\\, default\\_mode\\]\\)"
msgstr ""

#: matplotlib.animation.Animation.new_frame_seq:1:<autosummary>:1
#: matplotlib.animation.Animation.to_jshtml:2 of
msgid "Generate HTML representation of the animation."
msgstr ""

#: matplotlib.animation.Animation.save:8 of
msgid "**filename**"
msgstr ""

#: matplotlib.animation.Animation.to_html5_video:35 of
msgid "str"
msgstr ""

#: matplotlib.animation.Animation.save:8 of
msgid "The output filename, e.g., :file:`mymovie.mp4`."
msgstr ""

#: matplotlib.animation.Animation.save:12 of
msgid "**writer** : `MovieWriter` or str, default: :rc:`animation.writer`"
msgstr ""

#: matplotlib.animation.Animation.save:11 of
msgid ""
"MovieWriter or str, default: rcParams[\"animation.writer\"] (default: "
"'ffmpeg')"
msgstr ""

#: matplotlib.animation.Animation.save:11 of
msgid ""
"A `MovieWriter` instance to use or a key that identifies a class to use, "
"such as 'ffmpeg'."
msgstr ""

#: matplotlib.animation.Animation.save:16
#: matplotlib.animation.Animation.to_jshtml:9 of
msgid "**fps**"
msgstr ""

#: of
msgid "int, optional"
msgstr ""

#: matplotlib.animation.Animation.save:15 of
msgid ""
"Movie frame rate (per second).  If not set, the frame rate from the "
"animation's frame interval."
msgstr ""

#: matplotlib.animation.Animation.save:20 of
msgid "**dpi** : float, default: :rc:`savefig.dpi`"
msgstr ""

#: of
msgid "float, default:"
msgstr ""

#: matplotlib.animation.Animation.save:19 of
msgid ""
"Controls the dots per inch for the movie frames.  Together with the "
"figure's size in inches, this controls the size of the movie."
msgstr ""

#: matplotlib.animation.Animation.save:24 of
msgid "**codec** : str, default: :rc:`animation.codec`."
msgstr ""

#: of
msgid "str, default:"
msgstr ""

#: matplotlib.animation.Animation.save:23 of
msgid ""
"The video codec to use.  Not all codecs are supported by a given "
"`MovieWriter`."
msgstr ""

#: matplotlib.animation.Animation.save:29 of
msgid "**bitrate** : int, default: :rc:`animation.bitrate`"
msgstr ""

#: of
msgid "int, default:"
msgstr ""

#: matplotlib.animation.Animation.save:27 of
msgid ""
"The bitrate of the movie, in kilobits per second.  Higher values means "
"higher quality movies, but increase the file size.  A value of -1 lets "
"the underlying movie encoder select the bitrate."
msgstr ""

#: matplotlib.animation.Animation.save:34 of
msgid "**extra_args**"
msgstr ""

#: of
msgid "list of str or None, optional"
msgstr ""

#: matplotlib.animation.Animation.save:32 of
msgid ""
"Extra command-line arguments passed to the underlying movie encoder.  The"
" default, None, means to use :rc:`animation.[name-of-encoder]_args` for "
"the builtin writers."
msgstr ""

#: matplotlib.animation.Animation.save:39 of
msgid "**metadata**"
msgstr ""

#: of
msgid "dict[str, str], default: {}"
msgstr ""

#: matplotlib.animation.Animation.save:37 of
msgid ""
"Dictionary of keys and values for metadata to include in the output file."
" Some keys that may be of use include: title, artist, genre, subject, "
"copyright, srcform, comment."
msgstr ""

#: matplotlib.animation.Animation.save:46 of
msgid "**extra_anim**"
msgstr ""

#: of
msgid "list, default: []"
msgstr ""

#: matplotlib.animation.Animation.save:42 of
msgid ""
"Additional `Animation` objects that should be included in the saved movie"
" file. These need to be from the same `matplotlib.figure.Figure` "
"instance. Also, animation frames will just be simply combined, so there "
"should be a 1:1 correspondence between the frames from the different "
"animations."
msgstr ""

#: matplotlib.animation.Animation.save:50 of
msgid "**savefig_kwargs**"
msgstr ""

#: of
msgid "dict, default: {}"
msgstr ""

#: matplotlib.animation.Animation.save:49 of
msgid ""
"Keyword arguments passed to each `~.Figure.savefig` call used to save the"
" individual frames."
msgstr ""

#: matplotlib.animation.Animation.save:73 of
msgid "**progress_callback**"
msgstr ""

#: of
msgid "function, optional"
msgstr ""

#: matplotlib.animation.Animation.save:53 of
msgid ""
"A callback function that will be called for every frame to notify the "
"saving progress. It must have the signature ::"
msgstr ""

#: matplotlib.animation.Animation.save:58 of
msgid ""
"where *current_frame* is the current frame number and *total_frames* is "
"the total number of frames to be saved. *total_frames* is set to None, if"
" the total number of frames can not be determined. Return values may "
"exist but are ignored."
msgstr ""

#: matplotlib.animation.Animation.save:63 of
msgid "Example code to write the progress to stdout::"
msgstr ""

#: matplotlib.animation.Animation.save:76 of
msgid "Notes"
msgstr ""

#: matplotlib.animation.Animation.save:77 of
msgid ""
"*fps*, *codec*, *bitrate*, *extra_args* and *metadata* are used to "
"construct a `.MovieWriter` instance and can only be passed if *writer* is"
" a string.  If they are passed as non-*None* and *writer* is a "
"`.MovieWriter`, a `RuntimeError` will be raised."
msgstr ""

#: matplotlib.animation.Animation.to_html5_video:4 of
msgid ""
"This saves the animation as an h264 video, encoded in base64 directly "
"into the HTML5 video tag. This respects :rc:`animation.writer` and "
":rc:`animation.bitrate`. This also makes use of the ``interval`` to "
"control the speed, and uses the ``repeat`` parameter to decide whether to"
" loop."
msgstr ""

#: matplotlib.animation.Animation.to_html5_video:15 of
msgid "**embed_limit**"
msgstr ""

#: of
msgid "float, optional"
msgstr ""

#: matplotlib.animation.Animation.to_html5_video:13 of
msgid ""
"Limit, in MB, of the returned animation. No animation is created if the "
"limit is exceeded. Defaults to :rc:`animation.embed_limit` = 20.0."
msgstr ""

#: matplotlib.animation.Animation.to_html5_video of
msgid "Returns"
msgstr ""

#: matplotlib.animation.Animation.to_html5_video:20 of
msgid ""
"An HTML5 video tag with the animation embedded as base64 encoded h264 "
"video. If the *embed_limit* is exceeded, this returns the string \"Video "
"too large to embed.\""
msgstr ""

#: matplotlib.animation.Animation.to_jshtml:8 of
msgid ""
"Movie frame rate (per second). If not set, the frame rate from the "
"animation's frame interval."
msgstr ""

#: matplotlib.animation.Animation.to_jshtml:12 of
msgid "**embed_frames**"
msgstr ""

#: of
msgid "bool, optional"
msgstr ""

#: matplotlib.animation.Animation.to_jshtml:30 of
msgid "**default_mode**"
msgstr ""

#: of
msgid "str, optional"
msgstr ""

#: matplotlib.animation.Animation.to_jshtml:15 of
msgid ""
"What to do when the animation ends. Must be one of ``{'loop', 'once', "
"'reflect'}``. Defaults to ``'loop'`` if ``self.repeat`` is True, "
"otherwise ``'once'``."
msgstr ""

