# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.specgram.rst:2
msgid "matplotlib.axes.Axes.specgram"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:2 of
msgid "Plot a spectrogram."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:4 of
msgid ""
"Compute and plot a spectrogram of data in *x*.  Data are split into "
"*NFFT* length segments and the spectrum of each section is computed.  The"
" windowing function *window* is applied to each segment, and the amount "
"of overlap of each segment is specified with *noverlap*. The spectrogram "
"is plotted as a colormap (using imshow)."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:14 of
msgid "**x**"
msgstr ""

#: of
msgid "1-D array or sequence"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:14 of
msgid "Array or sequence containing the data."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:18 of
msgid "**Fs**"
msgstr ""

#: of
msgid "float, default: 2"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:17 of
msgid ""
"The sampling frequency (samples per time unit).  It is used to calculate "
"the Fourier frequencies, *freqs*, in cycles per time unit."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:25 of
msgid "**window** : callable or ndarray, default: `.window_hanning`"
msgstr ""

#: of
msgid "callable or ndarray, default:"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:21 of
msgid ""
"A function or a vector of length *NFFT*.  To create window vectors see "
"`.window_hanning`, `.window_none`, `numpy.blackman`, `numpy.hamming`, "
"`numpy.bartlett`, `scipy.signal`, `scipy.signal.get_window`, etc.  If a "
"function is passed as the argument, it must take a data segment as an "
"argument and return the windowed version of the segment."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:30 of
msgid "**sides**"
msgstr ""

#: of
msgid "{'default', 'onesided', 'twosided'}, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:28 of
msgid ""
"Which sides of the spectrum to return. 'default' is one-sided for real "
"data and two-sided for complex data. 'onesided' forces the return of a "
"one-sided spectrum, while 'twosided' forces two-sided."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:39 of
msgid "**pad_to**"
msgstr ""

#: of
msgid "int, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:33 of
msgid ""
"The number of points to which the data segment is padded when performing "
"the FFT.  This can be different from *NFFT*, which specifies the number "
"of data points used.  While not increasing the actual resolution of the "
"spectrum (the minimum distance between resolvable peaks), this can give "
"more points in the plot, allowing for more detail. This corresponds to "
"the *n* parameter in the call to fft(). The default is None, which sets "
"*pad_to* equal to *NFFT*"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:44 of
msgid "**NFFT**"
msgstr ""

#: of
msgid "int, default: 256"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:42 of
msgid ""
"The number of data points used in each block for the FFT.  A power 2 is "
"most efficient.  This should *NOT* be used to get zero padding, or the "
"scaling of the result will be incorrect; use *pad_to* for this instead."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:53 of
msgid "**detrend**"
msgstr ""

#: of
msgid "{'none', 'mean', 'linear'} or callable, default: 'none'"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:47 of
msgid ""
"The function applied to each segment before fft-ing, designed to remove "
"the mean or linear trend.  Unlike in MATLAB, where the *detrend* "
"parameter is a vector, in Matplotlib it is a function.  The "
":mod:`~matplotlib.mlab` module defines `.detrend_none`, `.detrend_mean`, "
"and `.detrend_linear`, but you can use a custom function as well.  You "
"can also use a string to choose one of the functions: 'none' calls "
"`.detrend_none`. 'mean' calls `.detrend_mean`. 'linear' calls "
"`.detrend_linear`."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:59 of
msgid "**scale_by_freq**"
msgstr ""

#: of
msgid "bool, default: True"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:56 of
msgid ""
"Whether the resulting density values should be scaled by the scaling "
"frequency, which gives density in units of Hz^-1.  This allows for "
"integration over the returned frequency values.  The default is True for "
"MATLAB compatibility."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:65 of
msgid "**mode**"
msgstr ""

#: of
msgid "{'default', 'psd', 'magnitude', 'angle', 'phase'}"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:62 of
msgid ""
"What sort of spectrum to use.  Default is 'psd', which takes the power "
"spectral density.  'magnitude' returns the magnitude spectrum.  'angle' "
"returns the phase spectrum without unwrapping. 'phase' returns the phase "
"spectrum with unwrapping."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:68 of
msgid "**noverlap**"
msgstr ""

#: of
msgid "int, default: 128"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:68 of
msgid "The number of points of overlap between blocks."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:76 of
msgid "**scale**"
msgstr ""

#: of
msgid "{'default', 'linear', 'dB'}"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:71 of
msgid ""
"The scaling of the values in the *spec*.  'linear' is no scaling. 'dB' "
"returns the values in dB scale.  When *mode* is 'psd', this is dB power "
"(10 * log10).  Otherwise this is dB amplitude (20 * log10). 'default' is "
"'dB' if *mode* is 'psd' or 'magnitude' and 'linear' otherwise.  This must"
" be 'linear' if *mode* is 'angle' or 'phase'."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:81 of
msgid "**Fc**"
msgstr ""

#: of
msgid "int, default: 0"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:79 of
msgid ""
"The center frequency of *x*, which offsets the x extents of the plot to "
"reflect the frequency range used when a signal is acquired and then "
"filtered and downsampled to baseband."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:84 of
msgid "**cmap** : `.Colormap`, default: :rc:`image.cmap`"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:83 of
msgid "Colormap, default: rcParams[\"image.cmap\"] (default: 'viridis')"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:90 of
msgid "**xextent** : *None* or (xmin, xmax)"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:89 of
msgid "None or (xmin, xmax)"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:87 of
msgid ""
"The image extent along the x-axis. The default sets *xmin* to the left "
"border of the first bin (*spectrum* column) and *xmax* to the right "
"border of the last bin. Note that for *noverlap>0* the width of the bins "
"is smaller than those of the segments."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:96 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:93 of
msgid ""
"If given, the following parameters also accept a string ``s``, which is "
"interpreted as ``data[s]`` (unless this raises an exception):"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:96 of
msgid "*x*"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:101 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:99 of
msgid ""
"Additional keyword arguments are passed on to `~.axes.Axes.imshow` which "
"makes the specgram image. The origin keyword argument is not supported."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram of
msgid "Returns"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:106 of
msgid "**spectrum**"
msgstr ""

#: of
msgid "2D array"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:106 of
msgid "Columns are the periodograms of successive segments."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:109 of
msgid "**freqs**"
msgstr ""

#: of
msgid "1-D array"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:109 of
msgid "The frequencies corresponding to the rows in *spectrum*."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:113 of
msgid "**t**"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:112 of
msgid ""
"The times corresponding to midpoints of segments (i.e., the columns in "
"*spectrum*)."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:122 of
msgid "**im** : `.AxesImage`"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:121 of
msgid "AxesImage"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:116 of
msgid "The image created by imshow containing the spectrogram."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:127 of
msgid ":obj:`psd`"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:128 of
msgid ""
"Differs in the default overlap; in returning the mean of the segment "
"periodograms; in not returning times; and in generating a line plot "
"instead of colormap."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:129 of
msgid ":obj:`magnitude_spectrum`"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:130 of
msgid ""
"A single spectrum, similar to having a single segment when *mode* is "
"'magnitude'. Plots a line instead of a colormap."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:131 of
msgid ":obj:`angle_spectrum`"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:132 of
msgid ""
"A single spectrum, similar to having a single segment when *mode* is "
"'angle'. Plots a line instead of a colormap."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:133 of
msgid ":obj:`phase_spectrum`"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:134 of
msgid ""
"A single spectrum, similar to having a single segment when *mode* is "
"'phase'. Plots a line instead of a colormap."
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:138 of
msgid "Notes"
msgstr ""

#: matplotlib.axes._axes.Axes.specgram:139 of
msgid ""
"The parameters *detrend* and *scale_by_freq* do only apply when *mode* is"
" set to 'psd'."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.specgram.examples:2
msgid "Examples using ``matplotlib.axes.Axes.specgram``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.specgram.examples:10
msgid "Spectrogram Demo"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.specgram.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.specgram.examples:18
msgid ":ref:`sphx_glr_gallery_images_contours_and_fields_specgram_demo.py`"
msgstr ""

