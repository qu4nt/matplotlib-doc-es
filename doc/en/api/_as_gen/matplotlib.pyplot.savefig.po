# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.pyplot.savefig.rst:2
msgid "matplotlib.pyplot.savefig"
msgstr ""

#: matplotlib.pyplot.savefig:2 of
msgid "Save the current figure."
msgstr ""

#: matplotlib.pyplot.savefig:4 of
msgid "Call signature::"
msgstr ""

#: matplotlib.pyplot.savefig:12 of
msgid "The available output formats depend on the backend being used."
msgstr ""

#: matplotlib.pyplot.savefig of
msgid "Parameters"
msgstr ""

#: matplotlib.pyplot.savefig:33 of
msgid "**fname**"
msgstr ""

#: of
msgid "str or path-like or binary file-like"
msgstr ""

#: matplotlib.pyplot.savefig:17 of
msgid ""
"A path, or a Python file-like object, or possibly some backend-dependent "
"object such as `matplotlib.backends.backend_pdf.PdfPages`."
msgstr ""

#: matplotlib.pyplot.savefig:21 of
msgid ""
"If *format* is set, it determines the output format, and the file is "
"saved as *fname*.  Note that *fname* is used verbatim, and there is no "
"attempt to make the extension, if any, of *fname* match *format*, and no "
"extension is appended."
msgstr ""

#: matplotlib.pyplot.savefig:26 of
msgid ""
"If *format* is not set, then the format is inferred from the extension of"
" *fname*, if there is one.  If *format* is not set and *fname* has no "
"extension, then the file is saved with :rc:`savefig.format` and the "
"appropriate extension is appended to *fname*."
msgstr ""

#: matplotlib.pyplot.savefig of
msgid "Other Parameters"
msgstr ""

#: matplotlib.pyplot.savefig:39 of
msgid "**dpi** : float or 'figure', default: :rc:`savefig.dpi`"
msgstr ""

#: of
msgid "float or 'figure', default:"
msgstr ""

#: matplotlib.pyplot.savefig:38 of
msgid "The resolution in dots per inch.  If 'figure', use the figure's dpi value."
msgstr ""

#: matplotlib.pyplot.savefig:43 of
msgid "**format**"
msgstr ""

#: of
msgid "str"
msgstr ""

#: matplotlib.pyplot.savefig:42 of
msgid ""
"The file format, e.g. 'png', 'pdf', 'svg', ... The behavior when this is "
"unset is documented under *fname*."
msgstr ""

#: matplotlib.pyplot.savefig:55 of
msgid "**metadata**"
msgstr ""

#: of
msgid "dict, optional"
msgstr ""

#: matplotlib.pyplot.savefig:46 of
msgid ""
"Key/value pairs to store in the image metadata. The supported keys and "
"defaults depend on the image format and backend:"
msgstr ""

#: matplotlib.pyplot.savefig:49 of
msgid ""
"'png' with Agg backend: See the parameter ``metadata`` of "
"`~.FigureCanvasAgg.print_png`."
msgstr ""

#: matplotlib.pyplot.savefig:51 of
msgid ""
"'pdf' with pdf backend: See the parameter ``metadata`` of "
"`~.backend_pdf.PdfPages`."
msgstr ""

#: matplotlib.pyplot.savefig:53 of
msgid ""
"'svg' with svg backend: See the parameter ``metadata`` of "
"`~.FigureCanvasSVG.print_svg`."
msgstr ""

#: matplotlib.pyplot.savefig:55 of
msgid "'eps' and 'ps' with PS backend: Only 'Creator' is supported."
msgstr ""

#: matplotlib.pyplot.savefig:59 of
msgid "**bbox_inches** : str or `.Bbox`, default: :rc:`savefig.bbox`"
msgstr ""

#: of
msgid "str or"
msgstr ""

#: matplotlib.pyplot.savefig:58 of
msgid ""
"Bounding box in inches: only the given portion of the figure is saved.  "
"If 'tight', try to figure out the tight bbox of the figure."
msgstr ""

#: matplotlib.pyplot.savefig:62 of
msgid "**pad_inches** : float, default: :rc:`savefig.pad_inches`"
msgstr ""

#: of
msgid "float, default:"
msgstr ""

#: matplotlib.pyplot.savefig:62 of
msgid "Amount of padding around the figure when bbox_inches is 'tight'."
msgstr ""

#: matplotlib.pyplot.savefig:66 of
msgid "**facecolor** : color or 'auto', default: :rc:`savefig.facecolor`"
msgstr ""

#: of
msgid "color or 'auto', default:"
msgstr ""

#: matplotlib.pyplot.savefig:65 of
msgid "The facecolor of the figure.  If 'auto', use the current figure facecolor."
msgstr ""

#: matplotlib.pyplot.savefig:70 of
msgid "**edgecolor** : color or 'auto', default: :rc:`savefig.edgecolor`"
msgstr ""

#: matplotlib.pyplot.savefig:69 of
msgid "The edgecolor of the figure.  If 'auto', use the current figure edgecolor."
msgstr ""

#: matplotlib.pyplot.savefig:78 of
msgid "**backend**"
msgstr ""

#: of
msgid "str, optional"
msgstr ""

#: matplotlib.pyplot.savefig:73 of
msgid ""
"Use a non-default backend to render the file, e.g. to render a png file "
"with the \"cairo\" backend rather than the default \"agg\", or a pdf file"
" with the \"pgf\" backend rather than the default \"pdf\".  Note that the"
" default backend is normally sufficient.  See :ref:`the-builtin-backends`"
" for a list of valid backends for each file format.  Custom backends can "
"be referenced as \"module://...\"."
msgstr ""

#: matplotlib.pyplot.savefig:81 of
msgid "**orientation**"
msgstr ""

#: of
msgid "{'landscape', 'portrait'}"
msgstr ""

#: matplotlib.pyplot.savefig:81 of
msgid "Currently only supported by the postscript backend."
msgstr ""

#: matplotlib.pyplot.savefig:86 of
msgid "**papertype**"
msgstr ""

#: matplotlib.pyplot.savefig:84 of
msgid ""
"One of 'letter', 'legal', 'executive', 'ledger', 'a0' through 'a10', 'b0'"
" through 'b10'. Only supported for postscript output."
msgstr ""

#: matplotlib.pyplot.savefig:102 of
msgid "**transparent**"
msgstr ""

#: of
msgid "bool"
msgstr ""

#: matplotlib.pyplot.savefig:89 of
msgid ""
"If *True*, the Axes patches will all be transparent; the Figure patch "
"will also be transparent unless *facecolor* and/or *edgecolor* are "
"specified via kwargs."
msgstr ""

#: matplotlib.pyplot.savefig:93 of
msgid ""
"If *False* has no effect and the color of the Axes and Figure patches are"
" unchanged (unless the Figure patch is specified via the *facecolor* "
"and/or *edgecolor* keyword arguments in which case those colors are "
"used)."
msgstr ""

#: matplotlib.pyplot.savefig:98 of
msgid ""
"The transparency of these patches will be restored to their original "
"values upon exit of this function."
msgstr ""

#: matplotlib.pyplot.savefig:101 of
msgid ""
"This is useful, for example, for displaying a plot on top of a colored "
"background on a web page."
msgstr ""

#: matplotlib.pyplot.savefig:106 of
msgid "**bbox_extra_artists** : list of `~matplotlib.artist.Artist`, optional"
msgstr ""

#: of
msgid "list of"
msgstr ""

#: matplotlib.pyplot.savefig:105 of
msgid ""
"A list of extra artists that will be considered when the tight bbox is "
"calculated."
msgstr ""

#: matplotlib.pyplot.savefig:119 of
msgid "**pil_kwargs**"
msgstr ""

#: matplotlib.pyplot.savefig:109 of
msgid ""
"Additional keyword arguments that are passed to `PIL.Image.Image.save` "
"when saving the figure."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.pyplot.savefig.examples:2
msgid "Examples using ``matplotlib.pyplot.savefig``"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:10
msgid "Print Stdout"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:10
#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:18
msgid ":ref:`sphx_glr_gallery_misc_print_stdout_sgskip.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:29
msgid "SVG Histogram"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:29
#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:37
msgid ":ref:`sphx_glr_gallery_user_interfaces_svg_histogram_sgskip.py`"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:48
msgid "SVG Tooltip"
msgstr ""

#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:48
#: ../../api/_as_gen/matplotlib.pyplot.savefig.examples:56
msgid ":ref:`sphx_glr_gallery_user_interfaces_svg_tooltip_sgskip.py`"
msgstr ""

