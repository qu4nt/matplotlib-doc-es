# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.rst:2
msgid "matplotlib.axes.Axes.fill\\_between"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:2 of
msgid "Fill the area between two horizontal curves."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:4 of
msgid ""
"The curves are defined by the points (*x*, *y1*) and (*x*, *y2*).  This "
"creates one or multiple polygons describing the filled area."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:8 of
msgid "You may exclude some horizontal sections from filling using *where*."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:10 of
msgid ""
"By default, the edges connect the given points directly.  Use *step* if "
"the filling should be a step function, i.e. constant in between *x*."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between of
msgid "Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:17 of
msgid "**x**"
msgstr ""

#: of
msgid "array (length N)"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:17 of
msgid "The x coordinates of the nodes defining the curves."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:20 of
msgid "**y1**"
msgstr ""

#: of
msgid "array (length N) or scalar"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:20 of
msgid "The y coordinates of the nodes defining the first curve."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:23 of
msgid "**y2**"
msgstr ""

#: of
msgid "array (length N) or scalar, default: 0"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:23 of
msgid "The y coordinates of the nodes defining the second curve."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:32 of
msgid "**where**"
msgstr ""

#: of
msgid "array of bool (length N), optional"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:26 of
msgid ""
"Define *where* to exclude some horizontal regions from being filled. The "
"filled regions are defined by the coordinates ``x[where]``. More "
"precisely, fill between ``x[i]`` and ``x[i+1]`` if ``where[i] and "
"where[i+1]``.  Note that this definition implies that an isolated *True* "
"value between two *False* values in *where* will not result in filling.  "
"Both sides of the *True* position remain unfilled due to the adjacent "
"*False* values."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:46 of
msgid "**interpolate**"
msgstr ""

#: of
msgid "bool, default: False"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:35 of
msgid ""
"This option is only relevant if *where* is used and the two curves are "
"crossing each other."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:38 of
msgid ""
"Semantically, *where* is often used for *y1* > *y2* or similar.  By "
"default, the nodes of the polygon defining the filled region will only be"
" placed at the positions in the *x* array. Such a polygon cannot describe"
" the above semantics close to the intersection.  The x-sections "
"containing the intersection are simply clipped."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:45 of
msgid ""
"Setting *interpolate* to *True* will calculate the actual intersection "
"point and extend the filled region up to this point."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:59 of
msgid "**step**"
msgstr ""

#: of
msgid "{'pre', 'post', 'mid'}, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:49 of
msgid ""
"Define *step* if the filling should be a step function, i.e. constant in "
"between *x*.  The value determines where the step will occur:"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:53 of
msgid ""
"'pre': The y value is continued constantly to the left from every *x* "
"position, i.e. the interval ``(x[i-1], x[i]]`` has the value ``y[i]``."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:56 of
msgid ""
"'post': The y value is continued constantly to the right from every *x* "
"position, i.e. the interval ``[x[i], x[i+1])`` has the value ``y[i]``."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:59 of
msgid "'mid': Steps occur half-way between the *x* positions."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between of
msgid "Returns"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:66 of
msgid "`.PolyCollection`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:64 of
msgid "A `.PolyCollection` containing the plotted polygons."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between of
msgid "Other Parameters"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:74 of
msgid "**data**"
msgstr ""

#: of
msgid "indexable object, optional"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:71 of
msgid ""
"If given, the following parameters also accept a string ``s``, which is "
"interpreted as ``data[s]`` (unless this raises an exception):"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:74 of
msgid "*x*, *y1*, *y2*, *where*"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:129 of
msgid "**\\*\\*kwargs**"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:77 of
msgid ""
"All other keyword arguments are passed on to `.PolyCollection`. They "
"control the `.Polygon` properties:"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:84 of
msgid "Property"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:84 of
msgid "Description"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:86 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:86 of
msgid ""
"a filter function, which takes a (m, n, 3) float array and a dpi value, "
"and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:87 of
msgid ":meth:`alpha <matplotlib.collections.Collection.set_alpha>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:87 of
msgid "array-like or scalar or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:88 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:88
#: matplotlib.axes._axes.Axes.fill_between:94
#: matplotlib.axes._axes.Axes.fill_between:103
#: matplotlib.axes._axes.Axes.fill_between:115
#: matplotlib.axes._axes.Axes.fill_between:124 of
msgid "bool"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:89 of
msgid ""
":meth:`antialiased <matplotlib.collections.Collection.set_antialiased>` "
"or aa or antialiaseds"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:89 of
msgid "bool or list of bools"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:90 of
msgid ":meth:`array <matplotlib.cm.ScalarMappable.set_array>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:90 of
msgid "array-like or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:91 of
msgid ":meth:`capstyle <matplotlib.collections.Collection.set_capstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:91 of
msgid "`.CapStyle` or {'butt', 'projecting', 'round'}"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:92 of
msgid ":meth:`clim <matplotlib.cm.ScalarMappable.set_clim>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:92 of
msgid "(vmin: float, vmax: float)"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:93 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:93 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:94 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:95 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:95 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:96 of
msgid ":meth:`cmap <matplotlib.cm.ScalarMappable.set_cmap>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:96 of
msgid "`.Colormap` or str or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:97 of
msgid ":meth:`color <matplotlib.collections.Collection.set_color>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:97 of
msgid "color or list of rgba tuples"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:98 of
msgid ""
":meth:`edgecolor <matplotlib.collections.Collection.set_edgecolor>` or ec"
" or edgecolors"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:98 of
msgid "color or list of colors or 'face'"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:99 of
msgid ""
":meth:`facecolor <matplotlib.collections.Collection.set_facecolor>` or "
"facecolors or fc"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:99 of
msgid "color or list of colors"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:100 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:100 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:101 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:101
#: matplotlib.axes._axes.Axes.fill_between:120 of
msgid "str"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:102 of
msgid ":meth:`hatch <matplotlib.collections.Collection.set_hatch>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:102 of
msgid "{'/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*'}"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:103 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:104 of
msgid ":meth:`joinstyle <matplotlib.collections.Collection.set_joinstyle>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:104 of
msgid "`.JoinStyle` or {'miter', 'round', 'bevel'}"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:105 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:105 of
msgid "object"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:106 of
msgid ""
":meth:`linestyle <matplotlib.collections.Collection.set_linestyle>` or "
"dashes or linestyles or ls"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:106 of
msgid "str or tuple or list thereof"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:107 of
msgid ""
":meth:`linewidth <matplotlib.collections.Collection.set_linewidth>` or "
"linewidths or lw"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:107 of
msgid "float or list of floats"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:108 of
msgid ":meth:`norm <matplotlib.cm.ScalarMappable.set_norm>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:108 of
msgid "`.Normalize` or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:109 of
msgid ""
":meth:`offset_transform "
"<matplotlib.collections.Collection.set_offset_transform>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:109
#: matplotlib.axes._axes.Axes.fill_between:119 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:110 of
msgid ":meth:`offsets <matplotlib.collections.Collection.set_offsets>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:110 of
msgid "(N, 2) or (2,) array-like"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:111 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:111 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:112 of
msgid ":meth:`paths <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:112
#: matplotlib.axes._axes.Axes.fill_between:122 of
msgid "list of array-like"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:113 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:113 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:114 of
msgid ":meth:`pickradius <matplotlib.collections.Collection.set_pickradius>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:114
#: matplotlib.axes._axes.Axes.fill_between:125 of
msgid "float"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:115 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:116 of
msgid ":meth:`sizes <matplotlib.collections._CollectionWithSizes.set_sizes>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:116 of
msgid "ndarray or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:117 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:117 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:118 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:118 of
msgid "bool or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:119 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:120 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:121 of
msgid ":meth:`urls <matplotlib.collections.Collection.set_urls>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:121 of
msgid "list of str or None"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:122 of
msgid ":meth:`verts <matplotlib.collections.PolyCollection.set_verts>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:123 of
msgid ""
":meth:`verts_and_codes "
"<matplotlib.collections.PolyCollection.set_verts_and_codes>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:123 of
msgid "unknown"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:124 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:125 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:134 of
msgid ":obj:`fill_between`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:135 of
msgid "Fill between two sets of y-values."
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:136 of
msgid ":obj:`fill_betweenx`"
msgstr ""

#: matplotlib.axes._axes.Axes.fill_between:137 of
msgid "Fill between two sets of x-values."
msgstr ""

#: ../../../../../../../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:2
msgid "Examples using ``matplotlib.axes.Axes.fill_between``"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:10
msgid "Fill Between and Alpha"
msgstr ""

#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:10
#: ../../api/_as_gen/matplotlib.axes.Axes.fill_between.examples:18
msgid ":ref:`sphx_glr_gallery_lines_bars_and_markers_fill_between_alpha.py`"
msgstr ""

