# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/_as_gen/mpl_toolkits.axisartist.axis_artist.LabelBase.rst:2
msgid "mpl\\_toolkits.axisartist.axis\\_artist.LabelBase"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase:1 of
msgid "Bases: :py:class:`matplotlib.text.Text`"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase:2 of
msgid ""
"A base class for AxisLabel and TickLabels. The position and angle of the "
"text are calculated by to offset_ref_angle, text_ref_angle, and "
"offset_radius attributes."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase:25 of
msgid "Create a `.Text` instance at *x*, *y* with string *text*."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase:27 of
msgid "Valid keyword arguments are:"
msgstr ""

#: matplotlib.artist.LabelBase.set:10
#: mpl_toolkits.axisartist.axis_artist.LabelBase:33 of
msgid "Property"
msgstr ""

#: matplotlib.artist.LabelBase.set:10
#: mpl_toolkits.axisartist.axis_artist.LabelBase:33 of
msgid "Description"
msgstr ""

#: matplotlib.artist.LabelBase.set:12
#: mpl_toolkits.axisartist.axis_artist.LabelBase:35 of
msgid ":meth:`agg_filter <matplotlib.artist.Artist.set_agg_filter>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:12
#: mpl_toolkits.axisartist.axis_artist.LabelBase:35 of
msgid ""
"a filter function, which takes a (m, n, 3) float array and a dpi value, "
"and returns a (m, n, 3) array"
msgstr ""

#: matplotlib.artist.LabelBase.set:13
#: mpl_toolkits.axisartist.axis_artist.LabelBase:36 of
msgid ":meth:`alpha <matplotlib.artist.Artist.set_alpha>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:13
#: mpl_toolkits.axisartist.axis_artist.LabelBase:36 of
msgid "scalar or None"
msgstr ""

#: matplotlib.artist.LabelBase.set:14
#: mpl_toolkits.axisartist.axis_artist.LabelBase:37 of
msgid ":meth:`animated <matplotlib.artist.Artist.set_animated>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:14 matplotlib.artist.LabelBase.set:18
#: matplotlib.artist.LabelBase.set:31 matplotlib.artist.LabelBase.set:36
#: matplotlib.artist.LabelBase.set:40 matplotlib.artist.LabelBase.set:47
#: matplotlib.artist.LabelBase.set:51 matplotlib.artist.LabelBase.set:52
#: mpl_toolkits.axisartist.axis_artist.LabelBase:37
#: mpl_toolkits.axisartist.axis_artist.LabelBase:54
#: mpl_toolkits.axisartist.axis_artist.LabelBase:59
#: mpl_toolkits.axisartist.axis_artist.LabelBase:63
#: mpl_toolkits.axisartist.axis_artist.LabelBase:70
#: mpl_toolkits.axisartist.axis_artist.LabelBase:74
#: mpl_toolkits.axisartist.axis_artist.LabelBase:75 of
msgid "bool"
msgstr ""

#: matplotlib.artist.LabelBase.set:15
#: mpl_toolkits.axisartist.axis_artist.LabelBase:38 of
msgid ":meth:`backgroundcolor <matplotlib.text.Text.set_backgroundcolor>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:15 matplotlib.artist.LabelBase.set:20
#: mpl_toolkits.axisartist.axis_artist.LabelBase:38
#: mpl_toolkits.axisartist.axis_artist.LabelBase:43 of
msgid "color"
msgstr ""

#: matplotlib.artist.LabelBase.set:16
#: mpl_toolkits.axisartist.axis_artist.LabelBase:39 of
msgid ":meth:`bbox <matplotlib.text.Text.set_bbox>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:16
#: mpl_toolkits.axisartist.axis_artist.LabelBase:39 of
msgid "dict with properties for `.patches.FancyBboxPatch`"
msgstr ""

#: matplotlib.artist.LabelBase.set:17
#: mpl_toolkits.axisartist.axis_artist.LabelBase:40 of
msgid ":meth:`clip_box <matplotlib.artist.Artist.set_clip_box>`"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase:40
#: mpl_toolkits.axisartist.axis_artist.LabelBase:41
#: mpl_toolkits.axisartist.axis_artist.LabelBase:42 of
msgid "unknown"
msgstr ""

#: matplotlib.artist.LabelBase.set:18
#: mpl_toolkits.axisartist.axis_artist.LabelBase:41 of
msgid ":meth:`clip_on <matplotlib.artist.Artist.set_clip_on>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:19
#: mpl_toolkits.axisartist.axis_artist.LabelBase:42 of
msgid ":meth:`clip_path <matplotlib.artist.Artist.set_clip_path>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:20
#: mpl_toolkits.axisartist.axis_artist.LabelBase:43 of
msgid ":meth:`color <matplotlib.text.Text.set_color>` or c"
msgstr ""

#: matplotlib.artist.LabelBase.set:21
#: mpl_toolkits.axisartist.axis_artist.LabelBase:44 of
msgid ":meth:`figure <matplotlib.artist.Artist.set_figure>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:21
#: mpl_toolkits.axisartist.axis_artist.LabelBase:44 of
msgid "`.Figure`"
msgstr ""

#: matplotlib.artist.LabelBase.set:22
#: mpl_toolkits.axisartist.axis_artist.LabelBase:45 of
msgid ":meth:`fontfamily <matplotlib.text.Text.set_fontfamily>` or family"
msgstr ""

#: matplotlib.artist.LabelBase.set:22
#: mpl_toolkits.axisartist.axis_artist.LabelBase:45 of
msgid "{FONTNAME, 'serif', 'sans-serif', 'cursive', 'fantasy', 'monospace'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:23
#: mpl_toolkits.axisartist.axis_artist.LabelBase:46 of
msgid ""
":meth:`fontproperties <matplotlib.text.Text.set_fontproperties>` or font "
"or font_properties"
msgstr ""

#: matplotlib.artist.LabelBase.set:23
#: mpl_toolkits.axisartist.axis_artist.LabelBase:46 of
msgid "`.font_manager.FontProperties` or `str` or `pathlib.Path`"
msgstr ""

#: matplotlib.artist.LabelBase.set:24
#: mpl_toolkits.axisartist.axis_artist.LabelBase:47 of
msgid ":meth:`fontsize <matplotlib.text.Text.set_fontsize>` or size"
msgstr ""

#: matplotlib.artist.LabelBase.set:24
#: mpl_toolkits.axisartist.axis_artist.LabelBase:47 of
msgid ""
"float or {'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', "
"'xx-large'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:25
#: mpl_toolkits.axisartist.axis_artist.LabelBase:48 of
msgid ":meth:`fontstretch <matplotlib.text.Text.set_fontstretch>` or stretch"
msgstr ""

#: matplotlib.artist.LabelBase.set:25
#: mpl_toolkits.axisartist.axis_artist.LabelBase:48 of
msgid ""
"{a numeric value in range 0-1000, 'ultra-condensed', 'extra-condensed', "
"'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', "
"'extra-expanded', 'ultra-expanded'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:26
#: mpl_toolkits.axisartist.axis_artist.LabelBase:49 of
msgid ":meth:`fontstyle <matplotlib.text.Text.set_fontstyle>` or style"
msgstr ""

#: matplotlib.artist.LabelBase.set:26
#: mpl_toolkits.axisartist.axis_artist.LabelBase:49 of
msgid "{'normal', 'italic', 'oblique'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:27
#: mpl_toolkits.axisartist.axis_artist.LabelBase:50 of
msgid ":meth:`fontvariant <matplotlib.text.Text.set_fontvariant>` or variant"
msgstr ""

#: matplotlib.artist.LabelBase.set:27
#: mpl_toolkits.axisartist.axis_artist.LabelBase:50 of
msgid "{'normal', 'small-caps'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:28
#: mpl_toolkits.axisartist.axis_artist.LabelBase:51 of
msgid ":meth:`fontweight <matplotlib.text.Text.set_fontweight>` or weight"
msgstr ""

#: matplotlib.artist.LabelBase.set:28
#: mpl_toolkits.axisartist.axis_artist.LabelBase:51 of
msgid ""
"{a numeric value in range 0-1000, 'ultralight', 'light', 'normal', "
"'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', "
"'bold', 'heavy', 'extra bold', 'black'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:29
#: mpl_toolkits.axisartist.axis_artist.LabelBase:52 of
msgid ":meth:`gid <matplotlib.artist.Artist.set_gid>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:29 matplotlib.artist.LabelBase.set:34
#: matplotlib.artist.LabelBase.set:48
#: mpl_toolkits.axisartist.axis_artist.LabelBase:52
#: mpl_toolkits.axisartist.axis_artist.LabelBase:57
#: mpl_toolkits.axisartist.axis_artist.LabelBase:71 of
msgid "str"
msgstr ""

#: matplotlib.artist.LabelBase.set:30
#: mpl_toolkits.axisartist.axis_artist.LabelBase:53 of
msgid ""
":meth:`horizontalalignment "
"<matplotlib.text.Text.set_horizontalalignment>` or ha"
msgstr ""

#: matplotlib.artist.LabelBase.set:30
#: mpl_toolkits.axisartist.axis_artist.LabelBase:53 of
msgid "{'center', 'right', 'left'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:31
#: mpl_toolkits.axisartist.axis_artist.LabelBase:54 of
msgid ":meth:`in_layout <matplotlib.artist.Artist.set_in_layout>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:32
#: mpl_toolkits.axisartist.axis_artist.LabelBase:55 of
msgid ":meth:`label <matplotlib.artist.Artist.set_label>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:32 matplotlib.artist.LabelBase.set:45
#: mpl_toolkits.axisartist.axis_artist.LabelBase:55
#: mpl_toolkits.axisartist.axis_artist.LabelBase:68 of
msgid "object"
msgstr ""

#: matplotlib.artist.LabelBase.set:33
#: mpl_toolkits.axisartist.axis_artist.LabelBase:56 of
msgid ":meth:`linespacing <matplotlib.text.Text.set_linespacing>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:33
#: mpl_toolkits.axisartist.axis_artist.LabelBase:56 of
msgid "float (multiple of font size)"
msgstr ""

#: matplotlib.artist.LabelBase.set:34
#: mpl_toolkits.axisartist.axis_artist.LabelBase:57 of
msgid ":meth:`math_fontfamily <matplotlib.text.Text.set_math_fontfamily>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:35
#: mpl_toolkits.axisartist.axis_artist.LabelBase:58 of
msgid ":meth:`multialignment <matplotlib.text.Text.set_multialignment>` or ma"
msgstr ""

#: matplotlib.artist.LabelBase.set:35
#: mpl_toolkits.axisartist.axis_artist.LabelBase:58 of
msgid "{'left', 'right', 'center'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:36
#: mpl_toolkits.axisartist.axis_artist.LabelBase:59 of
msgid ":meth:`parse_math <matplotlib.text.Text.set_parse_math>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:37
#: mpl_toolkits.axisartist.axis_artist.LabelBase:60 of
msgid ":meth:`path_effects <matplotlib.artist.Artist.set_path_effects>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:37
#: mpl_toolkits.axisartist.axis_artist.LabelBase:60 of
msgid "`.AbstractPathEffect`"
msgstr ""

#: matplotlib.artist.LabelBase.set:38
#: mpl_toolkits.axisartist.axis_artist.LabelBase:61 of
msgid ":meth:`picker <matplotlib.artist.Artist.set_picker>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:38
#: mpl_toolkits.axisartist.axis_artist.LabelBase:61 of
msgid "None or bool or float or callable"
msgstr ""

#: matplotlib.artist.LabelBase.set:39
#: mpl_toolkits.axisartist.axis_artist.LabelBase:62 of
msgid ":meth:`position <matplotlib.text.Text.set_position>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:39
#: mpl_toolkits.axisartist.axis_artist.LabelBase:62 of
msgid "(float, float)"
msgstr ""

#: matplotlib.artist.LabelBase.set:40
#: mpl_toolkits.axisartist.axis_artist.LabelBase:63 of
msgid ":meth:`rasterized <matplotlib.artist.Artist.set_rasterized>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:41
#: mpl_toolkits.axisartist.axis_artist.LabelBase:64 of
msgid ":meth:`rotation <matplotlib.text.Text.set_rotation>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:41
#: mpl_toolkits.axisartist.axis_artist.LabelBase:64 of
msgid "float or {'vertical', 'horizontal'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:42
#: mpl_toolkits.axisartist.axis_artist.LabelBase:65 of
msgid ":meth:`rotation_mode <matplotlib.text.Text.set_rotation_mode>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:42
#: mpl_toolkits.axisartist.axis_artist.LabelBase:65 of
msgid "{None, 'default', 'anchor'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:43
#: mpl_toolkits.axisartist.axis_artist.LabelBase:66 of
msgid ":meth:`sketch_params <matplotlib.artist.Artist.set_sketch_params>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:43
#: mpl_toolkits.axisartist.axis_artist.LabelBase:66 of
msgid "(scale: float, length: float, randomness: float)"
msgstr ""

#: matplotlib.artist.LabelBase.set:44
#: mpl_toolkits.axisartist.axis_artist.LabelBase:67 of
msgid ":meth:`snap <matplotlib.artist.Artist.set_snap>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:44 matplotlib.artist.LabelBase.set:49
#: mpl_toolkits.axisartist.axis_artist.LabelBase:67
#: mpl_toolkits.axisartist.axis_artist.LabelBase:72 of
msgid "bool or None"
msgstr ""

#: matplotlib.artist.LabelBase.set:45
#: mpl_toolkits.axisartist.axis_artist.LabelBase:68 of
msgid ":meth:`text <matplotlib.text.Text.set_text>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:46
#: mpl_toolkits.axisartist.axis_artist.LabelBase:69 of
msgid ":meth:`transform <matplotlib.artist.Artist.set_transform>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:46
#: mpl_toolkits.axisartist.axis_artist.LabelBase:69 of
msgid "`.Transform`"
msgstr ""

#: matplotlib.artist.LabelBase.set:47
#: mpl_toolkits.axisartist.axis_artist.LabelBase:70 of
msgid ""
":meth:`transform_rotates_text "
"<matplotlib.text.Text.set_transform_rotates_text>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:48
#: mpl_toolkits.axisartist.axis_artist.LabelBase:71 of
msgid ":meth:`url <matplotlib.artist.Artist.set_url>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:49
#: mpl_toolkits.axisartist.axis_artist.LabelBase:72 of
msgid ":meth:`usetex <matplotlib.text.Text.set_usetex>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:50
#: mpl_toolkits.axisartist.axis_artist.LabelBase:73 of
msgid ""
":meth:`verticalalignment <matplotlib.text.Text.set_verticalalignment>` or"
" va"
msgstr ""

#: matplotlib.artist.LabelBase.set:50
#: mpl_toolkits.axisartist.axis_artist.LabelBase:73 of
msgid "{'center', 'top', 'bottom', 'baseline', 'center_baseline'}"
msgstr ""

#: matplotlib.artist.LabelBase.set:51
#: mpl_toolkits.axisartist.axis_artist.LabelBase:74 of
msgid ":meth:`visible <matplotlib.artist.Artist.set_visible>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:52
#: mpl_toolkits.axisartist.axis_artist.LabelBase:75 of
msgid ":meth:`wrap <matplotlib.text.Text.set_wrap>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:53
#: mpl_toolkits.axisartist.axis_artist.LabelBase:76 of
msgid ":meth:`x <matplotlib.text.Text.set_x>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:53 matplotlib.artist.LabelBase.set:54
#: matplotlib.artist.LabelBase.set:55
#: mpl_toolkits.axisartist.axis_artist.LabelBase:76
#: mpl_toolkits.axisartist.axis_artist.LabelBase:77
#: mpl_toolkits.axisartist.axis_artist.LabelBase:78 of
msgid "float"
msgstr ""

#: matplotlib.artist.LabelBase.set:54
#: mpl_toolkits.axisartist.axis_artist.LabelBase:77 of
msgid ":meth:`y <matplotlib.text.Text.set_y>`"
msgstr ""

#: matplotlib.artist.LabelBase.set:55
#: mpl_toolkits.axisartist.axis_artist.LabelBase:78 of
msgid ":meth:`zorder <matplotlib.artist.Artist.set_zorder>`"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw:2 of
msgid "Draw the Artist (and its children) using the given renderer."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw:4 of
msgid ""
"This has no effect if the artist is not visible (`.Artist.get_visible` "
"returns False)."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw
#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent of
msgid "Parameters"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw:18 of
msgid "**renderer** : `.RendererBase` subclass."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw:17 of
msgid "RendererBase subclass."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw:21 of
msgid "Notes"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.draw:22 of
msgid "This method is overridden in the Artist subclasses."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent:2 of
msgid "Return the `.Bbox` bounding the text, in display units."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent:4 of
msgid ""
"In addition to being used internally, this is useful for specifying "
"clickable regions in a png file on a web page."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent:14 of
msgid "**renderer**"
msgstr ""

#: of
msgid "Renderer, optional"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent:10 of
msgid ""
"A renderer is needed to compute the bounding box.  If the artist has "
"already been drawn, the renderer is cached; thus, it is only necessary to"
" pass this argument when calling `get_window_extent` before the first "
"`draw`.  In practice, it is usually easier to trigger a draw first (e.g. "
"by saving the figure)."
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent:32 of
msgid "**dpi**"
msgstr ""

#: of
msgid "float, optional"
msgstr ""

#: mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent:17 of
msgid ""
"The dpi value for computing the bbox, defaults to ``self.figure.dpi`` "
"(*not* the renderer dpi); should be set e.g. if to match regions with a "
"figure saved with a custom dpi value."
msgstr ""

#: matplotlib.artist.LabelBase.set:2 of
msgid "Set multiple properties at once."
msgstr ""

#: matplotlib.artist.LabelBase.set:4 of
msgid "Supported properties are"
msgstr ""

#: matplotlib.artist.LabelBase.set:17 of
msgid "`.Bbox`"
msgstr ""

#: matplotlib.artist.LabelBase.set:19 of
msgid "Patch or (Path, Transform) or None"
msgstr ""

