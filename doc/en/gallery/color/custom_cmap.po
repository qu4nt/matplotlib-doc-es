# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gallery/color/custom_cmap.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_gallery_color_custom_cmap.py>` to "
"download the full example code"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:23
msgid "Creating a colormap from a list of colors"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:25
msgid ""
"For more detail on creating and manipulating colormaps see "
":doc:`/tutorials/colors/colormap-manipulation`."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:28
msgid ""
"Creating a :doc:`colormap </tutorials/colors/colormaps>` from a list of "
"colors can be done with the `.LinearSegmentedColormap.from_list` method."
"  You must pass a list of RGB tuples that define the mixture of colors "
"from 0 to 1."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:34
msgid "Creating custom colormaps"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:35
msgid ""
"It is also possible to create a custom mapping for a colormap. This is "
"accomplished by creating dictionary that specifies how the RGB channels "
"change from one end of the cmap to the other."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:39
msgid ""
"Example: suppose you want red to increase from 0 to 1 over the bottom "
"half, green to do the same over the middle half, and blue over the top "
"half.  Then you would use::"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:56
msgid ""
"If, as in this example, there are no discontinuities in the r, g, and b "
"components, then it is quite simple: the second and third element of each"
" tuple, above, is the same--call it \"y\".  The first element (\"x\") "
"defines interpolation intervals over the full range of 0 to 1, and it "
"must span that whole range.  In other words, the values of x divide the "
"0-to-1 range into a set of segments, and y gives the end-point color "
"values for each segment."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:64
msgid ""
"Now consider the green. cdict['green'] is saying that for 0 <= x <= 0.25,"
" y is zero; no green. 0.25 < x <= 0.75, y varies linearly from 0 to 1. x "
"> 0.75, y remains at 1, full green."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:69
msgid ""
"If there are discontinuities, then it is a little more complicated. Label"
" the 3 elements in each row in the cdict entry for a given color as (x, "
"y0, y1).  Then for values of x between x[i] and x[i+1] the color value is"
" interpolated between y1[i] and y0[i+1]."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:74
msgid ""
"Going back to the cookbook example, look at cdict['red']; because y0 != "
"y1, it is saying that for x from 0 to 0.5, red increases from 0 to 1, but"
" then it jumps down, so that for x from 0.5 to 1, red increases from 0.7 "
"to 1.  Green ramps from 0 to 1 as x goes from 0 to 0.5, then jumps back "
"to 0, and ramps back to 1 as x goes from 0.5 to 1.::"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:85
msgid ""
"Above is an attempt to show that for x in the range x[i] to x[i+1], the "
"interpolation is between y1[i] and y0[i+1].  So, y0[0] and y1[-1] are "
"never used."
msgstr ""

#: ../../gallery/color/custom_cmap.rst:115
msgid "--- Colormaps from a list ---"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:150
msgid "--- Custom colormaps ---"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:220
msgid ""
"Now we will use this example to illustrate 2 ways of handling custom "
"colormaps. First, the most direct and explicit:"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:240
msgid ""
"Second, create the map explicitly and register it. Like the first method,"
" this method works with any kind of Colormap, not just a "
"LinearSegmentedColormap:"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:263
msgid "Make the figure:"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:329
msgid "References"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:331
msgid ""
"The use of the following functions, methods, classes and modules is shown"
" in this example:"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:334
msgid "`matplotlib.axes.Axes.imshow` / `matplotlib.pyplot.imshow`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:335
msgid "`matplotlib.figure.Figure.colorbar` / `matplotlib.pyplot.colorbar`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:336
msgid "`matplotlib.colors`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:337
msgid "`matplotlib.colors.LinearSegmentedColormap`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:338
msgid "`matplotlib.colors.LinearSegmentedColormap.from_list`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:339
msgid "`matplotlib.cm`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:340
msgid "`matplotlib.cm.ScalarMappable.set_cmap`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:341
msgid "`matplotlib.cm.register_cmap`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:346
msgid "**Total running time of the script:** ( 0 minutes  1.807 seconds)"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:361
msgid ":download:`Download Python source code: custom_cmap.py <custom_cmap.py>`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:367
msgid ""
":download:`Download Jupyter notebook: custom_cmap.ipynb "
"<custom_cmap.ipynb>`"
msgstr ""

#: ../../gallery/color/custom_cmap.rst:374
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

