# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gallery/statistics/histogram_cumulative.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_gallery_statistics_histogram_cumulative.py>` to "
"download the full example code"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:23
msgid "Using histograms to plot a cumulative distribution"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:25
msgid ""
"This shows how to plot a cumulative, normalized histogram as a step "
"function in order to visualize the empirical cumulative distribution "
"function (CDF) of a sample. We also show the theoretical CDF."
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:29
msgid ""
"A couple of other options to the ``hist`` function are demonstrated. "
"Namely, we use the *normed* parameter to normalize the histogram and a "
"couple of different options to the *cumulative* parameter. The *normed* "
"parameter takes a boolean value. When ``True``, the bin heights are "
"scaled such that the total area of the histogram is 1. The *cumulative* "
"keyword argument is a little more nuanced. Like *normed*, you can pass it"
" True or False, but you can also pass it -1 to reverse the distribution."
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:37
#, python-format
msgid ""
"Since we're showing a normalized and cumulative histogram, these curves "
"are effectively the cumulative distribution functions (CDFs) of the "
"samples. In engineering, empirical CDFs are sometimes called \"non-"
"exceedance\" curves. In other words, you can look at the y-value for a "
"given-x-value to get the probability of and observation from the sample "
"not exceeding that x-value. For example, the value of 225 on the x-axis "
"corresponds to about 0.85 on the y-axis, so there's an 85% chance that an"
" observation in the sample does not exceed 225. Conversely, setting, "
"``cumulative`` to -1 as is done in the last series for this example, "
"creates a \"exceedance\" curve."
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:48
msgid ""
"Selecting different bin counts and sizes can significantly affect the "
"shape of a histogram. The Astropy docs have a great section on how to "
"select these parameters: "
"http://docs.astropy.org/en/stable/visualization/histogram.html"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:109
msgid "References"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:111
msgid ""
"The use of the following functions, methods, classes and modules is shown"
" in this example:"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:114
msgid "`matplotlib.axes.Axes.hist` / `matplotlib.pyplot.hist`"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:129
msgid ""
":download:`Download Python source code: histogram_cumulative.py "
"<histogram_cumulative.py>`"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:135
msgid ""
":download:`Download Jupyter notebook: histogram_cumulative.ipynb "
"<histogram_cumulative.ipynb>`"
msgstr ""

#: ../../gallery/statistics/histogram_cumulative.rst:142
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

