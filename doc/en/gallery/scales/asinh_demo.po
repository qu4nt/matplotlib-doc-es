# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gallery/scales/asinh_demo.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_gallery_scales_asinh_demo.py>` to "
"download the full example code"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:23
msgid "Asinh Demo"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:25
msgid ""
"Illustration of the `asinh <.scale.AsinhScale>` axis scaling, which uses "
"the transformation"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:28
msgid "a \\rightarrow a_0 \\sinh^{-1} (a / a_0)"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:32
msgid ""
"For coordinate values close to zero (i.e. much smaller than the \"linear "
"width\" :math:`a_0`), this leaves values essentially unchanged:"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:35
msgid "a \\rightarrow a + {\\cal O}(a^3)"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:39
msgid "but for larger values (i.e. :math:`|a| \\gg a_0`, this is asymptotically"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:41
msgid "a \\rightarrow a_0 \\, {\\rm sgn}(a) \\ln |a| + {\\cal O}(1)"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:45
msgid ""
"As with the `symlog <.scale.SymmetricalLogScale>` scaling, this allows "
"one to plot quantities that cover a very wide dynamic range that includes"
" both positive and negative values. However, ``symlog`` involves a "
"transformation that has discontinuities in its gradient because it is "
"built from *separate* linear and logarithmic transformations. The "
"``asinh`` scaling uses a transformation that is smooth for all (finite) "
"values, which is both mathematically cleaner and reduces visual artifacts"
" associated with an abrupt transition between linear and logarithmic "
"regions of the plot."
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:57
msgid "`.scale.AsinhScale` is experimental, and the API may change."
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:59
msgid "See `~.scale.AsinhScale`, `~.scale.SymmetricalLogScale`."
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:81
msgid ""
"Compare \"symlog\" and \"asinh\" behaviour on sample y=x graph, where "
"there is a discontinuous gradient in \"symlog\" near y=2:"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:126
msgid "Compare \"asinh\" graphs with different scale parameter \"linear_width\":"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:147
msgid ""
"Compare \"symlog\" and \"asinh\" scalings on 2D Cauchy-distributed random"
" numbers, where one may be able to see more subtle artifacts near y=2 due"
" to the gradient-discontinuity in \"symlog\":"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:177
msgid "References"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:179
msgid "`matplotlib.scale.AsinhScale`"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:180
msgid "`matplotlib.ticker.AsinhLocator`"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:181
msgid "`matplotlib.scale.SymmetricalLogScale`"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:196
msgid ":download:`Download Python source code: asinh_demo.py <asinh_demo.py>`"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:202
msgid ":download:`Download Jupyter notebook: asinh_demo.ipynb <asinh_demo.ipynb>`"
msgstr ""

#: ../../gallery/scales/asinh_demo.rst:209
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

