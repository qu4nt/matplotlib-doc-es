# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gallery/userdemo/colormap_normalizations.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_gallery_userdemo_colormap_normalizations.py>` to "
"download the full example code"
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:23
msgid "Colormap Normalizations"
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:25
msgid "Demonstration of using norm to map colormaps onto data in non-linear ways."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:45
msgid ""
"Lognorm: Instead of pcolor log10(Z1) you can have colorbars that have the"
" exponential labels using a norm."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:86
#: ../../gallery/userdemo/colormap_normalizations.rst:128
#: ../../gallery/userdemo/colormap_normalizations.rst:179
#: ../../gallery/userdemo/colormap_normalizations.rst:243
msgid "Out:"
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:97
msgid ""
"PowerNorm: Here a power-law trend in X partially obscures a rectified "
"sine wave in Y. We can remove the power law using a PowerNorm."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:139
msgid ""
"SymLogNorm: two humps, one negative and one positive, The positive with "
"5-times the amplitude. Linearly, you cannot see detail in the negative "
"hump.  Here we logarithmically scale the positive and negative data "
"separately."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:144
msgid "Note that colorbar labels do not come out looking very good."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:190
msgid ""
"Custom Norm: An example with a customized normalization.  This one uses "
"the example above, and normalizes the negative data differently from the "
"positive."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:254
msgid ""
"BoundaryNorm: For this one you provide the boundaries for your colors, "
"and the Norm puts the first color in between the first pair, the second "
"color between the second pair, etc."
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:299
msgid "**Total running time of the script:** ( 0 minutes  3.083 seconds)"
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:314
msgid ""
":download:`Download Python source code: colormap_normalizations.py "
"<colormap_normalizations.py>`"
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:320
msgid ""
":download:`Download Jupyter notebook: colormap_normalizations.ipynb "
"<colormap_normalizations.ipynb>`"
msgstr ""

#: ../../gallery/userdemo/colormap_normalizations.rst:327
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

