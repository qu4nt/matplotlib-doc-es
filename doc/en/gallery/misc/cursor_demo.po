# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gallery/misc/cursor_demo.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_gallery_misc_cursor_demo.py>` to "
"download the full example code"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:23
msgid "Cross hair cursor"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:25
msgid ""
"This example adds a cross hair as a data cursor.  The cross hair is "
"implemented as regular line objects that are updated on mouse move."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:28
msgid "We show three implementations:"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:30
msgid ""
"A simple cursor implementation that redraws the figure on every mouse "
"move. This is a bit slow and you may notice some lag of the cross hair "
"movement."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:32
msgid "A cursor that uses blitting for speedup of the rendering."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:33
msgid "A cursor that snaps to data points."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:35
msgid ""
"Faster cursoring is possible using native GUI drawing, as in "
":doc:`/gallery/user_interfaces/wxcursor_demo_sgskip`."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:38
msgid ""
"The mpldatacursor__ and mplcursors__ third-party packages can be used to "
"achieve a similar effect."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:107
#: ../../gallery/misc/cursor_demo.rst:214
msgid "Out:"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:119
msgid "Faster redrawing using blitting"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:120
msgid ""
"This technique stores the rendered plot as a background image. Only the "
"changed artists (cross hair lines and text) are rendered anew. They are "
"combined with the background using blitting."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:124
msgid ""
"This technique is significantly faster. It requires a bit more setup "
"because the background has to be stored without the cross hair lines (see"
" ``create_new_background()``). Additionally, a new background has to be "
"created whenever the figure changes. This is achieved by connecting to "
"the ``'draw_event'``."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:226
msgid "Snapping to data points"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:227
msgid ""
"The following cursor snaps its position to the data points of a `.Line2D`"
" object."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:230
msgid ""
"To save unnecessary redraws, the index of the last indicated data point "
"is saved in ``self._last_index``. A redraw is only triggered when the "
"mouse moves far enough so that another data point must be selected. This "
"reduces the lag due to many redraws. Of course, blitting could still be "
"added on top for additional speedup."
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:310
msgid "**Total running time of the script:** ( 0 minutes  1.161 seconds)"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:325
msgid ":download:`Download Python source code: cursor_demo.py <cursor_demo.py>`"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:331
msgid ""
":download:`Download Jupyter notebook: cursor_demo.ipynb "
"<cursor_demo.ipynb>`"
msgstr ""

#: ../../gallery/misc/cursor_demo.rst:338
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

