# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002 - 2012 John Hunter, Darren Dale, Eric Firing, Michael
# Droettboom and the Matplotlib development team; 2012 - 2022 The Matplotlib
# development team
# This file is distributed under the same license as the Matplotlib package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matplotlib 3.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-01 17:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gallery/misc/set_and_get.rst:13
msgid ""
"Click :ref:`here <sphx_glr_download_gallery_misc_set_and_get.py>` to "
"download the full example code"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:23
msgid "Set and get properties"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:25
msgid ""
"The pyplot interface allows you to use ``setp`` and ``getp`` to set and "
"get object properties respectively, as well as to do introspection on the"
" object."
msgstr ""

#: ../../gallery/misc/set_and_get.rst:30
msgid "Setting with ``setp``"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:32
msgid "To set the linestyle of a line to be dashed, you use ``setp``::"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:37
msgid ""
"If you want to know the valid types of arguments, you can provide the "
"name of the property you want to set without a value::"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:43
msgid ""
"If you want to see all the properties that can be set, and their possible"
" values, you can do::"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:48
msgid ""
"``setp`` operates on a single instance or a list of instances.  If you "
"are in query mode introspecting the possible values, only the first "
"instance in the sequence is used.  When actually setting values, all the "
"instances will be set.  For example, suppose you have a list of two "
"lines, the following will make both lines thicker and red::"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:62
msgid "Getting with ``getp``"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:64
msgid ""
"``getp`` returns the value of a given attribute.  You can use it to query"
" the value of a single attribute::"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:70
msgid "or all the attribute/value pairs::"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:82
msgid "Aliases"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:84
msgid ""
"To reduce keystrokes in interactive mode, a number of properties have "
"short aliases, e.g., 'lw' for 'linewidth' and 'mec' for "
"'markeredgecolor'.  When calling set or get in introspection mode, these "
"properties will be listed as 'fullname' or 'aliasname'."
msgstr ""

#: ../../gallery/misc/set_and_get.rst:101
msgid "Out:"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:419
msgid ":download:`Download Python source code: set_and_get.py <set_and_get.py>`"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:425
msgid ""
":download:`Download Jupyter notebook: set_and_get.ipynb "
"<set_and_get.ipynb>`"
msgstr ""

#: ../../gallery/misc/set_and_get.rst:432
msgid ""
"Keywords: matplotlib code example, codex, python plot, pyplot `Gallery "
"generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_"
msgstr ""

